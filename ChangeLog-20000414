2000-04-14  Raph Levien  <raph@gimp.org>

	* librsvg/art_rgba.c:
	  librsvg/art_rgba.h:
	  librsvg/art_rgba_svp.c:
	  librsvg/art_rgba_svp.h: Added GPL copyright notice making clear
	  that these files are part of libart_gpl. Also made .h files
	  C++ friendly.

	* librsvg/rsvg-bpath-util.c:
	  librsvg/rsvg-bpath-util.h:
	  librsvg/rsvg-path.c:
	  librsvg/rsvg-path.h:
	  librsvg/rsvg.c:
	  librsvg/rsvg.h: Added GPL copyright notice assigning copyright
	  to Eazel. Also made .h files C++ friendly.

	* librsvg/rsvg-bpath.c: Removed this file, it's subsumed by
	  rsvg-bpath-util.c.

2000-04-13  Ramiro Estrugo  <ramiro@eazel.com>

	* idl/athena.idl,
	  idl/Makefile.am,
	  libathena/athena-view-component.idl,
	  libathena/Makefile.am,
	  libathena/.cvsignore:
	
	  Move athena view component interface definition into libathena.
	
2000-04-13  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/.cvsignore:
	.cvsignore file for new rsvg directory.
	
2000-04-13  Andy Hertzfeld <andy@eazel.com>

	added Raph's scalable icon machinery. Right now the only way to see it
	is to use the eazel theme and drag a file over a folder; the open folder
	is a vector icon.  Soon we'll add lots more.
	
	* librsvg/*
	Raph's new library
	* libathena/athena-icon-factory.c:
	integrate vector icons with the icon factory.  Right now, it prefers
	them to bitmapped ones, which is probably wrong.
	* Makefile.am: added librsvg
	* configure.in: added librsvg
	* src/Makefile.am: link with librsvg
	* components/*/Makefile.am: link with librsvg
	* icons/eazel/Makefile.am: added i-directory-accept.svg
	* icons/eazel/i-directory-accept.svg: our sole vector icon
	
2000-04-13  Darin Adler  <darin@eazel.com>
	
	* components/html/ntl-web-browser.c: (browser_vfs_read_callback):
	Fixed a bug my changes to GNOME VFS exposed. The callback couldn't
	handle a "bytes_read" of 0.

	* libathena/athena-directory-private.h:
	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	* src/file-manager/fm-directory-view.c:
	Added a new interface for monitoring files and directories.
	Also fixed the self-check code that was failing since the
	async. changes.
	
	* libathena/athena-file.h:
	Added the interface for monitoring single files, but it isn't
	implemented yet.
	
	* libathena/athena-icon-canvas-item.c: 
	* libathena/athena-icon-canvas-item.h: 
	* libathena/athena-icon-container.c: 
	* libathena/athena-icon-container.h: 
	* libathena/athena-icon-dnd.c: 
	* libathena/athena-icon-dnd.h: 
	* libathena/athena-icon-private.h:
	Restructured Andy's modifier changes so the canvas item doesn't
	have to know about modifiers. This makes the canvas item private
	again. Users of AthenaIconContainer shouldn't have to know
	about the canvas item.
	
	* src/file-manager/fm-icon-view.c:
	Reformatting.
	
2000-04-13  Andy Hertzfeld  <andy@eazel.com>
	
	* components/services/startup/athena-service-startup-view.c:
	made configuration upload work again by adding a "Content-Type"
	header, which is now required by Jonathan's script
	
2000-04-13  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	fixed problems with the url escaping by unescaping the token
	return by the service before re-escaping it
	* components/services/startup/eazel-register.c:
	added periodic call to gtk_main_iteration during configuration
	gather to get feedback displayed

2000-04-13  Andy Hertzfeld <andy@eazel.com>

	added Susan's images to service registration and configuration upload
	
	* configure.in:
	added components/services/startup/icons/Makefile
	* components/services/startup/Makefile.am
	added icons directory to Makefile
	* components/services/startup/icons/Makefile.am
	Makefile for a new directory to hold the images
	* components/services/startup/icons/.cvsignore
	.cvsignore file for the new directory
	* components/services/startup/icons/config-gather.png:
	new icon for configuration gathering form
	* components/services/startup/icons/register.png:
	new icon for registration form
	* components/services/startup/athena-service-startup-view.c:
	added code to display the new icons

2000-04-13  Darin Adler  <darin@eazel.com>

	Updated for new GNOME VFS.

	* libathena/athena-directory.c
	(read_some_metafile_data), (metafile_read_start),
	(metafile_write_create_callback), (metafile_write_start),
	(athena_directory_monitor_files_ref):
	* libathena/gdk-pixbuf-extensions.c
	(athena_gdk_pixbuf_load_async):
	* src/ntl-uri-map.c (got_metadata_callback):
	* components/html/ntl-web-browser.c (browser_vfs_callback),
	(do_vfs_load):
	Update for the new GNOME VFS which doesn't return an immediate error
	code when doing an async. call.

2000-04-12  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-window-msgs.c:
	improved the title of uri's not handled by gnome-vfs; instead of
	"Athena" use the text after the colon, if there is any
	* components/services/startup/athena-service-startup-view.c:
	used Gene's escaping routine in gnome-vfs to escape http
	parameters as necessary
	* libathena/athena-directory.c:
	weakened assert in metadata callback to allow non-vfs uris to
	continue to work
	
2000-04-12  Andy Hertzfeld <andy@eazel.com>

	* icons/eazel/Makefile.am:
	added more eazel theme open folder icons at different sizes
	* icons/eazel/i-directory-accept.png:
	replaced this one with one that was less crufty
	* icons/eazel/i-directory-accept-36.png:
	new open folder icon at smaller size
	* icons/eazel/i-directory-accept-72.png:
	new open folder icon at larger size
	
2000-04-12  Pavel Cisler <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_duplicate_selection), (bonobo_menu_duplicate_cb),
	(append_uri_one), (duplicate_cb), (fm_directory_view_real_update_menus):
	Added a Duplicate menu item. (task 329)

	* src/file-manager/dfos-xfer.c:
	(fs_xfer)
	Added support for the duplicate command. Passing in a NULL for
	target directory now starts a duplicate operation.

	* src/file-manager/dfos-xfer.c:
	(fs_xfer)
	Made the progress dialog receive the text for the setup state. Pass
	in proper text for copy and move operations.

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_ok)
	Pin the values of the bytes_copied to the preflight maximum -- a copy
	may end up copying more than it estimated when items are added to
	the hierarchy after the copy started. (I was hitting this when copying
	a folder into itself, which is a separate bug).

2000-04-12  Andy Hertzfeld <andy@eazel.com>

	added a framework for using custom images for icons to reflect their
	highlited states.  Made folders in the eazel theme open up to reflect
	drop highliting.
	
	* icons/eazel/Makefile.am:
	added icon for open folder at standard size
	* icons/eazel/i-directory-accept.png:
	icon of open folder for drop-highlighting
	* libathena/athena-icon-canvas-item.c,h:
	added a "modifier" text string attribute with appropriate accessors
	when modifier is changed, update the icon
	* libathena/athena-icon-container.c,h:
	added modifier parameter to "get_icon_images" signal
	added athena_icon_container_request_update_by_item to update
	the icon corresponding to a given item.
	* libathena/athena-icon-factory.c,h:
	added modifier field to AthenaScalableIcon; modified appropriate
	lifetime and hashing routines accordingly;
	use the modifier to select the proper image in get_icon_file_path
	* src/file-manager/fm-icon-view.c:
	pass in the modifier from signal to icon_factory_get_icon_for_file.
	
2000-04-12  John Sullivan  <sullivan@eazel.com>

	* data/mime/athena.keys:
	A whole bunch more MIME type descriptions.
	
2000-04-12  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl: This is a new Perl script for searching for FIXME
	in the code. It reports any FIXME that does not have a bug number
	next to it, or any with a bug number that's not an open bug.
	* libathena/athena-bookmark.c: Attached a bug number to a FIXME
	for script-testing purposes.
	* docs/architecture.txt: Removed a FIXME. So sue me!

	* src/file-manager/fm-icon-text-window.c
	(create_attributes_option_menu): Added a call to gettext since the
	attribute_labels are now N_ strings.
	* po/.cvsignore: Ignore the generated files.

	* libathena/athena-icon-factory.c: Formatting tweak.

2000-04-12  Ramiro Estrugo  <ramiro@eazel.com>

	* src/file-manager/fm-icon-text-window.c:
	Change usage of _("foo") to N_("foo")
	
2000-04-12  Valek Filippov <frob@df.ru>

	* po/POTFILES.in: added files for i18n
	* configure.in:
	* Makefile.am:
	* aconfig.h:	  changed for i18n
	* po/ru.po:       added russian translation.

2000-04-12  Pavel Cisler <pavel@eazel.com>

	* libathena/athena-icon-dnd.c:
	* libathena/athena-icon-dnd.h:
	Fix a problem where drag actions did't update properly when dragging
	between two windows. The pointer to the private GtkDragStatus needs
	to be global, not stored in the drag originator widget.

2000-04-11  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/eazel-register.c:
	added hostname to configuration node to distinguish machines when
	the user has more than one
	* components/services/startup/athena-service-startup-view.c:
	changed protocol for configuration upload to match Jonathans's new
	cgi; configuration upload is now working with Jonathan's stuff!
	
2000-04-11  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c
	(athena_directory_call_when_ready),
	(athena_directory_call_when_ready_internal): Handle case where
	directory is NULL which is needed for URIs that Athena
	understand but GNOME VFS does not.

2000-04-11  John Sullivan  <sullivan@eazel.com>

	Addressed most of task 148 (Better type-as-string for
	directory views). Added new directory to CVS, so make
	sure you do a "cvs update -d" and not just "cvs update".

	"make install" now installs a file of mime-type-to-English
	descriptions in the gnome-mime directory.

	* data/mime/athena.keys: The actual mapping between
	MIME types and English descriptions. Read these and send
	me your abuse.
	* data/mime/Makefile.am: New file, copies athena.keys to
	gnome-mime directory.
	* data/Makefile.am: includes "mime" subdirectory
	* configure.in: configures "data/mime" directory

	* libathena/athena-file.c:
	(athena_file_get_mime_type_as_string_attribute):
	New function, returns the raw MIME type as a string,
	and handles the no-MIME-type case.
	(athena_file_get_string_attribute): handle attribute
	"mime_type", distinct from "type" which is now the 
	human-language one.
	(athena_file_get_type_as_string): Use gnome-mime
	to get human-language descriptions based on the MIME
	type.
	(athena_file_is_executable): Fixed this function which
	was reading info->flags instead of info->permissions. Now
	the special executable icon appears much more often (though
	we still don't know what it's supposed to be).
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file): Use "directory" instead of
	"folder" to match our terminology elsewhere.
	* src/file-manager/fm-icon-text-window.c:
	add "mime type" to list of choices of text that can appear
	beneath icons (in addition to just plain "type", which is
	the human-language one).

2000-04-11  Gene Z. Ragan  <gzr@eazel.com>

	Requires new Bonobo.

	* components/sample/athena-sample-content-view.c
	Added icon data to BonoboUiHandler.  This is GdkPixbuf
	data and demonstrates the pixbuf data features
	added to bonobo ui handlers.

	* libathena/athena-bookmark.c
	bonobo_ui_handler_menu_new_item modified to take advantage
	of new bonobo ui handler pixbuf functionality. Components and
	menu items can now display pixbuf data.
	Added athena_bookmark_get_pixbuf() routine.

	* libathena/athena-bookmark.h
	Added athena_bookmark_get_pixbuf() routine.

	* src/athena-window-menus.c
	bonobo_ui_handler_menu_new_item modified to take advantage
	of new bonobo ui handler pixbuf functionality.

2000-04-11  Darin Adler  <darin@eazel.com>

	Finished task 226 (Read metadata asynchronously instead of
	synchronously).

	Requires new GNOME VFS.
	
	* libathena/athena-directory-private.h:
	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	Changed code to read and write metafiles async. Too many functions
	modified for me to list here.

	* libathena/athena-file-private.h:
	* libathena/athena-file.c:
	* libathena/athena-file.h:
	(athena_file_changed), (athena_file_emit_changed),
	(athena_file_get_metadata), (athena_file_set_metadata),
	(athena_file_call_when_ready), (athena_file_cancel_callback):
	Changes to AthenaFile so it can participate in the new.
	
	* components/notes/ntl-notes.c (notes_load_metainfo):
	Fixed a bug in my recent changes where it would use a bad file
	object when getting metadata.
	
	* src/file-manager/fm-directory-view.c (notes_load_metainfo):
	Renamed "tags" to "keys".

2000-04-11  Andy Hertzfeld <andy@eazel.com>
	
	* components/rpmview/athena-rpmview.c:
	added install, update and uninstall buttons to the package view,
	that are shown/hidden based on the install state, but they don't
	actually do anything yet.
	
2000-04-11  Darin Adler  <darin@eazel.com>

	Updated for new GdkPixbuf.

	* HACKING: gnome-print must be built before bonobo.
	* RENAMING: New renaming ideas.
	* libathena/athena-graphic-effects.c (create_new_pixbuf),
	(athena_create_spotlight_pixbuf),
	(athena_create_darkened_pixbuf),
	(athena_create_colorized_pixbuf),
	(athena_make_semi_transparent): Updated for new GdkPixbuf.
	* libathena/athena-icon-canvas-item.c (pixbuf_is_acceptable):
	Updated for new GdkPixbuf.
	* libathena/athena-icon-container.c (icon_get_actual_size):
	Updated for new GdkPixbuf.
	* libathena/athena-icon-factory.c
	(athena_icon_factory_possibly_free_cached_image): Put in a
	temporary hack that allows us to keep working until we get a
	suitable feature in GdkPixbuf for implementing the cache. For now,
	we don't free any pixbufs ever, so the cache grows unbounded.
	(load_image_for_scaling), (load_image_scale_if_necessary):
	(athena_icon_factory_make_thumbnails), Updated for new
	GdkPixbuf.
	* src/athena-index-title (athena_index_title_update_icon):
	Updated for new GdkPixbuf.
	
2000-04-11  Pavel Cisler <pavel@eazel.com>

	* libathena/athena-icon-dnd.c:
	* libathena/athena-icon-dnd.h:
	(athena_icon_dnd_update_drop_target):
	Determine if a drop target can accept drop, update highlight for
	drop accordingly.
	(athena_icon_dnd_update_drop_target):
	Add drop highlighting for dragged items that can be accepted by a
	drop target.
	(athena_icon_canvas_item_can_accept_item):
	Implement the call.
	(athena_icon_canvas_item_can_accept_items):
	Put a cap on the number of items checked as accepted by drop target
	to not lock up the machine when dragging lots of items.
	(athena_icon_dnd_modifier_based_action):
	Tweak the modifier keys -- use Alt to force copy.
		
	* libathena/athena-icon-container.c:
	* libathena/athena-icon-container.h:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c:
	(can_accept_item), (fm_directory_view_can_accept_item):
	New signal -- helps figuring out if potential drop target can
	accept dropped URIs. For now returns TRUE for any directory that
	doesn't match the dragged item.
	
	* libathena/athena-icon-container.c:
	(item_event_callback):
	Support for turning the "highlight for drop" state of an icon on/off --
	during drag&drop don't let the "enter notify" signal reach the canvas item
	so that the item won't get prelit.
	
	* libathena/athena-icon-canvas-item.c:
	(athena_icon_canvas_item_event):
	Turn off highlight for drop as well as prelight on leave event.
	This is a fallback in case the drag&drop for some reason leaves
	the target icon highlighted for drop after a drag ends.
	
	* libathena/athena-gtk-extensions.c:
	* libathena/athena-gtk-extensions.h:
	(athena_gtk_marshal_INT__POINTER_POINTER):
	Added another binder function.
	
	* libathena/athena-file.c:
	* libathena/athena-file.h:
	(athena_file_matches_uri): Added a utility call used to detect 
	a drop on self.
	
2000-04-10  Andy Hertzfeld <andy@eazel.com>

	* components/rpmview/athena-rpmview.c:
	made the package view determine if a package is installed or not and display
	a message accordingly. Command buttons are coming soon.
	
2000-04-10  Pavel Cisler <pavel@eazel.com>
	Nasty hack to allow drag&drop actions to respond to modifier keys
	and the drop context properly. This will one day get fixed by
	adding proper hooks to Gtk+ and using them. For now we have to
	do this.

	* libathena/athena-icon-dnd.h:
	* libathena/athena-icon-dnd.c:
	(athena_icon_dnd_update_drop_action),
	(athena_icon_dnd_modifier_based_action),
	(athena_icon_dnd_get_event_actions),
	(athena_icon_dnd_get_event_time),
	(athena_icon_dnd_source_check_selection),
	(athena_icon_dnd_update),
	(athena_icon_drag_key_callback),
	(athena_icon_dnd_begin_drag), (drag_drop_callback):
	Pull in a bunch of code from gtkdnd.c. Add new call to
	allow overriding drop actions based on modifiers and the drop 
	context. Connect the "key_press_event" and "key_release_event"
	to the copied code. All this to be able to call
	athena_icon_dnd_get_event_actions instead of the broken
	and private gtk_drag_get_event_actions.
	I still have to add code to change the default action based
	on the drop target between copy and move based whether the
	source and drop containers are the same, etc.

2000-04-10  Andy Hertzfeld <andy@eazel.com>

	* components/rpmview/athena-rpmview.c:
	made the package view component display a scrolling list of the
	constituent files in the package.
	
2000-04-10  Darin Adler  <darin@eazel.com>

	Finished changing all callers that use metadata to use it in a way
	that is compatible with async. metadata reading.

	* components/notes/ntl-notes.c:
	(notes_load_metainfo): Changed to use athena_file_call_when_ready
	to wait for the metadata. Also fixed a bug that was causing an assert
	inside the call to gtk_editable_insert_text.
	(main): Made warnings and criticals stop in the debugger.

	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	(athena_directory_call_when_ready): Renamed the call to indicate
	it can wait for more than just metadata. For now it does only wait
	for metadata, though.
	(athena_directory_cancel_callback): Renamed this too.

	* libathena/athena-file.c:
	(athena_file_call_when_ready), (athena_file_cancel_callback):
	Made a corresponding call for the metadata of a single file.

	* libathena/athena-gdk-extensions.c:
	* src/athena-index-title.c:
	Formatting changes.

	* libathena/athena-metadata.h:
	Clarified that ANNOTATION is a per-file piece of metadata.

	* src/ntl-uri-map.c:
	* src/file-manager/fm-directory-view.c:
	Use new names of calls.

	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-list-view.c:
	Added comment.

2000-04-10  Andy Hertzfeld  <andy@eazel.com>

	* src/athena-index-title.c:
	fixed bug where multi-line titles in index panel would have a big
	vertical gap.  Fixed by breaking out of the loop after it finds a
	split point.  Also, removed an unneccesary justification call.
	
2000-04-10  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/eazel-register.c:
	added io ports to hardware configuration synopsis
	
2000-04-10  John Sullivan  <sullivan@eazel.com>

	Fixed bug 377 (clipping emblems in list view looks bad
	and loses information)

	* libathena/athena-list.c:
	(draw_row): Made it draw the ellipsis character if there's
	not enough room to show all emblems.

2000-04-10  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-list.c:
	(athena_list_initialize_class), (athena_list_initialize),
	(select_or_unselect_row_callback), (emit_selection_changed),
	(select_range), (select_row), (select_row_from_mouse), 
	(row_set_selected), (select_row_unselect_others), 
	(athena_list_select_all), (athena_list_unselect_all), 
	(athena_list_button_press), (athena_list_keyboard_move_to),
	(athena_list_motion), (athena_list_set_selection):
	Reworked selection such that the SELECTION_CHANGED signal is
	emitted only once for every selection-affecting operation,
	and never if the selection hasn't changed at all. This makes
	such operations as Select All, switch-from-icon-view-with-lots-
	selected, and arrow-key-to-end-of-list significantly faster.

2000-04-09  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	now it saves the account token assigned by the service, and passes
	it back in the header of subsequent requests
	* libathena/athena-icon-factory.c:
	fixed bug #293, thumbnails of thumbnails endlessly, by explicitly
	testing for thumbnails of thumbnails as part of the criteria for
	making them also, make a "snapshot" frame for thumbnails (task
	295)
	
2000-04-09  John Sullivan  <sullivan@eazel.com>

	Finished task 307 (keyboard navigation in list view should
	use same keys/behavior as in icon view). There are a few
	minor bugs remaining that I'll write up separately.

	* libathena/athena-list.c:
	AthenaListDetails struct: added fields for
	keyboard_row_to_reveal and keyboard_row_reveal_timer_id;
	(athena_list_initialize_class): Removed key binding set for
	this class (uses key_press_event function instead); used
	gtk_binding_entry_clear to get rid of all the unwanted GtkCList
	key bindings; wire up key_press_event function; wire up
	destroy function
	(athena_list_destroy): New function, destroy details struct
	(this was storage leak) and clean up pending timer.
	(athena_list_clear_keyboard_focus), (athena_list_set_keyboard_focus),
	(athena_list_keyboard_move_to), (keyboard_row_reveal_timeout_callback),
	(unschedule_keyboard_row_reveal), (schedule_keyboard_row_reveal),
	(reveal_row), (athena_list_keyboard_navigation_key_press),
	(athena_list_keyboard_home), (athena_list_keyboard_end), 
	(athena_list_keyboard_up), (athena_list_keyboard_down), 
	(athena_list_keyboard_page_up), (athena_list_keyboard_page_down), 
	(athena_list_keyboard_space), (athena_list_activate_selected_items),
	(athena_list_get_first_selected_row), 
	(athena_list_get_last_selected_row), 
	(athena_list_key_press): New functions, all the mechanism for
	handling key presses similarly to AthenaIconContainer. Bonus
	key handling for Page Up and Page Down.
	(athena_list_move_focus_row), (scroll_vertical): Removed these
	functions that were used by the GtkCList key bindings in favor of
	athena_list_key_press and friends.

2000-04-07  Andy Hertzfeld  <andy@eazel.com>

	* libathena/athena-icon-canvas-item.c:
	inspired by John's list view underlining, the text beneath icons
	is now underlined when the icon is pre-lit
	
2000-04-07  John Sullivan  <sullivan@eazel.com>

	Fixed bug Andy pointed out where list view "links" could
	be activated by clicking in white space past the name.
	Also started making changes in the direction of getting
	keyboard selection working properly in list view (but
	most of the work remains).

	* libathena/athena-gdk-extensions.h,
	* libathena/athena-gdk-extensions.c:
	(athena_stipple_bitmap): New function, returns pointer to
	static 50% stipple bitmap.
	* libathena/athena-icon-cvanvas-item.c:
	remove global stipple object;
	(athena_icon_canvas_item_initialize_class): Remove initialization
	of global stipple object.
	(draw_or_measure_label_text), (draw_stretch_handles): Use
	athena_stipple_bitmap () in lieu of global stipple object
	in this file.
	* libathena/athena-list.c:
	(get_cell_horizontal_start_position): New function, extracted
	from draw_row so I could use it elsewhere.
	(athena_list_key): Removed function.
	(athena_list_draw_focus): New function, draws keyboard-focussed
	row with the same stipple outline used in icon view.
	(athena_list_move_function_row): New function, copied & simplified
	from GtkCList. Will probably rewrite entirely or eliminate very soon.
	(athena_list_scroll_vertical): New function, copied & simplified
	from GtkCList. Handles various keyboard commands, though not yet with
	the behavior we actually want.
	(athena_list_initialize_class): Begin to override and eliminate
	GtkCList key bindings that we want to change. I've just started this
	work -- all I've done so far is make space do nothing but Control-space
	toggle the selection status of the keyboard-focussed row. I need to
	go through and fix up all the bad inherited bindings. Also in this
	function replace GtkCList's scroll_vertical and draw_focus function 
	pointers, and removed the key_press_event and key_release_event
	overrides that were deliberately preventing us from inheriting any
	of GtkCList's keyboard behavior.
	(athena_list_button_release): Only activate link-text if the click
	is in the horizontal bounds of the text.
	(draw_row) Use get_cell_horizontal_start_position that was extracted
	from this function.

2000-04-07  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	switched over to using Jonathan's prototype service, which is only
	accessible from eazel's intranet for now. Registration now works with
	the service.
	
	* libathena/athena-icon-canvas-item.c:
	first, simple version of drag/swallow highliting - it just darkens the
	icon and emboldens the text, exactly like selection highlighting.
	Pavel's going to set the flag during dragging soon, so this will help
	him see what he's doing.  Soon, we'll have a more elaborate approach.
	
2000-04-06  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
        made configuration upload make the HTTP request and handle errors, but still not
        quite finished, since it's not passing the cookie back yet.  Also, created a stub
        summary page plus minor clean-ups
	
2000-04-06  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer-progress-dialog.c:
	* src/file-manager/dfos-xfer-progress-dialog.h:
	(dfos_xfer_progress_dialog_new_file):
	Pass in the current copied file index so that the progress
	dialog doesn't need to get called for every file copied.

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_vfs_error), (handle_xfer_overwrite),
	(handle_xfer_duplicate), (handle_xfer_ok):
	Add error handling with error alerts.
	Add file overwrite alerts.
	Fix up calling the progress to deal with not being
	called for every single file.

	* src/file-manager/dfos-xfer.c:
	(dfos_xfer):
	Fix a bug where the async job handle was not being set properly.

	* src/file-manager/dfos-xfer.c:
	* src/file-manager/dfos-xfer.h:
	(file_operation_alert):
	Utility alert call.

	* src/file-manager/dfos-xfer.c:
	* src/file-manager/dfos-xfer.h:
	(fs_xfer):
	New copy engine main entry.

2000-04-06  Andy Hertzfeld  <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
        more work to polish registration and implement configuration upload,
	plus various clean-ups
	
2000-04-06  John Sullivan  <sullivan@eazel.com>

	Finished task 376 (Resolve single-click behavior)

	* libathena/athena-gdk-extensions.h:
	#defines for colors ATHENA_RGB_COLOR_RED, _GREEN,
	_BLUE, _WHITE, and _BLACK.
	* libathena/athena-gdk-extensions.c:
	(athena_parse_rgb_with_white_default): Replaced
	hard-wired numbers with these #defines.

	* libathena/athena-list.h,
	* libathena/athena-list.c:
	added enum entry for ATHENA_CELL_LINK_TEXT;
	(athena_list_mark_cell_as_link): New functions, converts
	an ordinary text cell into a link-text cell.
	(athena_list_button_release): Only activate link-text
	cells on single click; other cells select as in other lists.
	(draw_row): draw link-text cells with blue text and an
	underline, so they look like typical web links.
	(athena_list_set_cell_contents): Convert link-text cell
	back to ordinary text cell before cleaning up old
	contents so parent function will do the right thing.

	* src/file-manager/fm-list-view.c:
	(add_to_list): mark file name cell as link-text cell.
	(remove_from_list): New function, extracted from...
	(fm_list_view_file_changed): Followed Darin's advice on
	how to simultaneously clarify this code and fix a 
	storage leak.

	For Darin, fixed a typo that caused every file to be
	displayed as if it were a directory.

	* src/ntl-uri-map.c:
	(my_notify_when_ready): Added two missing "== 0"s.

2000-04-06  Maciej Stachowiak  <mjs@eazel.com>

	* src/file-manager/fm-directory-view.c
	(notify_selection_change_cb, display_pending_files): Add a boolean
	field have_pending_uris_selected to distinguish the case where we
	have _no_ pending selection from the case where we have an empty
	one (in both cases, the pending_uris_selected field should be
	NULL).

2000-04-06  Darin Adler  <darin@eazel.com>

	Added the hooks needed to make metafile reading asynchronous.
	Next I'll change the actual metafile access to work that way.
	
	* libathena/athena-directory.h:
	* libathena/athena-directory.c:
	(athena_directory_metadata_call_when_ready): Added function
	that requests a read of some metadata and calls back when the
	data is ready.

	* src/ntl-app.c: (athena_app_startup): Got rid of call to
	athena_navinfo_init.

	* src/ntl-types.h: Moved the AthenaNavigationInfo struct
	and related defines to ntl-uri-map.h.

	* src/ntl-uri-map.h:
	* src/ntl-uri-map.c:
	Reformatted and changed the names of many functions.
	Added code to use the new metadata callback.
	
	* src/ntl-index-panel.c:
	* src/ntl-main.c:
	* src/ntl-view.h:
	* src/ntl-window-msgs.c:
	* src/ntl-window.c:
	* src/ntl-window.h:
	Had to change includes a bit because of my changes to what
	header files are including.

	* src/ntl-window-msgs.c: (athena_window_update_state):
	* src/ntl-window.h:
	Use the new athena_navigation_info_cancel call instead of
	reaching right in to cancel the underlying call.

	* src/ntl-view-private.h:
	Reformatting.

2000-04-06  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory-background.c:
	(athena_connect_background_to_directory_metadata):
	Fixed code that was trying to disconnect the handler from the
	new directory, not the old one.

2000-04-06  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-list-view.c:
	(fm_list_view_file_changed): Only call athena_file_unref if
	the file isn't gone. This cures some GTK-CRITICALS I ran into.

	* src/file-manager/fm-properties-window.c:
	(name_field_update): Renamed to name_field_update_to_match_file;
	handle case where file name was changed elsewhere.
	(create_properties_window): Hook up name_field_update_to_match_file
	to get called when file changes externally.
	(remove_properties_window_from_hash_table): New function.
	(fm_properties_window_get_or_create): Use hash table so there's
	only one Properties window per file. This was intended to be the
	design but we forgot to implement it earlier.

2000-04-05  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	made the registration code display errors on various conditions; made it make an
	HTTP request to the service cgi and give appropriate error feedback or move to
	the configuration form if successful.  Disabled the registration button unless something
	is typed into each field.
	
2000-04-05  John Sullivan  <sullivan@eazel.com>

	Fixed bug 394 (clicking Home button segfaults)

	* src/ntl-window-msgs.c: (athena_window_update_internals):
	Don't update Back list when the location hasn't actually
	changed, since (A) it would be silly and (B) the code that 
	sets up last_location_bookmark and current_location_bookmark
	doesn't work right if you do.

2000-04-05  John Sullivan  <sullivan@eazel.com>

	Some cleanups from the file-renaming checkin I did
	yesterday. The largest change was making AthenaDirectory
	send "files-changed" signal instead of "files-removed" 
	signal when a file is removed. That way	interested callers 
	need register only for one signal. The callers can use 
	athena_file_is_gone () to test whether the file was removed.

	* libathena/athena-directory-private.h:
	(athena_directory_files_removed): Removed function.
	* libathena/athena-directory.h:
	(files_removed): Removed signal definition, updated comments.
	* libathena/athena-directory.c:
	Removed FILES_REMOVED signal enum entry;
	(athena_directory_initialize_class): Removed FILES_REMOVED
	signal creation.
	(athena_directory_files_removed): Removed function.
	* libathena/athena-file.c:
	(get_file_for_parent_directory): New private function.
	(athena_file_can_rename): This function was quite broken in
	its initial check-in. It worked only on a random basis. Now it
	works quite a bit better. It should only return FALSE if it's
	darn well sure that the user can't rename the file; it returns
	TRUE even if it isn't sure, so clients must handle failed
	renames (which they would have to anyway).
	(athena_file_delete): Call athena_file_changed instead of
	athena_directory_files_removed when file is deleted.

	* src/file-manager/fm-directory-view.h:
	(remove_file): Remove signal definition, update comments.
	* src/file-manager/fm-directory-view.c:
	remove REMOVE_FILE signal enum entry; 
	remove files_removed_handler_id and pending_files_removed from
	Details struct;
	(fm_directory_view_initialize_class): remove REMOVE_FILE signal
	initialization
	(display_pending_files): remove "removed" case; made "changed"
	case handle updating uri table; made "changed" case send signal
	even if file is gone.
	(files_removed_cb): Removed function.
	(fm_directory_view_load_uri): removed connection to "files_removed"
	signal
	(disconnect_model_handlers): removed disconnect of files_removed_handler.
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_remove_file): Removed function.
	(fm_icon_view_initialize_class): Remove remove_file signal handler override.
	(fm_icon_view_file_changed): check if file is gone and do what
	fm_icon_view_remove_file used to do if so.
	* src/file-manager/fm-list-view.c:
	(fm_list_view_remove_file): Removed function.
	(fm_list_view_initialize_class): Remove remove_file signal handler override.
	(fm_list_view_file_changed): check if file is gone and do what
	fm_list_view_remove_file used to do if so.
	
	* src/file-manager/fm-properties-window.c:
	(properties_window_file_changed_callback): Don't update the window title 
	if you just nuked the window -- Doh! Now the Properties window will 
	vanish silently if the file is deleted.

2000-04-05  Darin Adler  <darin@eazel.com>

	Improved the background handling code so more is shared.
	There's even more we could do in this direction.
	
	* components/music/athena-music-view.c:
	(athena_music_view_initialize): Got rid of redundant background
	color initialization.
	(athena_music_view_realize): Got rid of background color
	initialization.
	(athena_music_view_update_from_uri): Changed background color
	handling to use new athena_directory_background calls.
	(athena_music_view_background_changed): Not needed any more.

	* components/notes/ntl-notes.c:
	Did some cleanup and reformatting.

	* libathena/Makefile.am:
	* libathena/athena-directory-background.c:
	* libathena/athena-directory-background.h:
	Created a new file with functions that manage the background for
	a window connected with a particular directory. Later we might
	generalize it further to work for windows that are connected to
	any URI, not just a directory.

	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	Added a new "metdata_changed" signal so that the background can
	be updated if the underlying data changes.
	(athena_directory_initialize_class): Create the new signal.
	(athena_directory_ref), (athena_directory_unref): Made these
	functions quietly do nothing for NULL. This simplifies life for
	callers.
	(athena_directory_set_metadata): Emit the "metadata_changed"
	signal.

	* libathena/athena-file.c:
	(athena_file_ref), (athena_file_unref): Made these
	functions quietly do nothing for NULL. This simplifies life for
	callers.

	* libathena/athena-metadata.h:
	Renamed all the constants to be consistent. Got rid of separate
	constants for the icon view and list view backgrounds. Changed
	some of the underlying XML tags as well.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_icon_for_file):
	* src/athena-index-title.c: (athena_index_title_update_info):
	* src/ntl-index-panel: (athena_index_panel_update_info),
	(receive_dropped_uri_list),
	(athena_index_panel_background_changed):
	* src/ntl-uri-map.c: (set_initial_content_iid),
	(add_components_from_metadata):
	* src/ntl-window-msgs.c: (view_menu_switch_views_cb):
	* src/file-manager/fm-icon-view.c: (add_icon_if_already_positioned),
	(fm_icon_view_begin_loading), (fm_icon_view_set_zoom_level),
	(fm_icon_view_icon_changed_callback):
	* src/file-manager/fm-list-view.c: (fm_list_view_begin_loading),
	(fm_list_view_set_zoom_level), (fm_list_view_sort_items):
	Updated uses of metadata constants to use the new names.

	* src/ntl-index-panel: (athena_index_panel_destroy),
	(athena_index_panel_update_info):
	* src/ntl-uri-map.c: (add_components_from_metadata):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_destroy), (fm_directory_view_load_uri):
	Used new athena_directory_unref to simplify code.

	* src/ntl-uri-map.c: (set_initial_content_iid):
	* src/ntl-window-msgs.c: (view_menu_switch_views_cb):
	Added missing athena_directory_unref (storage leak).

	* src/file-manager/fm-icon-view.c: (create_icon_container),
	(fm_icon_view_background_changed_callback): Removed "changed"
	signal handler on AthenaBackground since that's now handled
	by the new athena_directory_background calls instead.
	(fm_icon_view_begin_loading): Used athena_directory_background
	to replace background customization code.

	* src/file-manager/fm-icon-view.c: (fm_icon_view_get_zoom_level):
	Fixed a bug where it would try to use view as an FMIconView after
	the FM_IS_ICON_VIEW check failed.

	* src/file-manager/fm-list-view.c: (create_list),
	(fm_list_view_background_changed_callback): Removed "changed"
	signal handler on AthenaBackground since that's now handled
	by the new athena_directory_background calls instead.
	(fm_list_view_begin_loading): Used athena_directory_background
	to replace background customization code.

2000-04-05  John Sullivan  <sullivan@eazel.com>

	Fixed bug in Ramiro's recent checkin that broke booting
	if the icon theme had never been set.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_initialize_class),
	(athena_get_current_icon_factory): Moved theme initialization
	from the former to the latter, because theme needs to be non-NULL
	before initialize_class is called.

2000-04-05  Darin Adler  <darin@eazel.com>

	* components/services/startup/eazel-register.c:
	(add_package_info):
	* libathena/athena-file-utilities.c:
	(athena_user_top_directory):
	* libathena/athena-global_preferences.c:
	(global_preferences_get_dialog):
	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_thumbnail_uri):
	Removed unnecessary \n characters from g_warning, g_error, and
	g_message calls.

	* components/html/ntl-web-browser.c (browser_url_load_done):
	Ettore says we should stop calling gtk_html_private_calc_scrollbars
	and if it causes any problems then it's just a bug in GtkHTML
	that should be fixed,.

	* src/ntl-window-msgs.c:
	Reformatted the code as a first step for some changes
	that will make the state machine easier to understand.

2000-04-05  Ramiro Estrugo  <ramiro@eazel.com>

	Preferences work.  Make preference registration implicit.

	* athena-widgets/athena-preferences.c,
	  athena-widgets/athena-preferences.h: 
	(prefs_hash_lookup_with_implicit_registration): New function to do
	preference lookup with implicit registration.  If the pref is not
	found at first, it will be automatically added.

	(preference_get): Replace the old badly named prefs_get_pref with
	something simpler.

	(preference_set): Same here.

	(athena_preferences_set_info): Add a function that allows
	tweaking the default values and other info for a pref.
	
	(athena_preferences_add_enum_callback):
	(athena_preferences_add_boolean_callback):
	(athena_preferences_add_string_callback): New callback adding
	functions that work with implicit registration.  The caller needs
	to know the type of preference they want to munge beforehand for
	the implicit registration to work.

	Also cleanup a bunch bucnhsome of style issues.

	* athena-widgets/test-athena-widgets.c:
	Update for all the pref changes.

	* libathena/athena-global-preferences.c,
	  libathena/athena-global-preferences.h:
	(global_preferences_register_for_ui): Add a new private function
	to register only preferences used in the pref dialog ui.

	(global_preferences_static_info): Remove 
	ATHENA_PREFERENCES_ICON_VIEW_TEXT_ATTRIBUTE_NAMES and
	ATHENA_PREFERENCES_ICON_THEME since they dont have a ui and can
	be used implicitly.

	(athena_global_preferences_initialize): Removed. 

	* libathena/athena-icon-factory.c:
	(icon_theme_changed_callback): Doesnt take a type paramater no
	more.
	
	(athena_get_current_icon_factory): Remove the global preferences
	initialization code and blurb.  Not needed since prefs are
	registered implicitly as needed.  Use
	athena_preferences_add_string_callback instead of obsolete
	athena_preferences_add_callback.

	(athena_icon_factory_initialize_class):  Add a preferences call
	to set the default value for the ICON_THEME string.
	We might want to change things such that no default has to be installed
	for this preference.  If so, then the code that fetches the preference
	would have to deal with either a NULL return value (or "").

	* src/ntl-app.c:
	(athena_app_startup): Remove global preferences initialization
	call.

	* src/file-manager/fm-directory-view.c:
	(user_level_changed_callback): 
	(use_new_window_changed_callback): Callbacks dont take a
	preference type argument no more.

	(fm_directory_view_initialize): Use 
	athena_preferences_add_{enum,boolean}_callback instead of obsolete
	athena_preferences_add_callback.

	* src/file-manager/fm-icon-text-window.c:
	(preference_changed_callback): Doesnt take a type paramater no
	more.

	(create_icon_text_window): Use 
	athena_preferences_add_string_callback instead of obsolete
	athena_preferences_add_callback.

	* src/file-manager/fm-icon-view.c:
	(text_attribute_names_changed_callback): Doesnt take a type paramater no
	more.

	(fm_icon_view_initialize_class): Add a preferences call
	to set the default value for the ICON_VIEW_TEXT_ATTRIBUTE_NAMES string.
	We might want to change things such that no default has to be installed
	for this preference.  If so, then the code that fetches the preference
	would have to deal with either a NULL return value (or "").
	
2000-04-05  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	made the register button make an HTTP request to the service using ghttp.
	* components/services/startup/Makefile.am:
	made the component link with lghttp
	
2000-04-04  Maciej Stachowiak  <mjs@eazel.com>

	Make selection persistent across content view changes (task 105). 

	* src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view.h
	(fm_directory_view_set_selection): New function.
	(set_selection): New virtual method that must by implemented by
	subclasses.
	(add_athena_file_to_uri_map, remove_athena_file_from_uri_map,
	free_file_by_uri_map_entry, free_file_by_uri_map): New functions
	to manage a hash table mapping from uri strings to AthenaFile
	objects.
	(notify_selection_change_cb): New function; on a selection change
	notification, either set the selection immediately if the view has
	completed loading, or establish it as pending.
	(display_pending_files): Maintain the uri -> file hash table on
	notifications from the model; do any pending selections required
	when loading completes.
	
	* src/file-manager/fm-list-view.c (fm_list_view_set_selection):
	New function to implement `set_selection' virtual method.

	* src/file-manager/fm-icon-view.c (fm_icon_view_set_selection):
	New function to implement `set_selection' virtual method.

	* libathena/athena-list.c (athena_list_set_selection): New
	function: set the selection to a specified set of rows.

	* libathena/athena-icon-container.c,
	libathena/athena-icon-container.h
	(athena_icon_container_set_selection): New function: set the
	selection to a specified set of icons.

2000-04-04  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	changed the account name field to e-mail address; make the submit
	button initially insensitive; turned off the visibility property of
	the gtk_entry objects used for passwords
		
2000-04-04  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/startup/athena-service-startup-view.c:
	(register_later_cb): Fix cast for stricter -Werror compliance.
	
2000-04-04  Darin Adler  <darin@eazel.com>

	Finished task 54 (Set background image by drag/drop).
	Fixed bug 346 (Bad icon positions when you change user level).
	Fixed bug 372 (Better icons for common file types).

	* libathena/athena-background-canvas-group.c:
	(athena_background_canvas_group_draw): Got rid of the colormap
	which is not needed now that we use gtk_rgb instead of gtk_color
	calls. Passed in the corner of the canvas as a parameter to
	athena_background_draw so it knows where the origin of any
	repeating pattern should be.
	* libathena/athena-background.h:
	* libathena/athena-background.c: (athena_background_draw):
	Added parameters to determine where the origin of any repeating
	pattern should be. Removed colormap parameter (see above).
	(athena_background_draw_flat_box): Passed in origin parameters
	in call to athena_background_draw.
	* libathena/athena-gdk-extensions.h:
	* libathena/athena-gdk-extensions.c:
	(athena_fill_rectangle_with_gradient): Removed colormap
	parameter (see above).
	* libathena/athena-gdk-pixbuf-extensions.c:
	(athena_gdk_pixbuf_render_to_drawable_tiled): Fixed the tiling
	so it will use the dither parameters to set the origin of the
	tiles as well.

	* libathena/athena-icon-dnd.c: (receive_dropped_tile_image),
	(athena_icon_container_receive_dropped_icons): Added code so that
	dropping an image file on the window with the shift key held down
	will customize the background tile image.

	* libathena/athena-icon-factory.c: (make_full_icon_path),
	(get_themed_icon_file_path): Fixed two bugs that prevented
	MIME-type-based icons from working correctly. First, got rid of
	code that tried to prepend the theme name and "athena/" to the
	beginning of a full path. Then made sure that it tries the file
	name without adding a suffix before it starts trying out suffixes.

	* libathena/athena-icon-grid.c: (athena_icon_grid_clear):
	Fixed bug where clearing the grid was resetting the visible width.
	
	* components/sample/Makefile.am:
	* components/services/startup/Makefile.am:
	Turned on -Werror for these two directories.
	* components/sample/athena-sample-content-view.h:
	* components/sample/athena-sample-content-view.c:
	(athena_sample_content_view_destroy), (bonobo_sample_callback):
	Fixed warnings and did some small cleanup.

2000-04-04  John Sullivan <sullivan@eazel.com>

	Renaming a file from its Set Properties dialog now works, though
	there are various odds and ends I still need to clean up. 
	It turned out (surprise!) that there was a lot of 
	underpinnings work involved in implementing this feature.
	Fortunately most of it will be shared by rename-in-place.
	
	* libathena/athena-directory-private.h:
	add #define for METADATA_NODE_NAME_FOR_FILE_NAME
	* libathena/athena-directory.c:
	(athena_directory_get_file_metadata_node): Use 
	METADATA_NODE_NAME_FOR_FILE_NAME #define
	(athena_directory_set_file_metadata): Use g_return_val_if_fail
	to prevent callers from changing the file name this way, since
	that wouldn't work right.
	
	* libathena/athena-file.h:
	* libathena/athena-file.c:
	(athena_file_can_rename): New function, returns TRUE if the
	user has write permission for this file.
	(athena_file_rename): New function, uses gnome_vfs_move to
	try to rename the file, updating metadata as appropriate.
	Returns the GnomeVFSResult from gnome_vfs_move.
	
	* libathena/athena-list.c
	(row_selected): Renamed this formerly private function to
	athena_list_is_row_selected and made it check its parameters
	more carefully.
	* libathena/athena-list.h:
	(athena_list_is_row_selected): Made this public.
	
	* src/file-manager/fm-error-reporting.c,
	* src/file-manager/fm-error-reporting.h: New files, home for
	UI code to display user error messages and such. It's initial
	occupant is:
	(fm_report_error_renaming_file): New function, puts up a non-modal
	alert reporting the renaming failure.
	* src/file-manager/Makefile.am: Add these two new files to the build.

	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_open_properties_window_cb): New function, opens a
	Properties window for each selected item using the Bonobo callback API.
	(fm_directory_view_real_merge_menus): Include Set Properties item in
	File menu, and rearrange other items a little.
	(fm_directory_view_real_update_menus): Update sensitivity of Set
	Properties menu item.
	
	* src/file-manager/fm-list-view.c:
	(add_to_list): Return the new row index.
	(fm_list_view_file_changed): Remove and reinsert the changed file; this
	not only does less sorting but also recomputes all the text so name
	changes will be displayed.
	
	* src/file-manager/fm-properties-window.c:
	(get_pixmap_and_mask_for_properties_window),
	(update_properties_window_icon),
	(create_pixmap_widget_for_file),
	(name_field_done_editing),
	(name_field_update),
	(update_properties_window_title),
	(properties_window_file_changed_callback):
	New functions used to wire up the new editable name field
	and new icon pixmap widget in the properties window.
	(create_properties_window): Added notebook tabs, first
	one is Basic and currently contains icon & name; second
	is Emblems and has all those checkboxes. Use all the
	new functions to create and wire up things so that name
	changes & icon changes are propagated and reflected correctly.

	* src/athena-bookmarks-window.c:
	(create_bookmarks_window): Removed a bunch of unnecessary
	and leak-causing gtk_widget_refs that I happened to notice
	in here. I left these behind when modifying code originally
	created by glade, where the refs are necessary.

2000-04-04  Andy Hertzfeld <andy@eazel.com>

	* components.services/startup/athena-service-startup-view.c:
	more work on the registration and configuration form
	
2000-04-04  Andy Hertzfeld <andy@eazel.com>

	* src/ntl=window-msgs.c:
	fixed bug where it was allocating a uri for a null string by only
	trying the actual_uri if it's non-null
	* components.services/startup/athena-service-startup-view.c:
	more work on the registration form
	
2000-04-03  Andy Hertzfeld <andy@eazel.com>

	more work on the service component
	
	* components.services/startup/athena-service-startup-view.h:
	changed it to inherit from eventbox so it can have a background
	* components.services/startup/athena-service-startup-view.c:
	restructured code for displaying multiple forms
	made it use a Athena background
	added test form, registration form and configuration form placeholders
	added most of configuration form
	* icons/eazel-logo.gif: added Eazel logo image
	* icons/Makefile.am: added Eazel logo to Makefile

2000-04-03  Andy Hertzfeld <andy@eazel.com>

	added configuration inventory to nascent service component.  This only
	builds if --enable-eazel-services is set
	
	* components/services/startup/Makefile.am:
	added eazel-register.c,h to the build
	* components/services/startup/eazel-register.c,h:
	contains to build an xml file that expresses the hardware and software
	configuration, using the package database and the proc filesystem.
	* components/services/startup/athena-service-startup-view.c:
	added a button to generate the configuration inventory file in the
	user's home directory.  This is temporary scaffolding and will be
	replaced soon.
	* src/ntl-uri-map.c:
	made it invoke the service component for uri's starting with "eazel:";
	also, fixed a bug where an uninitialized variable was being freed.
	* athena-clean.sh:
	added the rpm view to the list of cleaned components.
		
2000-04-03  Darin Adler  <darin@eazel.com>

	First cut at tiled background images.

	There's no UI for setting them yet, they are only in
	the icon view, and they don't work properly with scrolling yet.

	* libathena/Makefile.am:
	* libathena/athena-gdk-extensions.c:
	* libathena/athena-gdk-extensions.h:
	* libathena/athena-gdk-pixbuf-extensions.c:
	* libathena/athena-gdk-pixbuf-extensions.h:
	Split the GdkPixbuf stuff into its own file.

	* libathena/athena-background.c:
	(athena_background_destroy): Fixed a bunch of leaks
	and added new code to stop pixbuf loading.
	(athena_background_draw): Added call to draw tiled
	background image. Converted gradients to use gdk_rgb
	instead of gdk_color.
	(athena_background_get_tile_image_uri): Implemented.
	(athena_background_set_color): Added short-circuit
	for background image case.
	(load_image_callback),
	(athena_background_set_tile_image_uri): Implemented.
	Include code to	load in the tiled image when its URI is set.
	(athena_background_receive_dropped_color): Set the
	tile image to NULL when a color is dropped.

	* libathena/athena-gdk-extensions.c:
	* libathena/athena-gdk-extensions.h:
	(athena_fill_rectangle_with_color),
	(athena_fill_rectangle_with_color),
	(athena_interpolate_color): Changed from gdk_color
	to gdk_rgb.
	(athena_parse_rgb_with_white_default): Added function
	for gdk_rgb similar to what we already have for gdk_color.

	* libathena/athena-icon-canvas-item.c:
	* libathena/athena-icon-container.c:
	* libathena/athena-list.c:
	Use gdk-pixbuf extensions in new location.

	* libathena/athena-metadata.h:
	Added metadata keys for background images.

	* src/ntl-view.c:
	Added lots of stronger checks for ATHENA_IS_VIEW since
	this is where we run into trouble with a bug I ran into.

	* src/file-manager/icon-view.c: Added code to handle
	the new background images.
	(create_icon_container): Keep around the handler ID when
	connecting to the "changed" message of the background so
	we can block the handler as needed.
	(fm_icon_view_begin_loading): Load the background image
	as well as the background color. We need to block the
	background changed signal handler so we don't get
	confused while the color but not the image is set up.
	(fm_icon_view_background_changed_callback): Save the
	background image URI as well as the background color in
	the metadata.

2000-04-03  Darin Adler  <darin@eazel.com>

	Fix the build. Changes in GtkHtml and Bonobo required us
	to catch up.

	* libathena/ntl-meta-view-frame.h:
	* libathena/ntl-meta-view-frame.c:
	Rewrote to use the new property bag. This requires us to
	store our own properties, since the bag no longer provides
	any storage.
	(athena_meta_view_frame_initialize): Set up the label.
	(athena_meta_view_frame_new_from_bonobo_control): Make it
	actually take a BonoboControl instead of a BonoboObject and
	make it set up the property bag.
	(athena_meta_view_destroy): Free the label.
	(autilus_meta_view_frame_set_label): Just set the label.
	The property bag simply uses our stored label.

	* components/html/ntl-web-browser.c (browser_url_load_gone):
	Changed call to match name in new version of GtkHtml.
	Unfortunately, the new name makes it clear the call is
	intended to be private.

	* components/rpmview/.cvsignore: Ignore the actual binary,
	not athena-music-view.
	* components/rpmview/Makefile.am: Turned on -Werror.
	* components/music/Makefile.am: Turned on -Werror.
	* components/rpmview/athena-rpm-view.c: Fixed warnings.

2000-04-02  Andy Hertzfeld <andy@eazel.com>

	Added a first cut at a component for viewing rpm packages.
	
	* configure.in: added components/rpmview
	* components/Makefile.am: added rpmview
	* components/rpmview/.cvsignore: new file
	* components/rpmview/Makefile.am: make file for rpm view
	* components/rpmview/main.c: boilerplate factory, main loop for component
	* components/rpmview/athena-rpm-view.h: defines for rpm view component
	* components/rpmview/athena-rpm-view.goad: goad record for activating rpmview component
	* components/rpmview/athena-rpm-view.c: here's the actual code for the component,
	which reads a package with rpm and sets up the fields in the view from the data
	* src/ntl-uri-map.c: modified mapping so rpms get this component added
	
2000-04-01  Ramiro Estrugo  <ramiro@eazel.com>

	Add a conditionally built skeleton for a startup service.
	
	* configure.in: Properly define EAZEL_SERVICES with an
	AM_CONDITIONAL.  Add new directories components/services
	components/srevices/startup.

	* components/Makefile.am: Recurse into services dir if needed.

	* components/services, components/services/startup: new dirs.

	* components/services/athena-service-startup-view.c,
	  components/services/athena-service-startup-view.h,
	  components/services/athena-service-startup-view.goad,
	  components/services/Makefile.am,
	  components/services/.cvsignore:

	Skeleton code for startup service.
	
2000-03-31  Pavel Cisler  <pavel@eazel.com>

	* libathena/athena-icon-container.c:
	(motion_nofity_event):
	Disable copy as a drag&drop operation for now. The current
	copy engine doesn't handle conflicts properly yet and can
	erase your files.


2000-03-31  Darin Adler  <darin@eazel.com>

	Fixed a bug that Pavel reported where he got a crash in
	athena_directory_monitor_files_unref when he pushed the
	"Up" button.

	* libathena/athena-glib-extensions.c:
	* libathena/athena-glib-extensions.h:
	(athena_g_strv_find): Renamed the existing function
	athena_g_strfindv to be more consistent with the rest
	of glib, even though it's less consistent with the other
	strv functions.
	(athena_g_list_safe_for_each): Added an alternate
	version of g_list_foreach that works even when the current
	item is removed from the list inside the function.

	* libathena/athena-gtk-extensions.c:
	(athena_gtk_object_list_unref): Use the new safe version
	of g_list_foreach so this works even on lists where the
	objects remove themselves in their destroy/finalize methods.
	This is the change that fixes the bug.

	* src/athena-bookmark-list.c:
	(athena_bookmark_list_load_file): Replaced some explicit
	code with a call to athena_gtk_object_list_free.

	* src/athena-index-title.c:
	(athena_index_title_update_icon): Fixed a bug that would
	prevent you from viewing the root level. The current version
	of athena_file_get returns NULL for the root.

	* src/athena-window-menus.c:
	(clear_appended_bookmark_items): Replaced some explicit
	code with a call to athena_g_list_free_deep.

	* src/file-manager/fm-icon-text-window.c:
	(synch_menus_with_preference): Updated to use the
	athena_g_strv_find call by its new name.

	* libathena/athena-file.c:
	(athena_file_set_keywords): Did some minor tweaks to
	simplify the no-keywords case.

2000-03-30  John Sullivan <sullivan@eazel.com>

	Finished task 172 (show icon emblems in list view)

	* libathena/athena-file.h:
	added ATHENA_FILE_SORT_BY_EMBLEMS to enum
	(athena_file_get_emblem_names): New function.
	* libathena/athena-file.c:
	(athena_file_get_emblem_names): New function.
	(athena_file_compare_by_emblems): New function,
	compares the emblems of two files for sorting.
	(compare_emblem_names): New function, compares two
	emblem names for sorting.
	(athena_file_compare_for_sort_internal): handle
	ATHENA_FILE_SORT_BY_EMBLEMS case
	(sort_keyword_list_and_remove_duplicates): New function,
	canonicalizes (canonifies? canonizes?) a list of keywords.
	(athena_file_get_keywords): canonicalize list after
	reading from file.
	(athena_file_set_keywords): canonicalize copy of list
	before storing.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_emblem_icons_for_file): Use
	athena_file_get_emblem_names instead of having emblem
	name knowledge here.
	
	* libathena/athena-list.h: 
	AthenaCellType: new enum, a superset of GtkCellType that
	we use to sneak in new values.
	AthenaCellPixbufList: new struct, our new type of content
	for a list cell.
	(athena_list_set_pixbuf_list): New function.
	* libathena/athena-list.c:
	(athena_list_set_cell_contents): New function, handles the
	ATHENA_CELL_PIXBUF_LIST case and lets GtkCList continue
	handling the others.
	(athena_list_initialize_class): Fill in set_cell_contents
	function pointer with athena_list_set_cell_contents.
	(gdk_window_size_as_rectangle): New helper function.
	(draw_cell_pixmap): Removed width & height parameters (now
	calculated internally) and reworked to use GdkRectangle	math.
	(draw_cell_pixbuf): New function, modelled after (new & improved)
	draw_cell_pixmap but draws a gdk_pixbuf directly.
	(draw_row): handle the ATHENA_CELL_PIXBUF_LIST case; fix up
	callers to draw_cell_pixmap; use AthenaCellType instead of
	GtkCellType.
	(athena_list_set_pixbuf_list): New function, sneaks a list
	of pixbufs into the ugly GtkCell data structure.
	
	* src/file-manager/fm-list-view.c:
	(fm_list_view_reset_row_height): New function, sets the row height
	based on zoom level but with a minimum to avoid clipping emblems.
	(fm_list_view_get_emblem_pixbufs_for_file): create list of
	appropriately-sized emblem images. Size is based on zoom level
	but has a minimum so the emblems don't get illegibly small.
	(install_icons): Rename to install_row_images; handle setting
	the list of emblems into the list widget.
	(create_list): include column for emblems between icon & name;
	set row height only after other widget manipulations.
	(add_to_list), (update_icons): reflect install_icons name change.
	(fm_list_view_file_changed): reflect install_icons name change;
	sort list since changed file might change sort order. (No API
	to resort just one row; I added a comment about that in case
	we want to revisit it someday.)
	(fm_list_view_set_zoom_level): call fm_list_view_reset_row_height.
	(get_attribute_from_column), (get_column_from_attribute),
	(sort_criterion_from_column): handle LIST_VIEW_COLUMN_EMBLEMS

2000-03-30  Darin Adler  <darin@eazel.com>

	Finished task 62 (Set custom icon by drag/drop on index panel)
	and fixed some problems from my earlier check-ins today.

	* libathena/athena-directory.c:
	(athena_directory_monitor_files_ref):
	Fixed a bad assert from my last check-in.

	* src/file-manager/fm-list-view.c: (add_to_list):
	The list view had the same missing ref that I fixed for icon
	view in my last check-in.
	
	* src/athena-index-title.c: (release_file),
	(athena_index_title_destroy),
	(athena_index_title_update_icon),
	(athena_index_title_update_label),
	(athena_index_title_update_info),
	(athena_index_title_set_uri): Changed to hold around the
	AthenaFile object and connect to its "changed" message to update
	the file information. This causes the icon to get updated right
	away when the custom icon is changed.

	* libathena/athena-directory-private.h:
	* libathena/athena-directory.c:
	* libathena/athena-file-private.h:
	* libathena/athena-file.c:
	* libathena/athena-file.h:
	Converted AthenaFile to be a GtkObject instead of a plain struct,
	so it can have a "changed" signal. We still recommend using the
	"files_changed" signal on the directory to avoid the overhead
	of a signal connection for each file.

	* libathena/athena-gtk-extensions.c:
	* libathena/athena-gtk-extensions.h:
	(athena_gtk_object_list_ref), (athena_gtk_object_list_unref),
	(athena_gtk_object_list_free): Added some functions to be used
	with a list of GtkObjects.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_icon_name_for_file):
	Had to change the name of athena_file_get_type to avoid conflict
	with the GtkObject standard get_type routine.

2000-03-30  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-icon-view.c: (add_icon_if_already_positioned),
	(add_icon_at_free_position): Added missing ref that caused very bad
	things to happen now that the file ref. counts are working.

	* components/music/athena-music-view.c:
	Did a bunch of cleanup and fixed some memory trashing bugs where
	the result of g_basename was passed to g_free.

2000-03-30  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	(athena_directory_ref), (athena_directory_unref):
	Added convenience functions so people don't have to be constantly
	reminded that a AthenaDirectory is a a GtkObject.

	* libathena/athena-directory.c: (athena_directory_destroy):
	Fixed a problem where the pending files callback might fire after
	the AthenaDirectory is gone.
	
	* libathena/athena-directory.c:
	(athena_directory_destroy),
	(athena_directory_monitor_files_ref),
	(athena_directory_monitor_files_unref),
	(dequeue_pending_idle_callback), (athena_directory_new_file):
	* libathena/athena-file-private.h:
	* libathena/athena-file.c:
	(athena_file_get), (athena_file_ref), (athena_file_unref),
	(athena_file_free), (athena_file_delete):
	To prepare for changing AthenaFile to a GtkObject, made it use
	ref counts in a way that is standard. Now the directory keeps a
	list of the files, but only keeps a ref to the files if it is
	monitoring them.

	* src/file-manager/fm-directory-view.c: Tiny formatting tweak.

2000-03-30  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icon-container.c:
	make the icon selection rectangle have a semi-transparent light blue
	fill color.
	* libathena/athena-icon-canvas-item.c:
	tweaked the selection darkening to be a little bit lighter.
	
2000-03-30  Pavel Cisler  <pavel@eazel.com>

	More copy/move operations. Fixes a problem I introduced earlier where
	drop onto a file would lock up Athena.
	
	* libathena/athena-gtk-extensions.c:
	* libathena/athena-gtk-extensions.h:
	(athena_gtk_marshal_NONE__POINTER_POINTER_POINTER_INT_INT_INT):
	Add more binder glue that I needed.

	* libathena/athena-icon-container.c:
	(motion_notify_event):
	Enable move/copy modes during drag/drop.

	* libathena/athena-icon-container.c:
	* libathena/athena-icon-container.h:
	* libathena/athena-icon-dnd.c:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	(move_copy_items):
	Pass in a list of point offsets to allow placing new item in
	the right relative position.

	* src/file-manager/fm-directory-view.c:
	(xfer_callback):
	Don't loop forever during a conflict.

2000-03-30  Maciej Stachowiak  <mjs@eazel.com>

	* components/sample/main.c (sample_make_object): Connect to the
	"destroy" signal of the view_frame rather than the sample content
	view object, to avoid a race condition where we might exit before
	the view_frame is fully unreffed and has a chance to clean up.
	components/sample/athena-sample-content-view.c
	(athena_sample_content_view_destroy): Unref the
	AthenaViewFrame when we are destroyed.

	* libathena/athena-zoomable.c, libathena/ntl-view-frame.c,
	libathena/ntl-content-view-frame.c,
	libathena/ntl-meta-view-frame.c: Use boilerplate macros for
	get_type method and to invoke parent destroy method.

	* libathena/athena-zoomable.c, libathena/ntl-view-frame.c:
	Unref the interface we query_local_interface for, to avoid holding
	a superfluous ref to ourselves, since we eventually add_interface
	that interface.

	* src/ntl-view.c (athena_view_destroy_client): Use
	bonobo_object_unref instead of bonobo_object_destroy.

2000-03-29  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-tabs.c:
	fixed bug #312, index tabs don't resize properly,
	by overriding size_allocate, to fix up the
	height appropriately when the size changes
	
2000-03-28  Pavel Cisler  <pavel@eazel.com>

	Started on copy/move operations

	* libathena/athena-icon-dnd.c:
	(athena_icon_container_item_at), (get_container_uri),
	(athena_icon_container_selection_items_local),
	(athena_icon_canvas_item_can_accept_item),
	(athena_icon_canvas_item_can_accept_items),
	(athena_icon_container_receive_dropped_icons):
	Handle drops by starting a move operation. Add new calls that
	help determine the drop target.

	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	(xfer_callback), (fm_directory_view_move_copy_items):
	Initial version of calls that start the gnome-vfs-xfer job.

	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	(fm_directory_view_get_container_uri):
	Added new call needed to determine type of move operation.

	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-icon-view.h:
	Connect "move_copy_items" and "get_container_uri" signals
	with new calls in FMDirectoryView.
	
	* athena-gtk-extensions.c
	* athena-gtk-extensions.h
	(athena_gtk_marshal_NONE__POINTER_POINTER_INT_INT_INT),
	(athena_gtk_marshal_NONE__POINTER_INT_INT_DOUBLE_DOUBLE):
	Add new binder glue that I needed for new signal calls.

	* libathena/athena-icon-container.c:
	* libathena/athena-icon-container.h:
	Add new signals "move_copy_items" and "get_container_uri".
	
2000-03-28  Darin Adler  <darin@eazel.com>

	* libathena/athena-background.h:
	* libathena/athena-background.c:
	Preparing for support for background images.

	* libathena/athena-background.c:
	* libathena/athena-debug.c:
	* libathena/athena-icon-canvas-item.c:
	* libathena/athena-icon-dnd.c:
	Add those braces that Maciej, John, and the style guide all prefer.

	* libathena/athena-file.c: (athena_file_set_metadata):
	A change to metadata is considered a change to the file.

	* libathena/athena-graphic-effects.c:
	* libathena/athena-graphic-effects.h:
	Added athena_ prefix to all the functions in here.

	* libathena/athena-gtk-extensions.c:
	* libathena/athena-gtk-extensions.h:
	(athena_point_in_allocation),	(athena_point_in_widget):
	Added hit testing help functions that check if a point is
	in a particular allocation/widget.

	* libathena/athena-icon-dnd.c: (get_gnome_icon_list_selection):
	Fixed a bug that happens when you get a 0-length piece of
	selection data.

	* libathena/athena-icon-dnd.h:
	Changed the icon list back to "x-gnome-icon-list".
	That's how the other GNOME folks want it, not "x-athena-icon-list".

	* src/athena-index-tabs.c:
	* src/athena-index-tabs.h:
	* src/athena-index-title.c:
	* src/athena-index-title.h:
	* src/ntl-index-panel.c:
	* src/ntl-index-panel.h:
	lite -> light, Other cleanup.

	* src/athena-index-title.c:
	* src/athena-index-title.h:
	(athena_index_title_hit_test_icon):
	* src/ntl-index-panel.c:
	(hit_test), (uri_is_local_image), (receive_dropped_uri_list),
	(receive_dropped_color):
	Added code needed to support dropping an image on the icon to set
	a custom icon. This doesn't yet update the icon in the panel itself,
	but I'll do that soon.

2000-03-28  John Sullivan <sullivan@eazel.com>

	Maciej, Darin and I discussed the notify_title_change
	design and decided that we didn't need it now and that
	we should keep the API simpler by removing it, along
	with the initial_title parameter I added to
	notify_location_change. So out they come.

	* components/help/hyperbola-nav-tree.c,
	* components/history/ntl-history-view.c,
	* components/html/ntl-web-browser.c,
	* components/music/athena-music-view.c,
	* components/notes/ntl-notes.c,
	* components/sample/athena-sample-content-view.c,
	* components/websearch/ntl-web-search.c,
	* idl/athena.idl,
	* libathena/ntl-view-frame.c,
	* libathena/ntl-view-frame.h,
	* src/ntl-view-bonobo-control.c,
	* src/ntl-view-bonobo-subdoc.c,
	* src/ntl-view-athena.c,
	* src/ntl-view-private.h,
	* src/ntl-view.c,
	* src/ntl-view.h,
	* src/ntl-window-msgs.c,
	* src/file-manager/fm-directory-view.c: Removed notify_title_change
	and the initial_title parameter to notify_location_change wherever
	they reared their ugly heads.

2000-03-28  John Sullivan <sullivan@eazel.com>

	* libathena/athena-icon-container.c:
	(keyboard_move_to): The behavior of the Control key got
	accidentally reversed in a recent cleanup.

2000-03-28  Ramiro Estrugo  <ramiro@eazel.com>

	Cleanup AthenaPreferences a bit in preparation for api revamp
	to support implicitly registered preferences.

	* athena-widgets/athena-preferences.c,
	  athena-widgets/athena-preferences.h: Rename hash table node
	structures from "PrefHashInfo" to "PrefHashNode".  Remove some
	unused and crufty code.  Add a bunch of comments describing 
	structures and functions.  Remove prefs_check_supported_type()
	which was leftover from when I tried to use GtkType instead of 
	defining an enum of supported types.  Also, rename
	athena_preferences_get_pref_info to athena_preferences_get_info.

	* athena-widgets/athena-preferences-item.c,
	  athena-widgets/athena-preferences-item.h: Add enum
	AthenaPreferencesItemType to enumerate the types of pereferences
	that have a corresponding UI.  Since there can be preferences that
	are not exposed in the UI, this is different than AthenaPreferencesType.
	(preferences_item_construct): Use newly renamed function
	athena_preferences_get_info.  Also remove the dummy
	ATHENA_PREFENCES_STRING case statement, since
	AthenaPrefernecesItem now has its own type enumeration
	independant of AthenaPreferences.
	
2000-03-28  John Sullivan <sullivan@eazel.com>

	Followup to last night's checkin; I forgot to add the
	initial_title parameter to a notify_location_change
	signal and all its signal handlers.
	
	* libathena/ntl-view-frame.c:
	(impl_Athena_View_notify_location_change): Add
	initial_title parameter, pass it along when emitting
	signal.

	* components/help/hyperbola-nav-tree.c,
	* components/history/ntl-history-view.c,
	* components/html/ntl-web-browser.c,
	* components/music/athena-music-view.c,
	* components/notes/ntl-notes.c,
	* components/sample/athena-sample-content-view.c,
	* components/websearch/ntl-web-search.c,
	* src/file-manager/fm-directory-view.c:
	Added initial_title parameter to notify_location_change
	signal handlers.

	* src/ntl-view-athena.c: Removed a stray g_message.

2000-03-27  Andy Hertzfeld <andy@eazel.com>

	* icons/eazel/i-directory-24.png:
	fixed bug #9, folder too small, by replacing the icon with one that's the proper size
	
2000-03-27  John Sullivan <sullivan@eazel.com>

	Made web page titles be used for the window title,
	the index panel location name, and the menu item in
	the Go menu (which is then used for the Bookmarks menu
	too). This required lots of underpinnings work. Now any
	content view (not just the web browser) can express its
	opinion on what title for the current location should be
	displayed to the user.

	* idl/athena.idl: added View:notify_title_change; added
	initial_title parameter to View:notify_location_change;
	reordered functions in View to better group related items;
	added ContentViewFrame:request_title_change.

	* libathena/athena-view-frame-private.h: New file,
	holds a struct and a function shared by AthenaViewFrame
	and (now) AthenaContentViewFrame.

	* libathena/ntl-view-frame.h: Reordered functions to
	match idl (just for clarity); also added (notify_title_change).
	* libathena/ntl-view-frame.c: Moved _AthenaViewFramePrivate
	struct to new private .h file, added (notify_title_change);
	reordered function pointers in epv to match idl.
	(athena_view_frame_class_init): Set up signal for
	notify_title_change.
	(athena_view_frame_ensure_view_frame): No longer static since
	it's in new private .h file.

	* libathena/ntl-content-view-frame.h,
	* libathena/ntl-content-view-frame.c:
	(athena_content_view_frame_request_title_change):
	New function that a content view calls on its frame
	when it has an opinion about what the user-displayable
	title for the current location should be.

	* libathena/athena-bookmark.c,
	* libathena/athena-bookmark.h:
	(athena_bookmark_set_name): New function to change the name of
	an existing bookmark.

	* src/ntl-view-private.h: Moved definition of impl_POA_Athena_ViewFrame
	here so it can be shared by AthenaContentView; reordered functions in
	_AthenaViewComponentType to match idl and included notify_title_change.
	* src/ntl-view-frame-svr.c: Moved definition of impl_POA_Athena_ViewFrame
	out of here.
	* src/ntl-view.h,
	* src/ntl-view.c:
	(athena_view_notify_location_change): Added initial_title parameter.
	(athena_view_notify_title_change): New function.
	* src/ntl-view-athena.c:
	(nv_notify_location_change): Added initial_title parameter.
	(nv_notify_title_change): New function.
	athena_view_component_type: reordered function pointers to
	match idl, and added new one for notify_title_change.
	* src/ntl-view-bonobo-control.c:
	(bonobo_control_notify_location_change): Added initial_title parameter.
	bonobo_control_component_type: reordered function pointers to match idl
	and added notify_title_change.
	* src/ntl-view-bonobo-subdoc.c
	(bonobo_subdoc_notify_location_change): Added initial_title parameter.
	bonobo_subdoc_component_type: reordered function pointers to match idl
	and added notify_title_change.

	* src/athena-bookmark-list.c:
	(destroy_bookmark): Removed this function.
	(athena_bookmark_list_delete_item_at): unref where it was destroying.
	(athena_list_load_file): use gtk_object_unref as foreach function
	instead of destroy_bookmark.
	
	* src/athena-index-title.h,
	* src/athena-index-title.c:
	new field _AthenaIndexTitleDetails->requested_text.
	(athena_index_title_set_uri): Added initial_text parameter;
	store initial_text in requested_text field after freeing old value.
	(athena_index_panel_set_text): New function, passes new text to
	athena_index_title_set_up_label.
	(athena_index_title_finalize): free requested_text.
	(athena_index_title_set_up_label):
	Use requested_text instead of extracting short name of URI here.
	* src/ntl-index-panel.h,
	* src/ntl-index-panel.c:
	(athena_index_panel_set_uri): Added initial_title parameter.
	(athena_index_panel_set_title): New function, called if the title
	changes later on; pass new_title on to athena_index_title_set_text.
	(athena_index_panel_set_up_info): Added initial_title parameter;
	pass initial_title on to athena_index_title_set_uri.
	
	* src/ntl-content-view.h: Redid object & class struct definitions
	to match others; added request_title_change signal definition.
	* src/ntl-content-view.c:
	added function pointer for request_title_change to epv;
	added signal-definining enum & array;
	(impl_Athena_ContentViewFrame_request_title_change): New function.
	(athena_content_view_class_init): Define "request_title_change" signal.
	(athena_content_view_request_title_change): New function, emits signal.
		
	* src/ntl-window.h: New fields for requested_title, default_title,
	current_location_bookmark, last_location_bookmark.
	* src/ntl-window.c:
	(athena_send_history_list_changed): New convenience routine to
	emit "history_list_changed" signal since it's emitted in more than
	one place now.
	(athena_add_to_history_list): Change parameter from a const char *
	to a AthenaBookmark; call athena_send_history_list_changed.
	(athena_window_request_title_change_callback): New function, calls
	athena_window_request_title_change.
	(athena_window_connect_view): Just variable renaming & reformatting.
	(athena_window_connect_content_view): New function, calls
	athena_window_connect_view then connects to "request_title_change: signal
	also.
	* src/ntl-window-private.h:
	(athena_window_connect_content_view): New prototype.
	(athena_send_history_list): New prototype.
	(athena_add_to_history_list): Change parameter from const char * 
	to AthenaBookmark *
	* src/ntl-window-msgs.h: 
	(athena_window_request_title_change): prototype for new function.
	* src/ntl-window-msgs.c: 
	(athena_window_refresh_title): Removed.
	(compute_default_title), (athena_window_get_current_location_title),
	(athena_window_update_title_internal), 
	(athena_window_reset_title_internal), 
	(athena_window_request_title_change): New functions having to do with
	passing around the title-change request. Note that there's an unresolved
	problem where calling athena_view_notify_title_change here doesn't work
	properly for metaviews. There's a comment in the code and I'll write up
	a bug report also. There are currently no metaviews that care.
	(athena_window_update_internals): Use window->last_location_bookmark
	instead of creating a new bookmark for back/forward lists (this means the
	back/forward menus will respect any title change requests); remove one
	of the two identical calls to athena_index_panel_set_uri; modify the
	other one to pass current location title.
	(athena_window_update_view): Pass current title to
	athena_view_notify_location_change.
	(athena_window_load_content_view): 
	Call athena_window_connect_content_view instead of 	
	athena_window_connect_view.
	(athena_window_update_state): Call athena_window_reset_title_internal
	at two spots where the location is changing.
	* src/athena-window-menus.c:
	(athena_window_add_bookmark_for_current_location): Use
	window->current_location_bookmark instead of creating a new one
	to take advantage of any requested title changes.	

	* components/html/ntl-web-browser.c:
	(browser_title_changed): New function, calls 
	athena_content_view_frame_request_title_change.
	(make_obj): Connect browser_title_changed to "title_changed" signal
	of gtkhtml widget.

	Fixed bug 353 (Removing all bookmark items from window can lead to crash)

	* src/athena-bookmarks-window.c: (on_remove_button_clicked):
	If we removed the last item, explicitly call repopulate since
	no callback handles that case.

2000-03-27  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icon-canvas-item.c:
	changed the logic in athena_icon_canvas_item_draw to treat
	pre-lighting and selection darkening independently, so both properties
	will be visually reflected.
	
2000-03-27  Andy Hertzfeld <andy@eazel.com>

	Changed how selection emboldening works.  The problem was that using
	a bold font changed the text layout, making words jump from line to
	line when an icon was selected.  The new approach doesn't use a bold
	font; instead it just draws it an extra time, offset by a pixel
	
	* libathena/athena-icon-canvas-item.c:
	embolden by drawing twice instead of using a bold font; also, removed
	the "hilight_font" stuff
	* libathena/athena-icon-private.h:
	removed the hilite_font field
	* libathena/athena-icon-container.h:
	removed the highlight font stuff
	* libathena/athena-graphic-effects.c,h:
	cleaned up by using a common routine to make the destination pixbuf;
	fixed bug in create_darkened_pixbuf by using separate counts for source
	and destination rowstride;
	added a "create_colorized_pixbuf" routine
	
2000-03-26  Ramiro Estrugo  <ramiro@eazel.com>

	Removed the ETTORE user level easter egg and bullet proofed the 
	stuff that uses user levels a bit.

	* libathena/athena-global-preferences.c,
	  libathena/athena-global-preferences.h: Remove references to 
	  ATHENA_USER_LEVEL_ETTORE.

	* src/ntl-window-state.c: Removed switch handling of ETTORE user 
	  level and added a default case for the unlikely (but poissible) 
	  event when the ~/.gnome/athena preferences file contains bogus
	  values for the user_level enumeration.

	* src/file-manager/fm-directory-view.c: Same as above.
	
2000-03-25  Andy Hertzfeld <andy@eazel.com>

	Improved selection highlighting.
	
	* libathena/athena-graphic-effects.c,h:
	added create_darkened_pixbuf routine based on one in panel
	* libathena/icon-private.h:
	added field for highlight_font
	* libathena/icon-container.c:
	loads and maintain highlight font
	* libathena/icon-canvas-item:
	if item is selected, darken the icon and use the highlight font
	
2000-03-24  Darin Adler  <darin@eazel.com>

	Fixed bug 337 (Crash on userlevel change).
	
	* src/file-manager/fm-directory-view.c (user_level_changed_callback):
	Fixed incorrect assert.

2000-03-24  Andy Hertzfeld <andy@eazel.com>

	moved pixbuf special effect routines into libathena, to prepare for
	adding selection hilighting and others
	
	* libathena/athena-graphic-effects.h:
	header file for pixbuf graphic effects routines
	* libathena/athena-graphic-effects.c:
	moved create_spotlight_pixbuf and make_semi_transparent here,
	fixed bug in create_spotlight_pixbuf by using separate rowstride for
	the src and dst like Darin did for make_semi_transparent
	* libathena/Makefile.am:
	added athena-graphic-effects.c & .h
	* libathena/athena-icon-canvas-item.c:
	removed create_spotlight_pixbuf routine
	* libathena/athena-icon-dnd.c:
	removed make_semi_transparent routine
	
2000-03-23  John Sullivan  <sullivan@eazel.com>

	Put sample merged menu item and merged toolbar item
	into sample component.

	* components/sample/athena_sample_content_view.c:
	(sample_notify_location_change_cb): Changed name to
	sample_notify_location_change_callback and changed
	parameter name "view" to "view_frame" and "sample"
	to "view" to match other uses; added assert that
	view's view_frame is the same as parameter view_frame.
	(athena_sample_content_view_initialize): Added signal
	connection for bonobo control activation.
	(athena_sample_content_view_load_uri): Made the displayed
	text include an explanatory sentence in addition to the uri,
	so Athena users will be more likely to understand what this
	thing is.
	(bonobo_sample_callback): New function, changes the sentence
	displayed with the uri based on callback caller (menu item or
	toolbar button).
	(sample_merge_bonobo_items_callback): New function, creates one
	sample merged menu item and one sample merged toolbar button,
	whose callback functions are both bonobo_sample_callback.

	* src/file-manager/fm-directory-view.c:
	(bonobo_control_activate_cb): Removed never-called "state == FALSE"
	case, added comment.
	(fm_directory_view_real_merge_menus): Removed #if 0'ed sample
	toolbar button, now that there's one in the sample component.

2000-03-23  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus): Put in a commented-out
	sample merged toolbar button, as a starting point for the
	ones we plan to implement later.

	* src/ntl-window-msgs.c: (athena_window_set_state_info):
	Put an #ifdef EXTREME_DEBUGGING around "Doing sync - action tag"

2000-03-23  Darin Adler  <darin@eazel.com>

	Fixed bug 336 (merged menu items don't go away when component
	is swapped out).
	
	* src/file-manager/fm-directory-view.c: (fm_directory_view_destroy):
	While debugging, I noticed that the view_frame was allocated by the
	FMDirectoryView and never unref'd. The exact connection of this to
	why the widgets don't go away is now lost in time. We added a call
	to bonobo_object_unref to get rid of the view frame.

	* src/ntl-window.h, src/ntl-window.c, src/ntl-window-msgs.c:
	(Athena_NavigationInfo_free): Got rid of this routine. It turns
	out that this was an incorrect hack to work around the error in
	the surrounding code that was copying CORBA object references
	without calling	CORBA_Object_duplicate.
	(athena_window_destroy), (athena_window_request_selection_change):
	Changed code that was calling Athena_NavigationInfo_free to just
	call CORBA_free now that the incorrect hack is not needed.
	(athena_window_request_selection_change),
	(athena_window_update_view), 
	(athena_window_update_internals),
	(athena_window_load_content_view): Changed all code that was
	manipulating content_view to use CORBA_Object_duplicate when
	storing a reference and CORBA_Object_release when overwriting
	a reference.

2000-03-22  Darin Adler  <darin@eazel.com>

	Fixed bug 334 (Need proper hit detection when hit-testing icons)

	* libathena/athena-icon-canvas-item.c: (hit_test_pixbuf):
	Fixed a typo-type error where we were checking every pixel of the
	pixbuf instead of only the pixels that we were hit testing against.

	* libathena/athena-icon-container.c: Tweaks.

2000-03-22  John Sullivan  <sullivan@eazel.com>

	Fixed bug 308 (Straighten out the new_window situation
	in Athena_NavigationRequestInfo)

	Athena_NavigationRequestInfo was passing around a trio
	of tri-state values where one boolean would do. Now it
	passes around one boolean.

	* idl/athena.idl: Eliminated enum TruthValue,
	replaced NavigationRequestInfo's new_window_default, 
	new_window_suggested, and new_window_enforced with boolean 
	new_window_requested.
	
	* components/help/hyperbola-nav-index.c: (hyperbola_navigation_index_select_row), 
	* components/help/hyperbola-nav-search.c: (hyperbola_navigation_search_select_row),
	* components/help/hyperbola-nav-tree.c: (hyperbola_navigation_tree_select_row), 
	* components/history/ntl-history-view.c:
	* components/websearch/ntl-web-search.c:
	* src/athena-window-toolbars.c:
	* src/ntl-window-msgs.c:
	* src/ntl-window.c:
	* src/file-manager/fm-directory-view.c:
	Simplified all users of Athena_NavigationRequestInfo to match.

	* components/music/main.c: Added a #include to kill 
	warning about gnome_vfs_init being undefined.

2000-03-21  John Sullivan  <sullivan@eazel.com>

	Fixed bug 335 (Menus incorrect after keyboard navigation)

	* libathena/athena-icon-container.c: (keyboard_move_to):
	Emit SELECTION_CHANGED signal after changing selection.

2000-03-21  John Sullivan  <sullivan@eazel.com>

	Fixed bug 203 (preserve back/forward chain when using
	back/forward menus).

	* src/ntl-window.h: added enum AthenaLocationChangeType.
	Removed window fields is_back and is_reload. Added window
	fields location_change_type and location_change_distance.

	* src/ntl-window-private.h:
	(athena_window_back_or_forward): Exposed this function.
	(athena_window_change_location): Changed name to
	athena_window_begin_location_change and replaced is_back
	and is_forward parameters with type & distance.
	(athena_window_end_location_change): Removed this prototype
	that had no implementation.

	* src/ntl-window-msgs.c:
	(athena_window_update_internals): Rewrote to use
	location_change_type and location_change_index.
	(athena_window_change_location): Changed name to
	athena_window_begin_location_change and replaced is_back
	and is_forward parameters with type & distance.
	(athena_window_request_location_change): Updated caller of
	athena_window-change_location.
	(athena_window_change_location_2): Renamed to
	athena_window_end_location_change_callback for clarity; removed
	useless assignment to window->is_back.
	(view_menu_switch_views_cb): Removed useless assignments of
	window->is_back and window->is_reload.
	(athena_window_update_state): Removed is_back from a debug message.

	* src/ntl-window.c: 
	(athena_window_back_or_forward): Added distance parameter; 
	call athena_window_begin_location_change properly.
	(athena_window_back_cb), (athena_window_forward_cb):
	Pass distance of 0 to athena_window_back_or_forward.

	* src/athena-window-toolbars.c: (activate_back_or_forward_menu_item):
	call newly-exposed athena_window_back_or_forward.

2000-03-21  Pavel Cisler  <pavel@eazel.com>

	* libathena/athena-icon-container.c
	(motion_notify_event):
	Fixed an annoying bug that would sometimes cause the drag&drop feedback
	to come up delayed. Turned out to be a silly mistake in the drag
	snap resistance test that caused the snap resistance to be infinite when
	you dragged near-horizontaly or near-vertically.

2000-03-21  Darin Adler  <darin@eazel.com>

	Did some of the items from RENAMING.

	* libathena/Makefile.am:
	* libathena/gnome-icon-container-dnd.c:
	* libathena/gnome-icon-container-dnd.h:
	* libathena/gnome-icon-container-grid.c:
	* libathena/gnome-icon-container-grid.h:
	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c:
	* libathena/gnome-icon-container.h:
	* libathena/gtkflist.c:
	* libathena/gtkflist.h:
	* libathena/athena-icon-canvas-item.c:
	* libathena/athena-icon-canvas-item.h:
	* libathena/athena-icon-container.c:
	* libathena/athena-icon-container.h:
	* libathena/athena-icon-dnd.c:
	* libathena/athena-icon-dnd.h:
	* libathena/athena-icon-grid.c:
	* libathena/athena-icon-grid.h:
	* libathena/athena-icon-private.h:
	* libathena/athena-icons-view-icon-item.c:
	* libathena/athena-icons-view-icon-item.h:
	* libathena/athena-lib-self-check-functions.h:
	* libathena/athena-list-column-title.c:
	* libathena/athena-list.c:
	* libathena/athena-list.h:
	* src/file-manager/Makefile.am:
	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view-icons.h:
	* src/file-manager/fm-directory-view-list.c:
	* src/file-manager/fm-directory-view-list.h:
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-icon-view.h:
	* src/file-manager/fm-list-view.c:
	* src/file-manager/fm-list-view.h:
	* src/ntl-app.c:
	Did these RENAMING entries:
	  FMDirectoryViewIcons -> FMIconView
	  FMDirectoryViewList  -> FMListView
	  GnomeIconContainer -> AthenaIconContainer
	  GnomeIconContainerIcon -> AthenaIcon
	  AthenaIconsViewIconItem -> AthenaIconCanvasItem

	* RENAMING: Marked the renaming done.

2000-03-21  Darin Adler  <darin@eazel.com>

	Fixed arrow keys and worked on the icon grid.
	Fixes bugs #314, #324, and #325.

	* components/help/hyperbola.goad:
	Corrected repo_ids -> repo_id, reported by Richard Hult.

	* src/athena.goad:
	Added missing = character, reported by Richard Hult.

	* libathena/gnome-icon-container-grid.c:
	* libathena/gnome-icon-container-grid.h:
	* libathena/gnome-icon-container.c:
	* libathena/gnome-icon-container-private.h:
	Made the icon grid handle negative coordinates.
	Removed most of the icon grid code.
	Reimplemented the arrow keys. They should work again.

	* libathena/athena-gnome-extensions.c:
	* libathena/athena-gnome-extensions.h:
	(athena_art_irect_contains_irect):
	Added another helper function.

	* libathena/athena-icons-view-icon-item.c:
	
	* libathena/athena-icons-view-icon-item.h:
	* libathena/gnome-icon-container.c:
	* libathena/gnome-icon-container-private.h:
	Added user data to each canvas item and got rid of the hash table
	that maps canvas items to icons.

	* RENAMING: Tweaks.

2000-03-20  Pavel Cisler  <pavel@eazel.com>

	* libathena/athena-list-column-title.c
	(athena_list_column_title_paint):
	Center the sort order indicators inside a title better. Make the column 
	title label spacing more like the old CtkCList.

2000-03-20  Pavel Cisler  <pavel@eazel.com>

	* libathena/athena-list-column-title.c
	(athena_list_column_title_paint), (athena_list_column_title_draw),
	(athena_list_column_title_buffered_draw),
	(athena_list_column_title_expose):
	Use an offscreen bitmap to draw the column title during column resizing
	and column prelighting.

	* libathena/athena-list-column-title.c
	(athena_list_column_title_finalize):
	Clean up properly - destroy a gc used to blit the sort order indicators
	
	* libathena/gtkflist.c
	* libathena/athena-list-column-title.c
	(gtk_flist_track_new_column_width),
	(athena_list_column_title_motion):
	Remove the column title update from the flist, have the mouse tracking 
	routine in the list column title take care of it.
	
2000-03-17  Darin Adler  <darin@eazel.com>

	Fixed the "tall line of icons" bug.

	* libathena/gnome-icon-container-grid.h:
	* libathena/gnome-icon-container-grid.c:
	* libathena/gnome-icon-container.c:
	Rewrote the routines to not have a separate concept of the
	actual grid height and the allocated grid height. Most important
	change was to update the first_free variables when resizing.

	* src/file-manager/fm-directory-view-icons.h:
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_line_up_icons):
	Removed the unused line_up_icons call. This feature will return,
	but for now it's just a waste of space.

2000-03-17  Darin Adler  <darin@eazel.com>

	Fixed the "rubberband does not work" bug.

	* libathena/gnome-icon-container-grid.h:
	* libathena/gnome-icon-container-grid.c:
	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c:
	* libathena/athena-icons-view-icon-item.c:
	* libathena/athena-icons-view-icon-item.h:
	Simplified the grid a bit and did some redesign. The grid now
	takes into account the height and width of the icons. More work
	to come.

	* libathena/athena-global-preferences.c:
	* athena-widgets/athena-preferences.h:
	Some cleanup, including types for constants.

	* libathena/athena-gnome-extensions.h:
	* libathena/athena-gnome-extensions.c:
	(athena_art_irect_equal), (athena_art_drect_equal),
	(athena_gnome_canvas_item_get_current_canvas_bounds),
	(athena_gnome_canvas_item_request_redraw),
	(athena_gnome_canvas_request_redraw_rectangle),
	(athena_gnome_canvas_item_get_world_bounds):
	More useful canvas and libart routines.
	
	* RENAMING: More renaming ideas.

2000-03-17  Elliot Lee  <sopwith@eazel.com>

	* libathena/gnome-icon-container-grid.c:
	Added #include <string.h>. For some reason Elliot needs this on
	his configuration even though I (Darin) don't need it on mine.
	Some day we have to track this down.

	Elliot checked in the above change without a ChangeLog entry,
	so I decided to make one for him.

2000-03-17  Darin Adler  <darin@eazel.com>

	* HACKING: Fixed to match what we actually have on Eazel machines.

2000-03-17  John Sullivan  <sullivan@eazel.com>

	Fixed bug 322 (going Back goes wacko).

	* src/athena-location-bar.c:
	(athena_location_bar_set_location): This function should
	not emit the location_changed signal; it's intended only to
	update the displayed text. This was causing a location-changing
	loop, which for reasons I did not investigate was not infinite.
	Added comments to clarify this function's purpose.

	Moved some more toolbar-related code into
	athena_window_toolbars.c.

	* src/athena-window-toolbars.c,
	* src/ntl-window.c: (activate_back_or_forward_menu_item),
	(activate_back_menu_item_cb), (activate_forward_menu_item_cb),
	(create_back_or_forward_menu), (back_or_forward_button_clicked_cb):
	Moved these functions from ntl-window.c to athena-window-toolbars.c.

2000-03-17  John Sullivan  <sullivan@eazel.com>

	Separate out toolbar code as first step towards
	bonobo-izing it.

	* src/athena-window-toolbars.c: New file
	* src/Makefile.am: put new file in build.
	* src/ntl-window-private.h: prototype for
	athena_window_initialize_toolbars
	* src/ntl-window.c: Moved toolbar stuff out of here
	and into new file.

2000-03-17  Pavel Cisler  <pavel@eazel.com>

	Fix some bugs that John kindly uncovered.

	* libathena/gtkflist.c
	(gtk_flist_resize_column):
	Make it so that the column title updates when column width changes
	by zooming in and out.

	* libathena/gtkflist.c
	(gtk_flist_column_resize_track_start), (gtk_flist_column_resize_track_end):
	Fix a dumb segfault - clist was not being initialized properly.

	* libathena/athena-list-column-title.c
	(athena_list_column_title_paint):
	Make the sort indicator draw on the other side of the column title
	as it should.
	Tweak an assert.

	* libathena/athena-list-column-title.c
	(athena_list_column_title_leave):
	Fix a problem where the column title would sometimes get stuck in a 
	prelight state after the mouse has exited.

2000-03-16  Pavel Cisler  <pavel@eazel.com>

	* scr/file-manager/fm-directory-view-list.c
	(create_flist):
	The icon column was set to the width of an icon at 100% zoom level.
	This doesn't work at higher zoom levels and when using Eazel
	theme icons. For now just make the column resizable again.
	
2000-03-16  Pavel Cisler  <pavel@eazel.com>

	First pass on making list column resizing live.

	* libathena/Makefile.am
	* libathena/athena-list-column-title.c
	* libathena/athena-list-column-title.h
	New list column title widget that makes it easier to hook into
	the mouse tracking and allows using flicker free redraw. Currently
	it doesn't use an offscreen buffer yet, comming soon.

	* libathena/gtkflist.c
	(gtk_flist_initialize_class), (gtk_flist_initialize),
	(gtk_flist_realize), (list_requisition_width),
	(gtk_flist_size_request), (new_column_width), (size_allocate_columns),
	(size_allocate_title_buttons), (get_cell_style), (draw_cell_pixmap),
	(draw_row), (draw_rows), 
	Made it possible to replace the existing column list view titles
	from GtkCList view to be replaced with the new widget. In order
	to do that I had to pull in a number of calls form GtkCList and
	work around dependencies on column titles being buttons.
	Prepared code some for smart column truncation.

	* libathena/gtkflist.h
	* libathena/gtkflist.c
	(gtk_flist_track_new_column_width), (gtk_flist_column_resize_track_start),
	(gtk_flist_column_resize_track), (gtk_flist_column_resize_track_end):
	Added new calls that hook up with the mouse tracking code that
	resize the tracker column.

	* scr/file-manager/fm-directory-view-list.c
	(get_sort_indicator), (hide_sort_indicator), (show_sort_indicator),
	(create_flist):
	Removed code that insert the sort order indicator into the list
	column - this is now done in the new column title widget.
	
	* scr/file-manager/fm-directory-view-list.c
	(create_flist):
	Added min and max column width values.

	* libathena/gtkflist.c
	(gtk_flist_initialize_class)
	Fixe a bug where the "selection_changed" was mistakenly connected
	to the start_drag callback.

	* libathena/athena-gdk-extensions.c
	* libathena/athena-gdk-extensions.h
	(athena_rectangle_contains), (athena_rectangle_inset):
	Added GdkRectangle utility calls.
	
2000-03-16  John Sullivan  <sullivan@eazel.com>

	* src/athena-index-title.c:
	store uri in details struct.
	(athena_index_title_set_uri), (athena_index_title_set_up_icon),
	(athena_index_title_set_up_label), (athena_index_title_set_up_info):
	Read uri from details struct instead of passing in parameter.
	(athena_index_title_initialize): Connect with "icons_changed"
	signal so athena_index_title_set_up_icon gets called again,
	refreshing the icon appearance when the theme changes.
	(athena_index_title_finalize): free details->uri.

	* src/ntl-uri-map.c:
	(get_athena-navigation_result_from_gnome_vfs_result):
	Handle GNOME_VFS_ERROR_GENERIC case, since diskzero ran
	into it. Unfortunately we can't put up a very specific error
	message for that case!

2000-03-16  Darin Adler  <darin@eazel.com>

	Did some of the renamings that were queued in RENAMING.

	* libathena/Makefile.am:
	* libathena/gdk-extensions.c:
	* libathena/gdk-extensions.h:
	* libathena/athena-gdk-extensions.c:
	* libathena/athena-gdk-extensions.h:
	* libathena/gnome-icon-container.c:
	* libathena/athena-background.c:
	* libathena/athena-icons-view-icon-item.c:
	Renamed gdk-extensions to add the athena- prefix and changed
	all includers.

	* src/Makefile.am:
	* src/explorer-location-bar.c:
	* src/explorer-location-bar.h:
	* src/athena-location-bar.c:
	* src/athena-location-bar.h:
	* src/ntl-window-msgs.c:
	* src/ntl-window.c:
	Renamed ExplorerLocationBar to AthenaLocationBar.

	* src/Makefile.am:
	* src/athena-bookmarklist.c:
	* src/athena-bookmarklist.h:
	* src/athena-bookmark-list.c:
	* src/athena-bookmark-list.h:
	* src/athena-bookmarks-window.c:
	* src/athena-bookmarks-window.h:
	* src/athena-window-menus.c:
	Renamed AthenaBookmarklist to AthenaBookmarkList.

	* RENAMING: Marked items done and added some new ones.

	* athena-widgets/athena-preferences-item.c:
	* athena-widgets/athena-preferences.c:
	* athena-widgets/test-athena-widgets.c:
	* libathena/athena-icon-factory.c:
	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-icon-text-window.c:
	Cleaned up the interface to AthenaPreferences a bit.

2000-03-16  John Sullivan  <sullivan@eazel.com>

	Fixes for a couple of preferences bugs Darin and I ran into
	while trying to debug a preferences-related problem. We
	can't reproduce the original problem so we don't know if
	these fix it.

	* libathena/athena-icon-factory.c:
	(athena_get_current_icon_factory): Call 
	athena_global_preferences_initialize before accessing preferences,
	since this code is called by processes other than the main
	athena one.

	* athena-widgets/athena-preferences.c: (prefs_get_pref):
	Remove redundant NULL check for prefs; add NULL check for pref_name;
	remove test of uninitialized variable; change assert to
	return FALSE since callers already handle the FALSE case.
	(athena_preferences_get_enum): Changed return FALSE to return 0
	to match return value type.
	(athena_preferences_get_string): Changed return FALSE to return NULL
	to match return value type.

2000-03-16  John Sullivan  <sullivan@eazel.com>

	Moved a couple of utility functions I wrote recently
	into the right places in libathena.

	* libathena/athena-bonobo-extensions.h,
	* libathena/athena-bonobo-extensions.c: New files,
	initially containing only the euphoniously-named
	(athena_bonobo_ui_handler_menu_set_toggle_appearance),
	which toggles a bonobo menu item's checkbox state without
	invoking its callback.	
	* libathena/Makefile.am: Put these two new files into build.
	
	* libathena/athena-glib-extensions.h,
	* libathena/athena-glib-extensions.c:
	(athena_g_strfindv): New function, finds a string in a
	NULL-terminated string array. Hideous name to match glib conventions.
	(athena_self_check_glib_extensions): Added tests for
	athena_g_strfindv.

	* src/athena-window-menus.c:
	(athena_bonobo_ui_handler_menu_toggle_appearance): Moved out
	of here, now called in its new home in libathena.
	* src/file-manager/fm-icon-text-window.c:
	(find_string_in_array): Moved out of here and renamed on its
	way into libathena.
	(synch_menus_with_preference): Updated for function name change.

2000-03-16  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(disconnect_model_handlers), (stop_load): Fixed the CRITICALs that
	I recently introduced. Made sure our unrefs match our refs for
	monitor_files.

2000-03-16  John Sullivan  <sullivan@eazel.com>

	Made icon theme changes persist across sessions by
	using preferences mechanism. When preferences mechanism
	switches to using GConf this should (theoretically) make
	icon theme changes work across multiple processes too.

	* libathena/athena-global-preferences.h:
	added #define for ATHENA_PREFERENCES_ICON_THEME
	* libathena/athena-global-preferences.c:
	(global_preferences_static_info[]): new entry for
	ATHENA_PREFERENCES_ICON_THEME with initial value.

	* libathena/athena-icon-factory.c:
	(athena_get_current_icon_factory): get theme from preferences
	and register callback to be notified of changes in preference.
	(athena_icon_factory_destroy): unregister preferences callback.
	(athena_icon_factory_get_theme): Removed this function.
	(icon_theme_changed_callback): call set_theme when preference changes.
	* libathena/athena-icon-factory.h: 
	(athena_icon_factory_get_theme), 
	(athena_icon_factory_set_theme): Removed public API. The 
	rare client that cares about the name of the theme should
	get/set it from preferences.

	* src/athena-window-menus.c:
	(use_eazel_theme_icons_cb): get and set theme from
	preferences rather than with icon factory calls.
	(athena_bonobo_ui_handler_menu_set_toggle_appearance):
	New function, sets the state of the checkbox in a bonobo
	menu item without invoking the callback. Perhaps this belongs
	in bonobo or in libathena, but I'm waiting to hear what the
	bonobo folks have to say about the current behavior, which
	seems broken to me.
	(update_eazel_theme_menu_item): Rewritten to change the
	state of the menu item without invoking the callback. This
	was broken in the case where the initial state of the menu
	item was backwards, which was never the case before since
	it always started with Eazel theme icons off.
	
	* libathena/athena-icon-factory.c: 
	(athena_icon_factory_initialize_class), 
	(athena_icon_factory_set_theme), 
	* components/history/ntl-history-view.c: (make_obj),
	* src/athena-bookmarks-window.c: 
	(create_bookmarks_window),
	* src/athena-window-menus.c: 
	(athena_window_initialize_menus),
	(athena_window_initialize_bookmarks_menu), 
	(athena_window_initialize_go_menu),
	* libathena/gnome-icon-container.c: 
	(gnome_icon_container_initialize),
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_initialize): Changed name of signal 
	emitted by icon factory from "theme_changed" to "icons_changed" 
	since it may be used in the future for other kinds of changes 
	in the available set of icons.

2000-03-15  Darin Adler  <darin@eazel.com>

	* HACKING: Tell people about the gnome-xml branch.
	
	* libathena/Makefile.am:
	* libathena/gnome-icon-container-grid.c:
	* libathena/gnome-icon-container-grid.h:
	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c:
	Broke out the grid code from the main container code.
	This is a first step toward improving the layout code.

	* libathena/athena-directory-private.h:
	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	* src/fm-directory-view.c:
	Got started on making the directory I/O async.
	There's still a long way to go, this was a baby step.
	
	* libathena/athena-bookmark.c:
	* libathena/athena-bookmark.h:
	* libathena/athena-self-checks.c:
	General cleanup.

	* libathena/athena-file.h:
	Rearranged a little bit.

	* libathena/athena-file-utilities.c:
	Put FIXME in where there's code that needs to be changed.

2000-03-15  John Sullivan  <sullivan@eazel.com>

	Used preferences mechanism for icon views' text-under-icons
	and directory views' open-in-new-window preference. The former
	was not persistent previously and the latter wasn't
	implemented.

	* athena-widgets/athena-preferences.h,
	* athena-widgets/athena-preferences.c:
	added ATHENA_PREFERENCE_STRING to AthenaPreferencesType enum.
	(athena_preferences_get_string), (athena_preferences_set_string):
	New functions for string preferences.
	(prefs_check_supported_type), (prefs_set_pref), 
	(athena_preferences_register_from_info), (make_gnome_config_string):
	Support for string preferences.
	
	* athena-widgets/athena-preferences-item.c:
	(preferences_item_construct): added a g_assert_not_reached as the
	ATHENA_PREFERENCE_STRING case in a switch statement to make the
	compiler happy. I didn't implement a UI for string items in the
	preferences dialog because the string items we're using now have
	their own specialized UI.

	* libathena/athena-global-preferences.h:
	added #define for ATHENA_PREFERENCES_ICON_VIEW_TEXT_ATTRIBUTE_NAMES
	* libathena/athena-global-preferences.c:
	(global_preferences_static_info[]): filled in initial value for
	ATHENA_PREFERENCES_ICON_VIEW_TEXT_ATTRIBUTE_NAMES

	* src/file-manager/fm-icon-text-window.c:
	(changed_attributes_option_menu_cb): Set new value using
	preferences mechanism instead of calling fm_directory_view_icons.
	(find_string_in_array), (set_preference_string),
	(synch_menus_with_preference), (preference_changed_cb),
	(fm_icon_text_window_destroy_cb):
	New functions used to keep UI in synch with text-attribute 
	preference.
	(create_icon_text_window): wire up notifications about 
	text-attribute preferences and get initial value.

	* src/file-manager/fm-directory-view-icons.h,
	* src/file-manager/fm-directory-view-icons.c:
	Added text_attribute_names field to details struct.
	(icon_text_changed_cb), (fm_directory_view_icons_initialize_class),
	(fm_directory_view_icons_initialize), (fm_directory_view_icons_destroy), 
	(text_attribute_names_changed_callback), 
	(fm_directory_view_icons_get_full_icon_text_attribute_names), 
	(fm_directory_view_icons_set_full_icon_text_attribute_names), 
	(fm_directory_view_icons_get_icon_text_attribute_names): 
	Replaced old mechanism that used FMSignaller to send notifications
	about the text attribute names with new preferences mechanism.
	
	* src/file-manager/fm-directory-view.c:
	Added user_new_window field to details structure.
	(fm_directory_view_activate_file_internal): New function, does
	what fm_directory_view_activate_file did before.
	(fm_directory_view_activate_file): Now respects the use_new_window
	preference.
	(bonobo_menu_open_cb), (open_cb), (open_one_in_new_window): 
	Changed callers to use fm_directory_view_activate_file_internal 
	for those cases where the use_new_window preference should be 
	ignored (e.g. "Open" and "Open in New Window" menu items).
	(fm_directory_view_initialize): Get initial value of new-window
	preference and set up notification for when value changes.
	(use_new_window_changed_callback): Refresh local copy of preference.
	(fm_directory_view_destroy): Remove preferences callback.
	
	* src/file-manager/fm-signaller.c,
	* src/file-manager/fm-signaller.h: Removed these two files
	that were handling the text-under-icons mechanism previously.
	* src/file-manager/Makefile.am: Took removed files out of build.

	* libathena/athena-file.c: (athena_file_get_owner_as_string):
	Removed an old debugging g_print.

2000-03-15  Darin Adler  <darin@eazel.com>

	A quick cleanup of how we use gnome-xml.

	* libathena/Makefile.am:
	* libathena/athena-xml-extensions.c:
	* libathena/athena-xml-extensions.h:
	Added some new gnome-xml helper functions.
	
	* libathena/athena-directory.c:
	(athena_directory_get_file_metadata_node):
	* libathena/athena-file.c:
	(athena_file_get_keywords):
	(athena_file_set_keywords):
	* libathena/athena-icon-factory.c:
	(get_child_node_by_property):
	(get_themed_icon_file_path):
	* src/athena-bookmarklist.c:
	(athena_bookmarklist_load_file):
	Changed to use the new helper functions.

	* src/athena-bookmarklist.c:
	(athena_bookmarklist_save_file): Changed direct uses of root to
	use xmlDocGet/SetRootElement while I was editing the file.  I
	think this is the same change Pavel made but wasn't able to check
	in.

	* src/athena-bookmarklist.c:
	General cleanup.

2000-03-14  Darin Adler  <darin@eazel.com>

	Added additional data to icons so they can specify where the
	embedded text fits in each icon.

	* icons/eazel/Makefile.am, icons/eazel/i-regular.xml: Added the
	file to specify attributes of icons. Specifically added the
	attribute that says there is space for embedded text in the
	Eazel-theme regular icon.

	* libathena/athena-icon-factory.h:
	* libathena/athena-icon-factory.c:
	(get_child_node_by_property), (get_themed_icon_file_path),
	(get_icon_file_path), (athena_icon_factory_get_thumbnail_uri),
	(load_specific_image), (load_image_for_scaling),
	(get_image_from_cache), (load_image_scale_if_necessary),
	(athena_icon_factory_get_pixbuf_for_icon),
	(athena_icon_factory_get_pixbuf_for_file):
	Added code to read a rectangle for the embedded text along with
	the icon, cache it with the icon, scale it with the icon, and
	return it to the caller along with the icon.

	* libathena/athena-icons-view-icon-item.c: 
	(athena_icons_view_icon_item_initialize_class),
	(athena_icons_view_icon_item_set_arg),
	(athena_icons_view_icon_item_get_arg),
	(athena_icons_view_icon_item_get_image),
	(athena_icons_view_icon_item_set_image),
	(athena_art_irect_to_gdk_rectangle),
	(draw_mini_text), (draw_embedded_text),
	(athena_icons_view_icon_item_draw):
	Changed the code that draws the embedded text to respect the
	text rectangle passed in. Changed the pixbuf setting to use a
	function instead of the arg interface and take a text rectangle
	along with the pixbuf.

	* libathena/gnome-icon-container-dnd.c
	(gnome_icon_container_dnd_begin_drag):
	* libathena/gnome-icon-container.c:
	(icon_get_actual_size): Got rid of callers who were using the arg
	interface to get at the image of an icon
	("AthenaIconsViewIconItem::pixbuf").

	* src/file-manager/fm-directory-view-icons.c:
	(get_icon_property_cb): Get rid of hard-coded rule that only
	themes with eazel at the front of their names can display text
	inside the icons.

	* libathena/gnome-icon-container.c:
	(icon_new): Fixed a bug where icons would be super-tiny if they
	got too big, like if you entered a directory that was zoomed all
	the way in.
	(start_stretching), (ungrab_stretch_icon), (end_stretching),
	(gnome_icon_container_show_stretch_handles): Added code to grab
	the pointer while stretching an icon.
	(item_event_cb): Added a return statement that John forgot when
	he was editing. Without that, it was falling through to the next
	case, which had the same effect anyway.
	(update_icon): Pass the text rectangle through from the icon
	factory to the icon canvas item, using the new call instead of the
	old arg interface approach.

	* components/help/.cvsignore: Added entries for
	.la and .lo files.

	* components/help/Makefile.am:
	* components/help/hyperbola-nav-index.c:
	* components/help/hyperbola-nav-search.c:
	* libathena/athena-directory-private.h:
	* libathena/athena-directory.c:
	* src/athena-bookmarklist.c:
	Fixed flags for gnome-xml
	includes. Someone pointed out that you are supposed to include
	these as "#include <tree.h>", not "#include <gnome-xml/tree.h>" so
	I fixed our uses to work that way.

	* libathena/athena-directory.c:
	(athena_directory_get_file_metadata_node): Fixed code that was
	destroying something allocated by gnome-xml with g_free instead
	of xmlFree.

	* libathena/athena-file.c:
	(athena_file_get_keywords), (athena_file_set_keywords):
	Fixed storage leak where we were getting a property and not freeing it.

	* libathena/athena-default-file-icon.h:
	* libathena/athena-default-file-icon.c:
	* libathena/athena-icon-factory.c:
	(load_image_for_scaling): Got rid of the global that tells whether
	the default icon has an alpha channel -- it's not hardwired TRUE.

2000-03-14  John Sullivan  <sullivan@eazel.com>

	When a directory with no explicitly-chosen viewer is
	visited, the currently-displayed viewer is used if
	possible. This matches the behavior of zooming. Darin
	doesn't like this and would prefer a single global
	setting with some possibly obscure way to set up values
	for specific locations, which wouldn't affect subsequent
	navigation. Let's try it for awhile and see if we can
	agree on a better solution.

	* src/ntl-types.h: added referring_iid field to 
	AthenaNavigationInfo
	* src/ntl-uri-map.h,
	* src/ntl-uri-map.c: 
	(athena_navinfo_new): Added a referring_iid parameter,
	a copy of which is stored in the new struct.
	(athena_navinfo_free): free the referring_iid string.
	(set_initial_content_iid): Use the referring_iid if there's
	no valid remembered iid.
	* src/ntl-window-msgs.c:
	(athena_window_change_location): Get the iid from the current
	content view and pass it to athena_navinfo_new.

2000-03-14  John Sullivan  <sullivan@eazel.com>

	Directories now start out using the same view they were
	last displayed with.

	* libathena/athena-metadata.h: added #define for
	ATHENA_INITIAL_VIEW_METADATA_KEY
	* src/ntl-types.h: renamed field default_content_iid to
	initial_content_iid, to avoid ambiguity with other uses
	of default (e.g. default metadata value). Also made this
	a char * instead of a const char *.
	* src/ntl-uri-map.c: 
	(athena_window_load_content_view_menu),
	(athena_window_update_state): Updated for name change.
	(view_menu_switch_views_cb): Save iid of new view in metadata.
	* src/ntl-window-msgs.c:
	(check_iid): New GCompareFunc-type function, used by to
	check whether a string matches the iid of any 
	AthenaViewIdentifier in a list.
	(set_initial_content_iid): New function, gets stored iid
	from metadata and uses it if it's non-NULL and matches one
	of the available viewers (otherwise uses a fallback iid).
	(my_notify_when_ready): Call set_initial_content_iid after
	constructing the list of available viewers.
	(athena_navinfo_free): free initial_content_iid, which was
	created in set_initial_content_iid.

2000-03-14  John Sullivan  <sullivan@eazel.com>

        * libathena/gnome-icon-container.c: (icon_destroy):
        Send SELECTION_CHANGED signal when destroying an icon
        that had been selected. This fixes bug Elliot reported
        where "Open in New Window" item in File menu was sensitive
        after the selected items had been deleted.

2000-03-14  Jonathan Blandford  <jrb@redhat.com>

	* libathena/gnome-icon-container-dnd.c (drag_drop_cb): Add a
	gtk_drag_finish to hopefully solve half the flying windows
	problem.  Needs more thought then this, though.

2000-03-14  John Sullivan  <sullivan@eazel.com>

        Fixed bug introduced in last checkin where two popup
        menus appear if you right-click on an icon.

        * libathena/gnome-icon-container.c: (item_event_cb):
        Explicitly stop signal emission when button press is handled.

2000-03-13  John Sullivan  <sullivan@eazel.com>

	Cleanup of "icon selected for keyboard input" code and
	behavior. Now it always draws the stippled border around 
	the keyboard input icon if non-NULL, but it's only non-NULL 
	after the user has started type-selecting. It chooses a
	sensible place to start when a key is pressed, depending
	on the key.

	* libathena/gnome-icon-container.c:
	(find_first), (find_last): Now take boolean for whether to
	consider only selected items.
	(kbd_home), (kbd_end): Updated to match API changes.
	(set_kbd_current): Remove condition guarding highlight change.
	(icon_toggle_selected): Removed code to reset the
	current keyboard icon; no longer needed with previous change.
	(idle_handler): Remove code setting the keyboard-select icon
	at idle time.
	(get_nth_selected_icon): New helper function to help avoid
	walking through all items just to find a certain selected one.
	(get_first_selected_icon): Rewritten to call get_nth_selected_icon.
	(has_multiple_selection): New helper function that calls
	get_nth_selected_icon (2) to determine whether there's at least
	two items selected.
	(set_kbd_current_to_single_selected_icon): New helper function
	to set the keyboard navigation icon to the selected icon, if
	the former is non-NULL and the latter is unique.
	(kbd_left), (kbd_up), (kbd_right), (kbd_down): Set keyboard
	navigation icon if necessary: If a single item is selected, use
	that as starting point for keyboard navigation. If no items are
	selected, use find_first/last. If multiple items are selected,
	use find_first/last but only consider selected items.
	(kbd_space): Select a keyboard navigation item if necessary
	using find_first.
	(button_press_event): Nullify keyboard navigation item since
	we're now mouse-navigating.
	(gnome_icon_container_almost_drag): Don't set keyboard navigation
	item here.
	(destroy), (gnome_icon_container_icon_initialize), 
	(linger_select_timeout_cb), (handle_icon_enter_notify),
	(handle_icon_leave_notify), (item_event_cb): Removed code for
	obsolete experimental "linger" feature.

	* libathena/athena-icons-view-icon-item.c: 
	(athena_icons_view_icon_item_event): return TRUE only if the
	event was actually used; this fixes bug where keyboard navigation
	wouldn't work if mouse cursor happened to be over an item.

2000-03-13  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c (athena_directory_get):
	Fixed bug that caused a core dump when getting at the root
	directory because all the '/' characters were stripped off
	the URI.

	* src/file-manager/fm-directory-view.c: 
	* athena-widgets/athena-preferences.c: 
	Tiny formatting fixes.

2000-03-13  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window.c (athena_window_constructed): Connect to
	zoom_in and zoom_out singals of zoom control and view the zoom in
	such cases, when applicable.

	* src/athena-zoom-control.c
	(athena_zoom_control_class_initialize): Add zoom_in and zoom_out
	signals.
	(athena_zoom_control_reset_zoom_level): Quick hack to get some
	semblance of sanity in view switching.

	* file-manager/fm-directory-view.c: Add Zoomable interface; for
	now only implement zoom_in and zoom_out methods.

	* components/sample/athena-sample-content-view.c: Added some
	comments.

2000-03-13 Elliot Lee <sopwith@redhat.com>

	* athena-widgets/athena-preferences.c, src/file-manager/fm-directory-view.c:
	Fix pointer <-> int conversion warnings.

2000-03-13  Darin Adler  <darin@eazel.com>

	* libathena/athena-string-list.h:
	* libathena/athena-string-list.c:
	A quick cleanup pass on the AthenaStringList class:
	Changed uses of gchar to char, changed g_assert to g_return_if_fail
	as appropriate. Fixed brace style to be emacs-friendly (open brace
	on same line as if statement). Fixed spelling of delimiter.
	Got rid of some unnecessary special cases for NULL and sped up
	the _equal function be eliminating the redundant length check.
	Changed the self-check so that it doesn't write a warning to the
	log when it runs.

2000-03-13  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-properties-window.c (create_properties_window):
	Andy fixed a double-unref bug by removing an unref. The correct
	fix was to add a ref. I rolled out his change and re-fixed the bug.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>
	
	* libathena/athena-global-preferences.c,
	* libathena/athena-global-preferences.h:
	(athena_global_preferences_get_meta_view_iids) Add a table of
	meta view iids and a function to retrieve them.  This is a hack
	until we have better runtime detection of components.  
	Add some better defaults for which meta views are shown.  By
	default none were shown.  Undo a previous gnome_config default
	hack.  There is now a better fix in place in the prefs code.

	* athena-widgets/athena-preferences.c:
	(athena_preferences_make_gnome_config_string) A new function to
	make a string as expected by gnome_config with a trailing default
	value.  Use this string to fetch the value of the preferences.

	* src/Makefile.am,
	src/ntl-prefs.c,
	src/ntl-prefs.h,
	src/athena-window-menus.c,
	src/athena.h:
	Retire ntl-prefs.c and ntl-prefs.h.  Remove these 2 from build and
	all references to them.
	
	* src/ntl-app.c: 
	(athena_app_startup, athena_app_destroy) No need to call
	retired ntl-prefs functions.
	
	* src/ntl-uri-map.c:
	(add_meta_view_iids_from_preferences): New function.  Factor out
	meta iid setup code into one place.  Replace the static meta iid
	setup code with something that looks in preferences to see which
	meta views are enabled.  Next step is to make the meta view
	respond to pref changes.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-window-state.c:
	(athena_window_set_initial_state) Make Intermediate user level
	work like hacker, but without showing dot files.

2000-03-12  Andy Hertzfeld <andy@eazel.com>

	* src/file-manager/fm-properties-window.c:
	fixed bug where closing the properties window would cause a crash.
	It was caused by double deleting athena_file objects and fixed by
	removing the callback to delete the athena file in
	create_properties_window.  Darin better check this to make sure
	we're not leaking here.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-widgets/athena-preferences.c:
	(pref_hash_info_remove_callback) Properly remove the item from
	the list so that we dont crash later trying to munge a NULL node.

	* libathena/athena-global-preferences.h:
	(ATHENA_PREFERENCES_USER_LEVEL) Make sure the user level
	defaults to hacker.
	
2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>
	
	* libathena/Makefile.am: Added athena_string_table

	* libathena/athena-lib-self-check-functions.h: Added string
	table tests hooks.
	
	* libathena/athena-string-list.c,
	libathena/athena-string-list.h: New class to deal with lists
	of strings in a type safe manner.  Also added self tests for this
	class.
	
2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-widgets/athena-preferences.c:
	(prefs_set_pref, athena_preferences_register_from_info,
	athena_preferences_register_from_values): Make the preference
	changes persistent.

	* athena-widgets/athena-preferences-item.c,
	athena-widgets/athena-preferences-item.h,
	athena-widgets/athena-preferences.c,
	athena-widgets/athena-preferences.h,
	athena-widgets/test-athena-widgets.c:
	Dont use GtkFunadamentalType, since we obviously wont support
	all fundamental gtk types as preferences.  Use an enum instead.
	Makes the preferences type whacking code exactly 14.85% more type
	safe.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-window-state.c:
	(athena_window_set_initial_state): Use the alternative home
	place if needed for the user level.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-file-utilities.h,
	athena-file-utilities.c:
	(athena_user_top_directory): New function.  Used to obtain
	the user's "top" directory.  The top directory is an alternative
	home place for naive users.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* data/.cvsignore,
	data/Makefile.am:
	Add a data directory to the tree.  This is the default per-user
	data that athena installs the first time it runs.
	
	*data/top/.cvsignore,
	data/top/Makefile.am,
	data/top/Welcome:
	Add a top directory to the tree.  The top directory is an
	alternative home place for novice users.

	*configure.in,
	Makefile.am: 
	Grok the above.
	
2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* libathena/athena-global-preferences.c,
	libathena/athena-global-preferences.h,
	src/ntl-window-state.c:

	Use better names for the global preferences macros.
	Cleanup some #include cruft.
	
	* athena-widgets/athena-preferences.c,
	athena-widgets/athena-preferences.h:
	(athena_prefecences_remove_callback):
	New method for removing callbacks.

	* src/file-manager/fm-directory-view.c:
	(queue_pending_files, fm_directory_view_initialize ,
	fm_directory_view_destroy): Filter files according to the user level.
	Add/Remove a preferences callback to keep track of user level changes.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* AUTHORS,
	src/athena-window-menus.c: Added myself.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* src/athena-window-menus.c:
	* src/ntl-window-state.c:
	* src/ntl-app.c:

	Update for naming changes in the preferences api.

2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-widgets/athena-preferences-box.c,
	athena-widgets/athena-preferences-box.h,
	athena-widgets/athena-preferences-dialog.c,
	athena-widgets/athena-preferences-dialog.h,
	athena-widgets/athena-preferences-group.c,
	athena-widgets/athena-preferences-group.h,
	athena-widgets/athena-preferences-item.c,
	athena-widgets/athena-preferences-item.h,
	athena-widgets/athena-preferences-pane.c,
	athena-widgets/athena-preferences-pane.h,
	athena-widgets/athena-preferences.c,
	athena-widgets/athena-preferences.h,
	athena-widgets/athena-radio-button-group.h,
	athena-widgets/test-athena-widgets.c,
	athena-widgets/test-preferences.c:

	Cleanup naming of everything to use "preferences" instead of
	"prefs".  Remove a bunch of unused includes.  Use "Details"
	instead of "Private" for private structures.  Fix pref item
	support of boolean values.
	
2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* components/help/Makefile.am:
	* components/history/Makefile.am:
	* components/html/Makefile.am:
	* components/music/Makefile.am:
	* components/notes/Makefile.am:
	* components/sample/Makefile.am:
	* components/websearch/Makefile.am:
	Link all components with athena-widgets.
	
2000-03-12  Ramiro Estrugo  <ramiro@eazel.com>

	* libathena/Makefile.am,
	libathena/athena-global-preferences.c: New file
	libathena/athena-global-preferences.h: New file

	* src/Makefile.am,
	src/athena-global-preferences.c: Removed
	src/athena-global-preferences.h: Removed

	Moved global preferences to libathena.

2000-03-10  Darin Adler  <darin@eazel.com>

	* libathena/athena-icons-view-icon-item.c
	(athena_icons_view_icon_item_point):
	Fixed typo that broke all hit testing except for rubber band
	selection! (Sorry.)
	
	* libathena/gnome-icon-container-dnd.c
	(set_gnome_icon_list_selection, set_uri_list_selection),
	libathena/gnome-icon-container-private.h,
	libathena/gnome-icon-container.h,
	libathena/gnome-icon-container.c
	(gnome_icon_container_get_icon_uri,
	gnome_icon_container_initialize_class, gnome_icon_container_new,
	update_icon, gnome_icon_container_update,
	gnome_icon_container_request_update),
	src/file-manager/fm-directory-view-icons.c (create_icon_container,
	get_icon_images_cb, get_icon_uri_cb, get_icon_text_cb,
	get_icon_property_cb): Change code that used to use a separate
	controller object to just use signals on the icon container
	instead.

	* libathena/athena-gtk-extensions.h,
	libathena/athena-gtk-extensions.c,
	src/file-manager/fm-directory-view.c: Add new signal marshal
	functions as needed and changed the name of one of the old
	functions.

	* libathena/Makefile.am,
	libathena/athena-icons-controller.h,
	libathena/athena-icons-controller.c,
	src/file-manager/Makefile.am,
	src/file-manager/fm-icons-controller.h,
	src/file-manager/fm-icons-controller.c: Removed the old controller
	object, it was a bad idea.

2000-03-10  Ramiro Estrugo  <ramiro@eazel.com>

	* src/Makefile.am
	Moved prefs things to athena-widgets.
	Use alphabetization technology on the source list.
	
	* src/athena-global-preferences.c,
	  src/athena-global-preferences.h:
	New files that to deal with preferences that are
	global to athena.

	* src/athena-window-menus.c:
	Use the new preferences dialog.
	
	* src/ntl-window-state.c:
	Go to a different home directory based on the user level.
	Commented off until andy makes a nice default home directory
	for novice users.

	* src/ntl-prefs.c,
	  src/ntl-prefs.h:
	Renamed a typedef to avoid conflict.  This is a temporary hack.
	
	* src/athena-prefs-box.c
	  src/athena-prefs-box.h,
	  src/athena-prefs-dialog.c,
	  src/athena-prefs-dialog.h,
	  src/athena-prefs-group-check.c,
	  src/athena-prefs-group-check.h,
	  src/athena-prefs-group-radio.c,
	  src/athena-prefs-group-radio.h,
	  src/athena-prefs-group.c,
	  src/athena-prefs-group.h,
	  src/athena-prefs-pane.c,
	  src/athena-prefs-pane.h,
	  src/ntl-prefs.c,
	  src/ntl-prefs.h:
	Moved prefs widegtry things to athena-widgets.

2000-03-10  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-widgets/Makefile.am,
	  athena-widgets/athena-preferences-box.c
	  athena-widgets/athena-preferences-box.h,
	  athena-widgets/athena-preferences-dialog.c,
	  athena-widgets/athena-preferences-dialog.h,
	  athena-widgets/athena-preferences-group.c,
	  athena-widgets/athena-preferences-group.h,
	  athena-widgets/athena-preferences-item.c,
	  athena-widgets/athena-preferences-item.h,
	  athena-widgets/athena-preferences-pane.c,
	  athena-widgets/athena-preferences-pane.h,
	  athena-widgets/athena-preferences.c,
	  athena-widgets/athena-preferences.h,
	  athena-widgets/athena-radio-button-group.c,
	  athena-widgets/athena-radio-button-group.h,
	  athena-widgets/test-athena-widgets.c,
	  athena-widgets/test-preferences.c:
	Moved all the preference widetry to athena-widgets.
	Added a test program for preferences (not built).
	Renamed files to user "preference" instead of "prefs".

2000-03-10  Darin Adler  <darin@eazel.com>

	* libathena/Makefile.am, libathena/gnome-icon-container-dnd.c
	  (set_gnome_icon_list_selection,
	  gnome_icon_container_dnd_begin_drag),
	  libathena/gnome-icon-container.c (icon_is_in_region,
	  start_stretching), libathena/athena-icons-view-icon-item.h,
	  libathena/athena-icons-view-icon-item.c (hit_stretch_handle,
	  hit_test_pixbuf, hit_test, athena_icons_view_icon_item_point,
	  athena_icons_view_icon_item_get_icon_world_rectangle,
	  athena_icons_view_icon_item_get_icon_rectangle,
	  athena_icons_view_icon_item_get_icon_window_rectangle,
	  athena_icons_view_icon_item_get_hit_stretch_handle,
	  hit_stretch_handle,
	  athena_icons_view_icon_item_hit_test_stretch_handles,
	  athena_icons_view_icon_item_hit_test_rectangle):
	Fixed rubber banding to hit test with all the parts of the icon,
	not just the icon pixbuf itself. Did this by changing all the
	internal hit testing to use rects instead of points. At the same
	time changed the external interface to always use world
	coordinates for clarity.

	* libathena/athena-directory.c (compare_file_with_name),
	libathena/athena-file.c (athena_file_set_keywords): Fixed
	some void * problems that upset newer versions of GCC but not the
	older one that I'm using.

	* libathena/athena-gtk-extensions.h,
	libathena/athena-gtk-extensions.c: Formatting and include
	statements fix up.
	
2000-03-10  Jonathan Blandford  <jrb@redhat.com>

	* libathena/gnome-icon-container.c (button_press_event): Avoid a
	bug where we get stuck grabs when you double click.

2000-03-10  Ramiro Estrugo  <ramiro@eazel.com>

	* athena-widgets:
	New directory.  A place to put generic widgets that are not
	necessarily coupled to athena.

	* configure.in: Added athena-widgets
	* Makefile.am: Added athena-widgets

	* athena-widgets/athena-radio-button-group.h,
	* athena-widgets/athena-radio-button-group.c: Added a radio 
	group widget.

	* athena-widgets/test-athena-widgets.c: Test program for 
	athena-widgets.

2000-03-10  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window.c, src/ntl-window.h: store zoom_control object in
	the window.
	
	* src/athena-zoomable-frame-svr.c: New file; implement CORBA
	server for Athena::ZommableFrame interface.
	* src/ntl-view-private.h: prototypes for shared stuff needed to make
	this work.
	* src/ntl-view.c, src/ntl-view.h: Attach a Athena::ZoomableFrame
	interface to the Athena::ViewFrame.

	* libathena/athena-gtk-extensions.h,
	libathena/athena-gtk-extensions.c
	(athena_gtk_marshal_NONE__DOUBLE): New function.

	* src/ntl-uri-map.c (my_notify_when_ready): Enable both
	html-appropriate and directory-appropriate views for
	special/webdav-directory mime type (temporary hack).
	
2000-03-09  Darin Adler  <darin@eazel.com>

	* libathena/gnome-icon-container.c (set_scroll_region):
	It turns out that you aren't intended to reset the scroll region
	once you have items in the canvas. We need to do that, so I had
	to write some code that would update all the items when that happens.

	* libathena/athena-icons-view-icon-item.c:
	(recompute_bounding_box): Rewrote this to not assume that the
	icon items are all top-level items.
	(compute_text_rectangle, hit_test,
	athena_icons_view_icon_item_bounds): Change hit testing so
	it includes hits on the text. The rubberband still has to be
	fixed so it doesn't have the same problem.

	* libathena/athena-file.c: Improved a comment.
	
	* RENAMING: Some more name changes.

2000-03-09  John Sullivan <sullivan@eazel.com>

        * libathena/athena-file.c:
        (athena_file_unref): Got this fix wrong last time, causing
        GTK-CRITICALs when deleting files. Remember file->is_gone
        before unreffing directory since you can't test possibly-destroyed
        file afterward.

2000-03-09  John Sullivan <sullivan@eazel.com>

        * libathena/athena-directory-private.h:
        (athena_directory_number_outstanding): Added prototype for this
        debugging function.
        * libathena/athena-directory.c:
        (athena_directory_number_outstanding): New debugging function,
        used in AthenaFile self-checks.
        (athena_self_check_directory): Pulled out the AthenaFile tests
        to move them to athena-file.c.
        * libathena/athena-file.c:
        (athena_file_unref): Move gtk_object_unref after
        athena_file_free call. Darin noticed this bug while reading
        the code with me.
        (athena_file_list_unref): Made this unref instead of ref. Oops!
        This was causing AthenaDirectory objects never to go away after
        visiting a directory; now they're destroyed when you leave.
        (athena_self_check_file): New function, some of this was moved
        over from athena-directory.c, and I added some ref-count checks.
        * libathena/athena-lib-self-check-functions.h:
        Included athena_self_check_file in list of self-check functions.

2000-03-09  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icons-view-icon-item.c:
	tweaked constants used to control amount of pre-lighting in "lighten"
	routine
	* components/music/athena-music-view.c:
	fixed bug that Maciej found where the track number would show up as -1
	if there was no encoded track number; now they show up as blank.
	
2000-03-09  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/athena-zoomable.c
	(impl_Athena_Zoomable__create): Pass the correct thing as the
	servant to avoid crashing on instantiation.	
	(athena_zoomable_real_set_bonobo_control): ref and sink the
	BonoboControl Gtk object.
	(athena_zoomable_destroy): unref the control instead of
	destroying.

	* idl/athena.idl: Reformat, add emacs magic to maintain indent
	style.

2000-03-09  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view-icons.c
	(fm_directory_view_icons_clear,
	fm_directory_view_icons_begin_loading),
	src/file-manager/fm-directory-view-list.c
	(fm_directory_view_list_clear,
	fm_directory_view_list_begin_loading): Moved the code that loads
	the background color from clear to begin_loading. Otherwise the
	background color from one directory affects another.

2000-03-09  Darin Adler  <darin@eazel.com>

	* athena-icons-view-icon-item.c (emblem_layout_next,
	athena_icons_view_icon_item_bounds):
	Andy's check-in yesterday accidentally rolled out some changes
	to this file. The changes include the typos that John and I had
	fixed in emblem_layout_next and athena_icons_view_icon_item_bounds.

	* athena-icons-view-icon-item.c:
	As Andy was about to do anyway, I tightened up the emblem
	positioning so they are closer to each other by changing the
	hard-coded constant EMBLEM_SPACING.
	
2000-03-09  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory-private.h,
	libathena/athena-directory.c, libathena/athena-file.c
	(athena_directory_find_file, compare_file_with_name,
	athena_directory_get, athena_file_get): Fixed bugs relating to
	multiple directory and file objects for the same entity. Stripped
	trailing '/' characters in athena_directory_get and changed
	athena_file_get to return already-existing files instead of
	always creating new ones. Added self-checks to make sure this
	works.

	* libathena/athena-directory.c
	(athena_directory_try_to_read_metafile): Fixed bug where
	metafile reading would fail. The gnome-xml parser requires a null
	character at the end of the file, even though the size is passed
	in!

	* libathena/athena-directory.c
	(athena_directory_remove_write_metafile_idle,
	athena_directory_finalize,
	athena_directory_try_to_write_metafile,
	athena_directory_request_write_metafile): Changed metafile
	writing so it always happens at idle time.

	* libathena/athena-lib-self-check-functions.h: Changed order
	so lower-level tests come before higher-level ones.

	* libathena/athena-string.h, libathena/athena-string.c:
	Renamed functions:
		athena_has_prefix -> athena_str_has_prefix
		athena_strdup_prefix -> athena_str_get_prefix
		athena_has_suffix -> athena_str_has_suffix
		athena_strstrip -> athena_str_strip_chr
		athena_string_to_int -> athena_str_to_int
		athena_eat_string_to_int -> athena_eat_str_to_int
	Changed athena_str_strip_chr not to modify in place.
	Added athena_str_strip_trailing_chr.

	* components/music/athena-music-view.c (is_mp3_file,
	athena_music_view_update_from_uri),
	libathena/athena-icon-factory.c
	(athena_icon_factory_get_icon_for_file, make_thumbnail_path,
	load_specific_image), libathena/athena-icons-view-icon-item.c
	(draw_mini_text), src/ntl-index-panel.c (command_button_cb,
	add_command_buttons), src/ntl-window-msgs.c
	(athena_window_change_location_2),
	src/file-manager-fm-directory-view-icons.c
	(fm_directory_view_icons_compute_menu_item_info),
	src/file-manager/fm-directory-view.c (compute_menu_item_info),
	src/file-manager/fm-icons-controller.c
	(fm_icons_controller_get_icon_property): Switched callers to use
	new names for string calls.

	* libathena/gnome-icon-container.c (destroy): Reformatting.

2000-03-09  John Sullivan <sullivan@eazel.com>

        * libathena/gnome-icon-container.c: (update_icon):
        Changed decision of when to draw mini-text on an icon to
        be based on icon size rather than zoom level, so it works
        more sensibly with stretched icons.

2000-03-09  John Sullivan <sullivan@eazel.com>

        Bug fixes and memory leak fixes.

        * libathena/gnome-icon-container.c:
        (icon_destroy): Renamed to icon_free and fixed storage leak by
        freeing icon struct.
        (remove_icon_from_container): Renamed to icon_destroy and fixed
        bug by setting details->kbd_current to NULL if it had been the
        icon being destroyed.
        (destroy): Fixed storage leak by calling gnome_icon_container_clear.
        
        * libathena/athena-directory.c: (dequeue_pending_idle_cb):
        Added file != NULL assert.
        
        * libathena/athena-file.c: (athena_file_delete):
        Fix bug where NULLs were sneaking into file list, and
        causing havoc later, by setting list to result of g_list_remove.

2000-03-09 Elliot Lee <sopwith@redhat.com>
	
	* libathena/Makefile.am: Install libathena.h
	* src/ntl-uri-map.c: Handle mapping of special schemes
	(i.e. unknown to gnome-vfs). Currently just 'irc'.

2000-03-08  John Sullivan <sullivan@eazel.com>

	* libathena/athena-icon-factory.c:
	(compare_thumbnail_info): New function, compares uris of two
	AthenaThumbnailInfos.
	(athena_icon_factory_get_thumbnail_uri): Use compare_thumbnail_info
	to avoid putting the same uri in the thumbnail-making queue multiple
	times. This may or may not have been the cause of an intermittent
	thumbnail-creating problem I was seeing.

2000-03-08  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icons-view-icon-item.c:
	implemented pre-lighting for icons by overriding the event method
	to maintain the pre-lit boolean, and then using the boolean to
	decide when to lighten the icon by using a new "lighten" routine
	that manipulates the pixbuf.
	
	* libathena/gnome-icon-container-dnd.c:
	only use semi-transparent dragging for relatively small icons, due
	to X performance limitations.
	
	* libathena/gnome-icon-container.c:
	change the ICON_MAXIMUM_SIZE used as a threshold for scaling from
	80 to 96, to step around bug of scaling too much for thumbnails.
	
2000-03-08  Darin Adler  <darin@eazel.com>

	You can now use Set Properties to attach keywords to a file,
	which will cause it to have emblems attached to its icon.

	* libathena/gnome-icon-container.h,
	libathena/gnome-icon-container.c (gnome_icon_container_update,
	gnome_icon_container_update_icon),
	libathena/athena-directory-private.h,
	libathena/athena-directory.c
	(athena_directory_files_changed), libathena/athena-file.h,
	libathena/athena-file.c (athena_file_changed),
	src/file-manager/fm-directory-view.h,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view-icons.c,
	src/file-manager/fm-directory-view-list.c,: Add files_changed
	machinery in so views will notice changes to a AthenaFile.

	* libathena/athena-icon-factory.h,
	libathena/athena-icon-factory.c
	(athena_icon_factory_get_thumbnail_uri,
	athena_icon_factor_get_icon_for_file, check_for_thumbnails),
	libathena/athena-icons-controller.h,
	libathena/athena-icons-controller.c,
	(athena_icons_controller_update_icon),
	src/file-manager/fm-icons-controller.c
	(fm_icons_controller_update_icon): Use the files_changed machinery
	instead of a special case in the icon controller to tell the view
	about a new thumbnail.

	* libathena/athena-icons-view-icon-item.c
	(emblem_layout_next): Fixed typo that caused emblems to go down
	one side of the icon instead of going around.

	* libathena/athena-directory-private.h,
	libathena/athena-directory.c
	(athena_directory_get_file_metadata_node,
	athena_directory_request_write_metafile),
	libathena/athena-file.c (athena_file_set_keywords):
	Implemented the set_keywords operation so we can change the
	keywords for a file.

	* src/file-manager/fm-icon-text-window.c
	(create_icon_text_window): Fixed a prototype.

	* src/file-manager/fm-properties-window.c (property_button_update,
	property_button_toggled, create_properties_window,
	fm_properties_window_get_or_create): Implement a first cut at a
	properties window.

2000-03-07  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-icons-view-icon-item.c:
	(athena_icons_view_icon_item_bounds): Fixed typo that was
	causing bottom coordinate of icon bounds to be uninitialized.
	This caused wacky results when keyboard navigating and probably
	elsewhere.
	
	* libathena/gnome-icon-container.c:
	(icon_toggle_selected): Reset keyboard-selected icon if it's
	this one so it updates whether or not to draw stippled outline.
	(set_kbd_current): Only tell the icon to draw stippled outline
	if it isn't selected the "normal" way and some other icon is.
	(In other words, only display the keyboard-selected icon when
	it diverges from the regular selection, and don't display it
	when there is no regular selection.)
	(kbd_space): Toggle the "normal" selection state of the
	keyboard-selected icon. It had been forcing it to true, making
	it impossible to keyboard-unselect a single item while leaving
	the rest of the selection unchanged.

2000-03-07  Darin Adler  <darin@eazel.com>

	* components/music/athena-music-view.c,
	components/notes/ntl-notes.c, libathena/Makefile.am,
	libathena/athena-directory-private.h,
	libathena/athena-directory.h,
	libathena/athena-directory.c,
	libathena/athena-file-private.h, libathena/athena-file.h,
	libathena/athena-file.c, libathena/athena-icon-factory.h,
	src/ntl-index-panel.c, src/file-manager/fm-directory-view.h:
	Broke the file part of athena-directory.[ch] into
	athena-file.[ch].

	* libathena/athena-string.c (athena_strstrip): Added more
	tests. Changed algorithm on strstrip so it's linear instead of
	n^2.

	* libathena/gnome-icon-container.c
	(gnome_icon_container_initialize): Fixed font for "larger" zoom
	level. Also made it assert if the font can't be loaded.

	* components/help/hyperbola-nav-index.c (despace):
	Fixed warning.

	* libathena/gnome-icon-container-dnd.c,
	libathena/athena-string.h: Whitespace.

	* src/file-manager/Makefile.am,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-properties-window.h,
	src/file-manager/fm-properties-window.c: Added properties window
	hook, but no window yet. The menu item still needs to be added to
	the main menus as well as the context menus.

	* src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view-icons.c,
	src/file-manager/fm-icon-text-window.h,
	src/file-manager/fm-icon-text-window.c: A little cleanup. Shorter
	names.

2000-03-08  Ramiro Estrugo  <ramiro@eazel.com>

	* src/athena-prefs-group-radio.h,
	src/athena-prefs-group-radio.h: Make the radio group emit proper
	signals on changes.

	* src/athena-prefs-pane.c, src/athena-prefs-group.c
	src/athena-prefs-box.c: Make everything prettier by using nice
	offsets.

2000-03-08  Ramiro Estrugo  <ramiro@eazel.com>

	Added macros to check, assert and invoke class methods
	for a given GtkOject.

	* libathena/athena-gtk-macros.h:
	(ATHENA_KLASS) Access the class for a given object
	(ATHENA_INVOKE_METHOD) Invoke a method for a given object
	(ATHENA_ACCESS_METHOD) Access a method.
	(ATHENA_ASSERT_METHOD) Assert the non-nullness of a method
	for a given object
	(ATHENA_INVOKE_METHOD_IF) Invoke a method if it aint null.

2000-03-08  Ramiro Estrugo  <ramiro@eazel.com>

	First whack at having a better preferences ui.

	* src/athena-prefs-box.h,
	src/athena-prefs-box.c: The main prefefernce widgetry widget.
	It manages the preferene category list and the creation and 
	management of right hand side panes.

	* src/athena-prefs-dialog.h,
	src/athena-prefs-dialog.c: A GnomeDialog sublass to make
	it easier for the app to deal with prefs.

	* src/athena-prefs-group.h,
	src/athena-prefs-group.c: An abstract widget to manage a
	group of related preferences.

	* src/athena-prefs-group-check.h,
	src/athena-prefs-group-check.c: A widget to manage a group
	of boolean preferences.

	* src/athena-prefs-group-radio.h,
	src/athena-prefs-group-radio.c: A widget to manage a 
	"one of many" preference.

	* src/athena-prefs-pane.h,
	src/athena-prefs-pane.c: A widget to manage the right hand
	side of the prefs box.  

2000-03-07  Darin Adler  <darin@eazel.com>

	Reimplemented the delete command to use AthenaFile instead of
	going directly to the file system.

	* libathena/gnome-icon-container.h,
	libathena/gnome-icon-container.c
	(gnome_icon_container_clear_selected_items),
	(gnome_icon_container_remove): Got rid of the call that removes
	all the icons in the selection and replaced it with a call that
	removes a specific icon.

	* libathena/athena-directory.h,
	libathena/athena-directory.c
	(athena_directory_initialize_class), (athena_file_unref),
	(athena_file_detach), (athena_file_free),
	(athena_file_delete), (athena_file_is_gone): Implemented a
	call to delete a file and emit the files_removed signal as needed.

	* src/file-manager/fm-directory-view.h,
	src/file-manager/fm-directory-view.c
	(fm_directory_view_delete_selection),
	(fm_directory_view_begin_adding_entries),
	(fm_directory_view_add_entry),
	(fm_directory_view_done_adding_entries), (display_pending_files),
	(add_or_remove_files), (add_files_cb), (remove_files_cb),
	(delete_one): Changed the delete implementation to call
	athena_file_delete and got rid of the explicit call to
	delete_selection. The views now will remove their entries in
	response to the change in the model.

	* src/file-manager/fm-directory-view-icons.c
	(fm_directory_view_icons_remove_entry),
	(fm_directory_view_icons_delete_selection),
	src/file-manager/fm-directory-view-list.c
	(fm_directory_view_list_remove_entry),
	(fm_directory_view_list_delete_selection): Eliminated the
	delete_selection function in favor of the remove_entry function.

2000-03-07  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	implemented semi-transparent dragging by writing a make-semi-transparent
	routine that generates a gdk-pixbuf with a checkerboarded alpha channel.
	The dragging is a bit too slow, so we might have to limit this to
	small images, but for now it's there for all of them.
	
	* libathena/gnome-icon-container.c:
	make the text beneath icons use a sans-serif font (helvetica) at Susan's
	request.
	
2000-03-07  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Use eog-image-viewer,
	not embeddable:image-generic for viewing images.

2000-03-07  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view-athena.c:
	(athena_view_try_load_client): Removed recently-added
	activate call since Maciej implemented a more general solution.
	(destroy_athena_view): Removed recently-added
	deactivate call since Maciej implemented a more general solution.

2000-03-07  John Sullivan  <sullivan@eazel.com>

	Added Stretch/Restore menu items to Settings menu, and made some
	other menu mechanism tweaks.

	* src/athena-window-menus.c: Gave General Settings an underline
	accelerator character.
	
	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_get_bonobo_ui_handler): New function, exposed
	so subclasses can call.
	(fm_directory_view_merge_menus), (fm_directory_view_real_merge_menus): 
	Removed BonoboUIHandler parameter. Updated callers.
	* src/file-manager/fm-directory-view-icons.c:
	Store react_to_icon_change_idle_id in details.
	(fm_directory_view_icons_initialize_class): fill in update_menus
	function pointer.
	(fm_directory_view_icons_merge_menus): Removed BonoboUIHandler
	parameter.
	(fm_directory_view-icons_destroy): remove react_to_icon_change_idle_id
	if non-zero.
	(show_stretch_handles_cb): update menus since stretch item might
	have changed state.
	(unstretch_icons_cb): update menus since restore item might have
	changed state.
	(fm_directory_view_icons_compute_menu_item_info): New helper
	function used for both context and bonobo menus.
	(append_one_context_menu_item): New helper function used for
	context menus.
	(fm_directory_view_icons_append_selection_context_menu_items),
	(fm_directory_view_icons_append_background_context_menu_items):
	Use the new helper functions.
	(append_bonobo_menu_item), (update_bonobo_menu_item): New helper 
	functions used for bonobo menus.
	(fm_directory_view_icons_merge_menus): include stretch and restore
	menu items in Settings menu.
	(fm_directory_view_icons_update_menus): update wording and sensitivity
	of stretch and restore menu items.
	(fm_directory_view_icons_react_to_icon_change_idle_cb): update menus,
	since at least Restore item may have changed.
	(fm_directory_view_icons_icon_changed_cb): Schedule idle callback
	to update menus, since doing it here affects stretching too much.

2000-03-07  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-view-bonobo-subdoc.c (bonobo_subdoc_try_load_client):
	Change a few things in the code so that embeddables get activated
	properly; this makes scrolling and editing work in
	bonobo-text-plain for instance.
	
	* src/ntl-content-view.c, src/ntl-content-view.h
	(athena_content_view_set_active): New function; intended to be
	called when a content view becomes active, which should activate
	the controls and merge its menu and toolbar items.
	* ntl-window.c (athena_window_real_set_content_view): Call
	`athena_content_view_set_active' on the new content view.

2000-03-07  Darin Adler  <darin@eazel.com>

	* athena-icons-view-icon-item.c (athena_icons_view_icon_item_bounds):
	Fixed a typo that was causing the text area to not be included in the
	bounds of an icon item.

2000-03-07  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.h,
	libathena/athena-directory.c (get_file_metadata_node),
	(athena_directory_get_file_metadata),
	(athena_file_get_keywords): Added athena_file_get_keywords,
	which returns a GList of keywords.

	* libathena/athena-icon-factory.c (add_size_to_image_name),
	(get_themed_icon_file_path), (get_icon_file_path), (add_emblem),
	(athena_icon_factory_get_emblem_icons_for_file): Changed icon
	names to not include the extension and wired some extensions into
	the icon-reading code. The old code wired the entire file name, so
	this is a bit more flexible. Added code to return an emblem for
	each keyword attached to a file as well as the symbolic link emblem.

	* libathena/gnome-icon-container.c (update_icon): Handle NULL
	pixbufs for emblems. This happens when a keyword is specified that
	doesn't have a corresponding emblem icon.  Add g_list_reverse call
	to keep emblems in the correct order.

	* src/file-manager/fm-directory-view-icons.c
	(fm_directory_view_icons_merge_menus): Took out g_message left
	over from Bonobo menu merge work.

	* libathena/athena-glib-extensions.h,
	libathena/athena-glib-extensions.c
	(athena_g_list_free_deep): Added convenience function for
	getting rid of a GList of things that can be freed with g_free.

	* icons/Makefile.am, icons/certified.gif, icons/changed.gif,
	icons/confidential.gif, icons/emblem-certified.gif,
	icons/emblem-changed.gif, icons/emblem-confidential.gif,
	icons/emblem-encrypted.gif, icons/emblem-important.gif,
	icons/emblem-new.gif, icons/emblem-personal.gif,
	icons/emblem-remote.gif, icons/emblem-symbolic-link.png,
	icons/encrypted.gif, icons/i-symlink.png, icons/important.gif,
	icons/new.gif, icons/personal.gif, icons/remote.gif:
	Changed all emblem icons to have names that start with "emblem-".

2000-03-06  Andy Hertzfeld <andy@eazel.com>

	* icons/Makefile.am:  added 8 new images for emblems in icons directory;
	certified, changed, confidential, encrypted, important, new, personal, remote
	
2000-03-06  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window-msgs.c (athena_window_load_content_view):
	Explicitly change `window->cv_progress_done' and
	`window->cv_progress_error' to FALSE when loading a new content
	view, to avoid being screwed up by extra done or error
	notifications from the last content view. This is really just
	putting more spit and bubble gum on the pile though.

2000-03-06  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-title.c:
	made the icon displayed in the index panel be constrained to fit by scaling it down
	proportionally if it exceeds predetermined limits.
	
2000-03-06  John Sullivan  <sullivan@eazel.com>

	The file manager now uses Bonobo menu-merging to install
	and remove its menu items from the window's menu bar.
	I didn't put Zoom In/Zoom Out in the menu bar because
	that seems unnecessary once the control works (they're
	still in the right-click menu). I haven't yet put
	Stretch/Restore in the menu bar, will do so soon. And
	now you get a whole bunch of Gtk-CRITICALs when closing
	a window because of all the double-destroyed bonobo menu
	items (just like the two you used to get). Hope to fix
	this soon. Added new "Settings" menu, which needs to be
	organized better someday, and will be.

	* components/history/ntl-history-view.c:
	(menu_setup): Removed function.
	(make_obj): Removed code to set up merged menu. This was
	sample code for menu merging; now that we have real menu
	merging working elsewhere we don't need this sample.
	
	* libathena/athena-string.h,
	* libathena/athena-string.c:
	(athena_strstrip): New function, strips all occurrences
	of a given char from a char *.
	(athena_self_check_string): Added tests for athena_strstrip.
	
	* src/ntl-view-athena.c:
	(athena_view_try_load_client): Activate the new bonobo control
	when it's installed.
	(destroy_athena_view): Deactivate the bonobo control.

	* src/athena-window-menus.c:
	edit_menu_info[]: Removed "Preferences..." and preceding separator.
	settings_menu_info[]: New menu, added "General Settings..."
	(formerly "Preferences...") and "Use Eazel Theme Icons".
	main_menu[]: Include settings_menu_info.
	(edit_menu_prefs_cb): Renamed to general_settings_cb
	(use_eazel_theme_icons_cb): New function, swaps themes.
	(update_eazel_theme_menu_item): New function, sets the toggle state
	of this menu item based on current theme.
	(athena_window_initialize_menus): Call update_eazel_theme_menu_item
	explicitly, also wire it up to theme change signal.

	* src/ntl-prefs.c: (athena_prefs_ui_show): Renamed dialog
	from "Preferences" to "General Settings" to match menu item. This
	name will probably go away entirely eventually, but may as well
	keep it consistent for now.
	
	* src/file-manager/fm-directory-view.h: (merge_menus): New function
	pointer.  (update_menus): New function pointer.
	(fm_directory_view_update_menus): Prototype for new function.  *
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class): Set up merge_menus and
	update_menus function pointers.  (bonobo_menu_open_cb),
	(bonobo_menu_open_in_new_window_cb), (bonobo_menu_delete_cb): New
	callback functions with parameters the way Bonobo likes 'em.
	(get_bonobo_control): New utility function for getting the
	BonoboControl out of an FMDirectoryView.
	(bonobo_control_activate_cb): New function, called when the view's
	BonoboControl is activated or deactivated. Merges menus on
	activate, unsets bonobo container on deactivate.
	(fm_directory_view_initialize): Wire up bonobo_control_activate_cb
	to "activate" signal of view's bonobo control.
	(use_eazel_theme_icons_cb): Removed this function (it's in the
	standard Athena menus now, not component-dependent).
	(delete_one): Added a FIXME comment noting that the view is being
	told to delete the entire selection for every selected item.
	(fm_directory_view_delete_with_confirm): Moved the guts of
	delete_cb into here so it can be conveniently called from both
	bonobo menu and right-click menu.  (delete_cb): Now just calls
	fm_directory_view_delete_with_confirm.
	(add_check_menu_item): Removed function, had only been used by
	eazel theme icons menu item.
	(fm_directory_view_real_append_background_context_menu_items):
	Removed eazel theme icons menu item from right-click menu (now
	accessible always in the Settings menu).
	(compute_menu_item_info): New function, determines current label
	and sensitivity for dynamic menu items, common to both bonobo menus
	and context menus. Uses athena_strstrip to remove underlines used
	for accelerators when item is used for context menu.
	(append_one_selection_context_menu_item): New helper function,
	wraps up common code for constructing a menu item for the 
	selection-dependent part of the context menu.
	(fm_directory_view_real_append_selection_context_menu_items):
	Replaced a lot of duplicated code with calls to
	append_one_selection_context_menu_item.
	(fm_directory_view_real_merge_menus): New funciton. Here lieth the 
	code to put directory view menu items into the window's menu bar.
	(update_one_menu_item): New function, uses compute_menu_item_info
	to update the label & sensitivity of one bonobo-style menu item.
	(fm_directory_view_real_update_menus): New function, calls
	update_one_menu_item on each menu item whose label or sensitivity
	is dynamic.
	(fm_directory_view_notify_selection_changed): 
	Call fm_directory_view_update_menus to update menu labels &
	sensitivity that depend on the selection.
	(fm_directory_view_merge_menus): New function, calls the function pointer.
	(fm_directory_view_update_menus): New function, calls the function pointer.
	
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class): Supply function pointer
	for merge_menus.
	(customize_icon_text_cb): Just added comments about its dual use.
	(fm_directory_view_icons_merge_menus): Merge a "Customize Icon Text"
	item into the Settings menu. Still need to do the Stretch/Restore items
	here.

2000-03-06  Darin Adler  <darin@eazel.com>

	Fixed bug in Unstretch I just introduced.
	Got emblems drawing.

	* gnome-icon-container.c (gnome_icon_container_is_stretched),
	(gnome_icon_container_unstretch): Fixed bug where Unstretch would do
	all the icons, not just the selected ones.

	* athena-icons-view-icon-item.c (draw_stretch_handles),
	(emblem_layout_reset), (emblem_layout_next), (draw_pixbuf),
	(athena_icons_view_icon_item_draw), (hit_test_pixbuf),
	(hit_test), (athena_icons_view_icon_item_bounds): Added code to
	draw emblems and take them into account for hit testing and bounds
	calculation.

	* gnome-icon-container.c (update_icon):
	* athena-icons-view-icon-item.c (athena_icons_view_icon_item_draw):
	Moved rule about which zoom levels can have text displayed out of the
	canvas item class into the container. This is only one of many needed
	cleanups to how the "text in an icon" is handled.

2000-03-06  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-prefs.c: Use help search instead of help index.

	* components/help/hyperbola-nav-search.c: Initial implementation completed.

2000-03-06  Darin Adler  <darin@eazel.com>

	* libathena/gnome-icon-container.c
	(gnome_icon_container_move_icon): Added missing code to get
	stretching to work again. (Oops.)
	(gnome_icon_container_is_stretched), (gnome_icon_container_unstretch):
	Fixed the unstretch code so it will work on multiple icons.

	* src/file-manager/fm-directory-view-icons.c
	(fm_directory_view_icons_append_selection_context_menu_items):
	Make menu item name plural when there are multiple icons to
	unstretch.

	* libathena/athena-icons-view-icon-item.c
	(athena_icons_view_icon_item_draw): Draw a box around the item
	when the stretch handles are visible. This looks better.
	
	* libathena/athena-icons-view-icon-item.h: White space.

2000-03-06  Darin Adler  <darin@eazel.com>

	Added the concept of separate X and Y scale factors to more
	of the code. Even though we don't want to scale the two
	dimensions separately at the moment, I figured it was better
	to go in this direction than to remove all the separate X
	and Y stuff that Seth Nickell added.

	* libathena/gnome-icon-container-dnd.c
	(gnome_icon_container_receive_dropped_icons):
	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c (icon_get_actual_size),
	(icon_new), (icon_get_size), (start_stretching), (update_icon),
	(gnome_icon_container_add), (gnome_icon_container_is_stretched),
	(gnome_icon_container_unstretch),
	(gnome_icon_container_move_icon):
	* libathena/gnome-icon-container.h:
	Got rid of the old "scale", "xscale", and "yscale" and replaced
	them with "scale_x" and "scale_y". Made the code always set the
	scale factor through the gnome_icon_container_move_icon bottleneck
	so the changes are all reported throught the icon_moved signal.

	* src/file-manager/fm-directory-view-icons.c:
	(add_icon_if_already_positioned),
	(fm_directory_view_icons_icon_moved_cb):
	Store only a single scale factor if the X and Y are both scaled
	exactly the same (the normal case). Also, use a default for
	the scale factor so we don't save 1.0 for every file.

	* libathena/athena-gtk-extensions.h:
	* libathena/athena-gtk-extensions.c:
	My original change required an additional marshal function. I
	decided to add it anyway even though I don't need it right now.

	* libathena/athena/athena-bookmark.c
	(athena_bookmark_get_pixmap_and_mask):
	Changed to use the athena_icon_factory_get_pixbuf_for_file
	convenience function which has a simpler interface.

	* libathena/athena-icon-factory.h:
	* libathena/athena-icon-factory.c:
	Added separate X and Y scaling of icons for possible future
	use; the convenience functions still use the same size in
	both dimentions.

	* components/music/.cvsignore:
	  New directory, new .cvsignore needed.
	
	* RENAMING: Some more name change ideas.

2000-03-06  Elliot Lee  <sopwith@redhat.com>

	* components/help/hyperbola-nav-index.c: Initial implementation completed.

2000-03-05  Andy Hertzfeld <andy@eazel.com>

	* components/music/athena-music-view.c: derive name and 
	track position when there's no id3 tag present, and format 
	the title better from the id3-derived information
	
2000-03-05  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-string.c,.h: added a athena_has_suffix 
	routine in the style of	athena_has_prefix.
	* components/music/athena-music-view: use athena_has_suffix 
	in mp3 determination
	
	* libathena/athena-icon-factory.c:  make sure all thumbnails 
	have a png suffix, since they're always pngs now. Also, made 
	thumbnailing machinery call ImageMagick to handle the conversion 
	if gdk-pixbuf comes up empty, so we can handle many more formats
	
2000-03-05  Andy Hertzfeld <andy@eazel.com>

	added a music view component for viewing directories of mp3 files.  
	This first cut only handles only the case when the mp3 files have 
	id3 tags present (most do these days)
	
	* components/music/athena-music-view.c,.h: a new music view 
	component gathers information from the id3 tags of mp3 files in 
	the target directory and displays them in a list, sorted by track 
	number. It also displays the album cover if it can find one.  For 
	now, it launches xmms to do the playing, but it will eventually 
	have an integrated player and support other file types.
	* components/music/athena-music-view.goad: component activation file
	* main.c: boiler-plate component stuff
	* components/music/Makefile.am: makefile for music component
	* configure.in: added music component
	* components/Makefile.am: added music component
	
	* src/ntl-uri-map: added a new way to install content view components, 
	by having the components explicitly listed in the metadata for the 
	object being displayed.	Used this to test the music view, but there's 
	no way to manipulate it through the UI yet
	* libathena/athena-metadata.h: added a "CONTENT_VIEWS" tag for 
	specifying content views in the metadata
	
2000-03-05  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window-msgs.c (athena_window_update_internals): Handle
	freeing of window->ni in a fancier way to avoid double-free
	problems which were causing crashes after some amount of view
	switching and navigation. It might leak memory but it's the only
	obvious way to avoid crashing.	
	* src/ntl-window.c (athena_window_destroy): Likewise to avoid
	crashing on exit.
	* src/ntl-window.h (Athena_NavigationInfo_free): Prototype this
	function.
	
2000-03-04  Maciej Stachowiak  <mjs@eazel.com>

	* athena-clean.sh: Simple shell script to check if any of the
	auxiliary processes athena might launch are still running, and
	if so, report which ones and kill them. Total hack for dev/testing
	use only; should not be distributed.

2000-03-03  Maciej Stachowiak  <mjs@eazel.com>

	* components/sample/athena-sample-content-view.c: Fix
	indentation on some of the lines.
	(athena_sample_content_view_load_uri): g_free() the old uri before
	g_strdup()ing a new one to avoid leaking memory.

2000-03-03  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in: added eazel services define

	* acconfig.h: new file to make autoheader happy

2000-03-03  Jonathan Blandford  <jrb@redhat.com>

	* libathena/Makefile.am (libathena_la_LDFLAGS): added libpng
	to Makefile.am

	* configure.in: added autoconf check for png.

2000-03-03  John Sullivan  <sullivan@eazel.com>

	* configure.in: Turned -Werror back on. It had been turned 
	off accidentally as part of the patch Maciej applied earlier today.
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_icon_moved_cb): Changed two %lf's to %f's
	in g_strdup_printf to make compiler happy.

2000-03-03  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-prefs.c: Default to showing help index (it's the parade of the meta views! :).
	* components/help/hyperbola-nav-index.c: Compiles and
	runs. Hardcoded to /gnome prefix for now.

2000-03-03  Maciej Stachowiak  <mjs@eazel.com>

	* components/html/ntl-web-browser.c (make_obj): Reorder to code to
	avoid crashing.
	(main): Drop to the debugger on warnings and criticals.
	(browser_vfs_read_callback): Add some casts to avoid a warning.	

2016-03-03  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-app.c, src/athena.goad: Make AthenaApp a factory for
	ViewWindows.

2000-03-03  Maciej Stachowiak  <mjs@eazel.com>

	* components/sample/athena-sample-content-view.c,
	components/sample/athena-sample-content-view.h,
	components/sample/athena-sample-content-view.goad,
	components/sample/main.c, components/sample/Makefile.am: Sample
	content view component. All it does is display the current URI in
	a label.
	* componets/Makefile.am, configure.in: Build it.
	* src/ntl-uri-map.c: Activate the sample component whenever there
	is at least one other applicable view. What it should really do is
	have a special mode based on a command-line option of some sort
	which will cause it to be always activated, and otherwise not at
	all, but that looked more complicated to do.

	* libathena/athena-directory.c
	(athena_directory_try_to_read_metafile): Don't bomb on a
	zero-length metafile.

	Icon stretching is now persistent in the metafile, patch from Seth
	Nickell <snickell@stanford.edu>:
	
	* libathena/gnome-icon-container.c, gnome-icon-container.h,
	gnome-icon-container-dnd.c: Add xscale and yscale arguments to
	"icon_moved" signal to allow more unified handling of geometry
	changes.  
	* libathena/athena-metadata.h: Add definition of
	ICON_VIEW_SCALE_METADATA_KEY.
	* src/file-manager/fm-directory-view-icons.c: Save the stretch
	factor to the metafile when stretching and restore it when loading
	the directory.	
	
2000-03-02  Maciej Stachowiak  <mjs@eazel.com>

	* HACKING: Updated build instructions and list to send patches to.

2000-03-02  Pavel Cisler <pavel@eazel.com> (checking in as ramiro)
	* src/ntl-window.c: 
	  (athena_window_new): I meant to removed the call but messed it
	  up.

2000-03-02  Pavel Cisler <pavel@eazel.com> (checking in as ramiro)
	Fixed a crash in "Open in New Window".

	* src/ntl-window.c,h: 
	  (athena_window_new): Removed the call. Creating new
	  windows should only be done through athena_app_create_window.
	  (athena_window_class_init): Added a call to add "AthenaWindow::app"
	  as an argument to make the app field get initialized properly.
	* src/ntl-app.c:
	  (athena_app_create_window): Made it call gtk_object_new with the
	  right arguments to create a new window.

2000-03-02  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icon-factory.c:
	changed thumbnailing to use gdk-pixbuf to make the thumbnails instead
	of ImageMagick.  Added code to save a gdk-pixbuf as a png that
	was written by Iain Holmes for gnome-iconedit, but had to fix it
	to work in the case where there's no alpha channel.
	
2000-03-02  Elliot Lee  <sopwith@redhat.com>

	* components/help/hyperbola-filefmt.c: Use 'help' URI scheme instead of 'ghelp'.

	* components/help/hyperbola-nav-index.c: Just checking in an
	uncompilable work-in-progress. Remove ifdefs at own risk. :)

2000-03-02  John Sullivan  <sullivan@eazel.com>

	* src/ntl-main.c: Change gtk_object_unref (app) to
	bonobo_object_unref (app) to avoid bonobo complaints
	when quitting.

2000-03-02  Elliot Lee  <sopwith@redhat.com>

	* src/athena.goad, src/ntl-app.[ch], src/ntl-main.c: Implement
	IDL:Athena/Application:1.0 interface and AthenaApp GtkObject.
	* src/athena-window-menus.c, src/ntl-window.[ch], src/ntl-window: 
	Change to match above.
	* src/ntl-view-frame-svr.c: Implement _get_application()
	operation.

2000-03-01	Andy Hertzfeld <andy@eazel.com>

	* libathena/athena_icon_factory.c:
	some bug fixes.  Quoted filenames when invoking convert.  Checked for a null
	icon controller in some places and handled accordingly
	
2000-03-01  Andy Hertzfeld <andy@eazel.com>

	implemented automatic thumbnail creation for large images.
	
	* libathena/athena_icon_factory.c,h:
	the bulk of the work is in here. If the relevant file is a large image,
	look for a corresponding thumbnail in the .thumbnails directory; if
	found, use it, otherwise put it on a queue for later thumbnail creation.
	A timeout task is called periodically to fork a task to use ImageMagick
	to actually create the thumbnail, and then call the icon controller to
	actually update the icon.  Eventually, we'll replace ImageMagick
	with our own inline code for better performance.
	
	*libathena/gnome-icon-container.c,h:
	added a gnome_icon_container_update_icon method to update the icon
	corresponding with the passed in uri.  This is used by the icon
	controller to update the icons with the newly created thumbnails.
	
	*libathena/athena-icons-controller.c,h:
	added a athena_icons_controller_update_icon method to the abstract
	class to update the icon associated with the passed-in uri.
	
	*src/file-manager/fm-icons-controller.c:
	concrete implementation that calls the icon canvas to update the icon.
	
	*libathena/athena_bookmark.c:
	since I added a controller parameter to get_icon_for_file, I had to add
	the parameter here, since athena_bookmark was using get_icon_for_file
	
	*icons/loading.png:
	added a placeholder icon to express that a thumbnail is loading; Susan
	will replace this soon.  Also, it's not being used properly yet.
	
	* icons/Makefile.am
	added the loading icon.
	
2000-02-29  John Sullivan <sullivan@eazel.com>

	* src/ntl-window-msgs.c: (athena_window_set_state_info):
	  Replaced gtk_object_ref with comment explaining not to
	  ref in the cases NEW_CONTENT_VIEW_ACTIVATED and
	  NEW_META_VIEW_ACTIVATED. The former is called only when
	  switching views via the View As menu, and was leaving
	  an extra ref on the content_view, which was preventing 
	  it from getting destroyed when switching views, which
	  was preventing me from using the destroy signal for
	  menu unmerging. The latter is never called, but presumably
	  would have the same issue if anyone ever called it.

2000-02-28  Maciej Stachowiak  <mjs@eazel.com>

	* src/athena-window-menus.c (clear_appended_bookmark_items):
	Added an explicit cast to (const char *) to avoid gcc 2.95.2
	complaining.

2000-02-28  John Sullivan <sullivan@eazel.com>

	Separated out more menu-handling code into new file.

	* src/ntl-app.h: Added #include ntl-window.h.
	* src/athena-window-menus.c:
	* src/ntl-window-private.h:
	  (athena_window_initialize_bookmarks_menu),
	  (athena_window_initialize_go_menu): Removed prototypes.
	  (athena_window_initialize_menus), (athena_window_back_cb),
	  (athena_window_forward_cb), (athena_window_up_cb),
	  (athena_window_home_cb): Added prototypes.
	* src/ntl-window.c: Moved all the static menu definitions and
	  most of the callback functions out of here.
	* src/athena-window-menus.c: Moved all of the static menu
	  definitions and most of the callback functions into here.

2000-02-28  John Sullivan <sullivan@eazel.com>

	Switched AthenaWindow over to using BonoboUIHandler-style
	menus. Everything works except that the Go and Bookmarks
	menu items don't show icons for now. Apparently the part of
	Bonobo that would support using arbitrary GdkPixbufs as
	menu item icons is not yet implemented. Other than the
	missing icons problem, this change has no visible effect,
	but is required to support merging items into the standard
	menus.

	* src/athena-bookmarks-menu.h: Deleted this file.
	* src/athena-bookmarks-menu.c: Deleted this file, moved/morphed its
	  code into ntl-window.c and athena-window-menus.c as appropriate.
	* src/athena-window-menus.c: New file, avoids making ntl-window.c
	  any huger by keeping some of the menu-specific stuff in here. Right
	  now this file includes only stuff I had to change or create for this
	  checkin. I will soon make another pass at moving a bunch of old menu 
	  code into here.
	* src/Makefile.am: Removed deleted files, added new file.
	* src/athena.h: Removed #include athena-bookmarks-menu.h.
	* src/ntl-window-msgs.c: Added #include <libathena/athena-bookmark.h>
	  that became necessary when athena.h changed.
	* src/ntl-app.c: (athena_app_exiting):
	  Changed athena_bookmarks_menu_exiting to athena_bookmarks_exiting,
	  since there's no menu involved in this code now.
	* src/ntl-window-private.h: Added prototypes for functions called
	  between ntl-window.c and athena-window-menus.c.
	* src/ntl-window.h: Added prototype for athena_bookmarks_exiting;
	  removed fields for various stored menu items.	  
	* src/ntl-window.c:
	  Removed #defines for GO_MENU_<foo>_ITEM_INDEX, since menu-item
	  accessing is now done with paths the Bonobo way.
	  Removed separator from static part of Go menu; the separator is
	  now added when the dynamic items are added.
	  Added static items in Bookmarks menu to GnomeUIInfo array.
	  (add_bookmark_cb), (edit_bookmarks_cb): New callback functions used
	  by the static part of the Bookmarks menu.
	  (clear_go_menu_history), (activate_bookmark_in_menu_item),
	  (refresh_history_list_in_go_menu): Removed functions; new versions 
	  are in athena-window-menus.c.
	  (athena_window_init): Removed go-menu signal connections; new
	  versions are in athena-window-menus.c.
	  (athena_window_constructed): Create and access menus the Bonobo way;
	  also call functions to initialize the two dynamic menus.
	  (athena_window_allow_back), (athena_window_allow_forward),
	  (athena_window_allow_up): Access menu items with paths, the Bonobo way.
	  (athena_get_history_list): New function, wrapper around static
	  variable so it can be accessed from athena-window-menus.c.

2000-02-26  Andy Hertzfeld <andy@eazel.com>

	fixed bug where title tab was initially pre-lit
	
	* src/ntl-index-panel.c:
	turns pre-lite off when activating
	* src/athena-index-tabs.c:
	initialize prelit flag
	
2000-02-26  Andy Hertzfeld <andy@eazel.com>

	made index tabs receive dropped colors and display them; it doesn't store it persistently yet
	
	* src/ntl-index-panel.c:
	made it call call index_tabs_receive_dropped_color when dropped over the tabs
	* src/athena-index-tabs.c,h:
	added index_tabs_receive_dropped_color to set the tab_color and redraw
	
2000-02-26  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	made it call index_tabs_prelite for the title tabs at the appropriate times
	* src/athena-index-tabs.c:
	made preliting work for the title tab
	
2000-02-26  Maciej Stachowiak  <mjs@eazel.com>

	* components/notes/ntl-notes.c: Make the text area take more of
	the space of the component. Make the text box light yellow, the
	official international color of annotation.

2000-02-25  Andy Hertzfeld  <andy@eazel.com>

	implemented mouse-over hiliting for the index tabs
	
	* src/ntl-index-panel.c:
	receive motion notify events to hit test the tabs
	* src/athena-index-tabs.c,h:
	add pre-lite boolean to tab, pre-lite color
	draw with pre-lite color when boolean is set
	implemented athena_index_tabs_prelite_tab to set booleans
	* src/ntl-window.c:
	turn on mouse motion events for the index panel
	
2000-02-25  Andy Hertzfeld  <andy@eazel.com>

	* libathena/gnome-icon-container.c:
	made the return key activate all selected icons, to make keyboard navigation actually
	do something useful besides selecting

2000-02-25  Andy Hertzfeld  <andy@eazel.com>

	* src/athena-index-tabs.c:
	Susan's new look for the index-tabs, as well as some misc clean-ups
	
2000-02-25  John Sullivan <sullivan@eazel.com>

	* src/file-manager/fm-directory-view-c:
	 (confirm-delete): New function, puts up a dialog confirming
	 whether to delete the selected items.
	 (delete_cb): Checks with confirm_delete before deleting.
	 It's too easy to accidentally delete files without this, as
	 I discovered yesterday in my foolish experimentations.
	 (fm_directory_view_real_append_selection_context_menu_items):
	 Renamed "Delete" menu item to "Delete..." to make it clear that
	 no deleting will occur without confirmation.

2000-02-25  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container.c:
	set the scale factor so no icons are bigger than a specified size, 
	at least initially.  Currently the size is set to 80 pixels.
	
2000-02-24  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Make sure to
	gnome_vfs_async_cancel our GnomeVFSAsyncHandle before setting it
	to NULL, to avoid leaking gnome-vfs-slave processes.
	* libathena/athena-directory.c (athena_directory_load_done):
	When loading is complete, make sure to gnome_vfs_async_cancel the
	handle before setting it NULL, to avoid leaking gnome-vfs-slave
	processes.
	* src/file-manager/fm-directory-view.c
	(disconnect_model_handlers): if we have a AthenaDirectory in
	use, make sure to call athena_directory_stop_monitoring on it to
	avoid leaking gnome-vfs-slave processes.
	
2000-02-24  John Sullivan  <sullivan@eazel.com>

	Some work on improving the error messages when files
	can't be displayed. There's still plenty of room for
	improvement, but at least the most common cases are
	halfway decent now.

	* libathena/athena-string.h,
	* libathena/athena-string.c:
	(athena_strdup_prefix): New function, returns a new
	string matching the beginning of another string, up to
	but not including the first occurrence of a given substring.
	(athena_self_check_string): Added test cases for new function.

	* src/ntl-types.h:
	Added enum AthenaNavigationResult, which is a cousin of
	GnomeVFSResult that lumps many error types together and also
	has special Athena-specific types. Added a field of this type
	to AthenaNavigationInfo to keep track of various failure
	scenarios. Also reformatted this file.
	* src/ntl-uri-map.c:
	(get_athena_navigation_result_from_gnome_vfs_result): 
	Long-windedly named helper function to translate between
	GnomeVFSResult and AthenaNavigationResult.
	(my_notify_when_ready): Determine and store AthenaNavigationResult
	for error cases. Don't free navinfo here, because it's needed to
	determine the uri-that-didn't-work later.
	* src/ntl-window-msgs.c:
	(athena_window_change_location_2): Compose reasonable error messages,
	which include the uri that couldn't be shown, from various failure cases.

2000-02-24  Andy Hertzfeld <andy@eazel.com>

	implemented the delete command in the context menu.  It's not 
	completed yet,it still needs to remove entries from the model, 
	as well as giving better feedback.
	
	* libathena/gnome-icon-container.c,.h:
	added gnome_icon_container_clear_selected_items to remove 
	selected items from the view
	* src/file-manager/fm-directory-view.c,h:
	enabled the delete menu item, added a callback for it which 
	actually does the deletion
	added a delete_selection method, implemented by the subclasses 
	to remove items from the view
	* src/file-manager/fm-directory-view-icons.c:
	implemented delete_selection by calling the icon container
	* src/file-manager/fm-directory-view-list.c:
	implemented delete_selection to remove selected items from the clist
	
2000-02-24  John Sullivan  <sullivan@eazel.com>

	* components/history/ntl-history-view.c:
	(history_view_update_icons), (make_obj): Correction to previous
	checkin: connect signal to CList instead of HistoryView because
	HistoryView isn't a GtkObject.

2000-02-24  John Sullivan  <sullivan@eazel.com>

	* src/ntl-uri-map.c: (my_notify_when_ready):
	Added "View as Text" as an option for html pages. Untestable
	right now because attempting to load html pages fails.

	* components/history/ntl-history-view.c:
	(install_icon): Removed bookmark parameter; now it determines that
	from the other parameters.
	(history_view_update_icons): New function, walks through list updating
	the icon for each row.
	(hyperbola_navigation_history_notify_location_change): Removed bookmark
	parameter from install_icon call.
	(make_obj):  register to call history_view_update_icons
	when athena_icon_factory emits "theme_changed" signal. This has
	no current visible effect, because changing the theme in Athena
	does not change the theme in the separate icon factory used in this
	metaview. This is bugzilla bug #5.

2000-02-24  John Sullivan  <sullivan@eazel.com>

	Cleaned up after fix to bug 14 from yesterday.

	* src/ntl-types.h: Removed use_new_window field from
	AthenaNavigationInfo struct; the new-window spawning
	now happens early enough that this struct is not involved.
	
	* src/ntl-uri-map.c: (athena_navinfo_new): Don't set the
	now non-existent use_new_window field.
	
	* src/ntl-window-msgs.c: (athena_window_change_location_2):
	Don't make any decisions based on the now non-existent
	use_new_window field.

2000-02-24  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_append_selection_context_menu_items):
	Made "Open in New Window" menu item label be "Open in n New Windows"
	if more than one is selected; added some _()s to user-visible text.

2000-02-23  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Use EOG as the in-line
	image viewer. You need to have EOG from CVS installed for this to
	work. It still has issues - the control zooms the image to fill
	available space by default, and there is no zooming support. But
	it's amazing that one line was enough to do this, and it worked on
	the first try! Bonobo rules.
	
	* libathena/athena-icons-view-icon-item.c
	(athena_icons_view_icon_item_set_emblems): Athena was getting
	an assertion failure on startup, so I weakened the
	assertion. Darin should look at my fix.

	* idl/athena.idl (ViewWindow): Added `application' readonly
	attribute.
	(Application): Renamed attribute from `windows' to `view_windows'
	and made it a sequence<ViewWindow> rather than
	sequence<Object>. Renamed `new_window' method to
	`new_view_window'.
	* src/ntl-window.h: Miscellaneous reformatting.
	(athena_window_close): Added prototype
	* src/ntl-window.c: Added implementations of
	Athena::ViewWindow's methods. For now, _get_application just
	returns CORBA_OBJECT_NIL because the Application object has not
	yet been implemented.
	(athena_window_close): New function used by `file_menu_close_cb'
	and `impl_POA_Athena_ViewWindow_close'.
	(would_be_in_gdk_pixbuf_if_federico_wasnt_stubborn_pixbuf_render):
	Added an explanatory comment.

	* idl/athena.idl: Added Athena::Zoomable and
	Athena::ZoomableFrame interfaces.
	* athena-zoomable.c, athena-zoomable.h: New files for the
	AthenaZoomable class. This class is used to implement the
	Athena::Zoomable interface on a athena view or other control.
	* Makefile.am: Added athena.c and athena.h to the build.
	
2000-02-23  John Sullivan  <sullivan@eazel.com>

	Visible part of the fix to bug 14 (Open in New Window only
	opens one window when multiple items selected). Still need
	to clean up old, unnecessary code. Checking this in now for
	convenience; will clean up other code tomorrow.

	* src/ntl-app.c: (athena_app_create_window): Replaced the
	gtk_widget_show of new window with comment explaining why not
	to show it yet.
	
	* src/ntl-window-msgs.c: 
	(athena_window_request_location_change): Spawn new window here
	if the NavigationRequestInfo says so (formerly didn't spawn new
	window until after we knew it was a displayable uri; that code
	is still present but now never invoked; I will kill it tomorrow).
	(athena_window_change_location_2): Call gtk_widget_show on
	window when we know that location change will succeed; if the
	location change failed, destroy the nascent window and put the
	error message in an unparented dialog.

2000-02-23  Darin Adler  <darin@eazel.com>

	Some of the underlying work to prepare for emblems on the icons.

	* style-guide.html: Some minor updates to the style guide,
	including rules about headers.

	* libathena/athena-icon-factory.h,
	libathena/athena-icon-factory.c:
	(athena_icon_factory_get_emblem_icons_for_file),
	(athena_scalable_icon_get), (athena_icon_factor_clear),
	(athena_icon_factory_load_file),
	(athena_gdk_pixbuf_composite_corner),
	(athena_icon_factor_load_icon), (athena_scalable_icon_hash),
	(athena_scalable_icon_equal),
	(athena_icon_factory_get_icon_for_file), (load_specific_image):
	Added interface for getting emblem icons for a file, and got rid
	of the symbolic-link overlay that was previously built into the
	icon.

	* libathena/gnome-icon-container.c (update_icon):
	Get pixbufs for all emblems and pass into the icon object.

	* libathena/athena-icons-controller.c
	(nautius_icons_controller_get_icon_image):
	src/file-manager/fm-icons-controller.h,
	src/file-manager/fm-icons-controller.c
	(fm_icons_controller_get_icon_image): Return a list of emblem
	images along with the main image.

	* libathena/athena-icons-view-icon-item.h,
	libathena/athena-icons-view-icon-item.c
	(athena_icons_view_icon_item_set_emblems),
	(athena_icons_view_icon_item_destroy): Keep a list of emblem
	pixbufs in each icon. We don't draw them quite yet.

	* libathena/gdk-extensions.h, libathena/gdk-extensions.c:
	(athena_gdk_pixbuf_list_ref), (athena_gdk_pixbuf_list_unref),
	(athena_gdk_pixbuf_list_free): Convenience functions for
	manipulating lists of GdkPixbuf objects.

	* libathena/athena-directory.h,
	libathena/athena-directory.c: (athena_file_list_ref),
	(athena_file_list_unref), (athena_file_list_free): Convenience
	functions for manipulating lists of AthenaFile objects. Also got
	rid of AthenaFileList typedef.

	* libathena/athena-icon-factory.h,
	libathena/athena-icon-factory.h:
	(athena_scalable_icon_list_free): Convenience function for
	manipulating lists of AthenaScalableIcon objects.

	* libathena/athena-glib-extensions.h,
	libathena/athena-glib-extensions.c: (athena_g_list_equal):
	Function to compare two GLists to see if they are
	identical. Particularly useful with lists of reference-counted
	objects.

	* src/file-manager/fm-directory-view-icons.c
	(fm_directory_view_icons_destroy),
	(add_icon_if_already_positioned),
	(fm_directory_view_icons_append_selection_context_menu_items),
	(display_icons_not_already_positioned),
	(fm_direectory_view_icons_get_selection):
	src/file-manager/fm-directory-view-list.c
	(fm_directory_view_list_get_selection):
	src/file-manager/fm-directory-view.c (display_selection_info),
	(display_pending_files), (add_files_cb), (open_in_new_window_cb),
	(fm_directory_view_real_append_selection_context_menu_items): Got
	rid of use of AthenaFileList typedef, corrected ref. counting of
	files in the lists by using new calls.
	
	* src/athena-bookmarklist.c, src/athena-bookmarks-menu.c,
	src/athena-index-tabs.c,
	src/file-manager/fm-directory-view-icons.c,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-icons-controller.c: A bit of reformatting.

2000-02-23  Andy Hertzfeld <andy@eazel.com>
	
	* icons/i-directory.png, icons/i-directory-36.png,
	* icons/i-regular.png, icons/i-regular-36.png:
	This completes Kenneth's set of icons for the generic document and folder
	* icons/Makefile.am:
	Added the 36 pixel versions.
	
2000-02-23  Elliot Lee  <sopwith@redhat.com>
	
	* autogen.sh: Finish the hack to not make people get gnome.m4 from
	gnome-libs any more.

2000-02-22  Andy Hertzfeld <andy@eazel.com>
	
	* icons/i-directory-12.png, icons/i-directory-24.png,
	* icons/i-regular-12.png, icons/i-regular-24.png
	Small versions of the standard gnome folder and document icons,
	contributed by Kenneth Christiansen.
	* icons/Makefile.am
	Include Kenneth's icons.

2000-02-22  John Sullivan  <sullivan@eazel.com>

	Made list view respond to icon theme changes too. Forgot
	about it last time!

	* src/file-manager/fm-directory-view-list.c:
	(update_icons): New function, walks through list installing
	the icon for each row.
	(fm_directory_view_list_initialize): register to call update_icons
	when athena_icon_factory emits "theme_changed" signal.

2000-02-22  John Sullivan  <sullivan@eazel.com>

	Made bookmarks menu, go menu, and bookmarks window respond
	to icon theme changes. The history metaview is still an
	outstanding issue, waiting on technical solution to
	icon-factories-in-different-executables problem.

	* src/athena-bookmarks-menu.c:
	(athena_bookmarks_menu_new): register to call
	athena_bookmarks_menu_repopulate when athena_icon_factory
	emits "theme_changed" signal.
	* src/athena-bookmarks-window.c:
	(create_bookmarks_window): register to call repopulate
	when athena_icon_factory emits "theme_changed" signal.
	* src/ntl-window.c:
	(refresh_history_list_in_go_menu): Renamed from history_list_changed_cb,
	removed unused AthenaSignaller parameter.
	(athena_window_init): Changed a gtk_signal_connect_while_alive to
	gtk_signal_connect_object_while_alive to avoid that unused
	AthenaSignaller parameter; register to call 
	refresh_history_list_in_go_menu when athena_icon_factory emits
	"theme_changed" signal.

2000-02-22  John Sullivan  <sullivan@eazel.com>

	Improved the status text that appears after changing the
	selection in the file manager.

	* libathena/athena-directory.h,
	* libathena/athena-directory.c:
	(athena_file_is_directory): New convenience function.
	I updated everywhere in this file that was checking for
	directories to use this.
	(athena_file_get_directory_item_count): New function
	to get the item count of a directory. This is implemented
	with the evil get_directory_item_count_hack, but we'll want
	this API later even when the evil hack is gone.

	* src/file-manager/fm-directory-view.c: 
	(display_selection_info): The selection count/size string is
	now broken into a directory part and an everything else part.
	No more counting directories as 4.1K.

2000-02-22  Elliot Lee  <sopwith@redhat.com>

	* libathena/athena-file-utilities.c: include string.h to avoid warnings
	* src/athena-index-title.c: Set order of items packed into box.
	* src/file-manager/fm-directory-view-icons.c: include stdio.h to avoid warnings.

2000-02-22  Darin Adler  <darin@eazel.com>

	Fixed bug where the Eazel-theme icon for the document reverts to
	the non-theme icon when you are zoomed in all the way.

	* athena-icon-factory.c: (athena_icon_factory_load_file),
	(add_size_to_image_name), (get_icon_file_path),
	(athena_icon_factory_load_file),
	(athena_icon_factory_load_icon), (load_specific_image): Changed
	logic so the decision about whether to use a theme icon or the
	default icon for each icon is decided based on the presence of the
	non-sized version of the icon rather than the presence of the icon
	for a particular size.

	* athena-file-utilities.h, athena-file-utilities.c:
	Cleaned up header and includes and changed ".gnomad" to
	".athena".  (At first I had added a athena_file_exists
	function, but then I remembered the g_file_exists function in
	gnome-utils.h.)

2000-02-22  Andy Hertzfeld <andy@eazel.com>

	* icons/i-directory-192.png
	* icons/i-directory-96.png
	* icons/i-directory-72.png
	Hi-res versions of the standard gnome folder icon,
	contributed by Kenneth Christiansen.
	* icons/Makefile.am
	Include Kenneth's icons.

2000-02-21  Andy Hertzfeld <andy@eazel.com>

	* icons/i-regular-192.png
	* icons/i-regular-96.png
	* icons/i-regular-72.png
	Hi-res versions of the standard gnome generic document icon,
	contributed by Kenneth Christiansen
	* icons/Makefile.am
	include Kenneth's icons
	* libathena/athena-icons-controller.c,
	* libathena/athena-icons-controller.h:
	added a new method to get string properties
	* libathena/athena-icons-view-icon-item.c:
	Draw the contents of a text file into the icon itself in a small
	font, if the text_source property is set.
	* src/file-manager/fm-icons-controller.c:
	Routine to determine whether to draw into icons.  Since our
	mime-type detection is inadequate now, we throw caution to the
	winds and assume an unknown type is a text file it only enables
	this for eazel themes now, we have to figure out a better way to
	tell if the icon can contain it.

2000-02-21  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.c: Fixed crashes introduced in the
	course of my reorganization - in one case I g_new()'d something
	that should have been g_new0()'d, in another I forgot to
	CORBA_exception_init().
	
2000-02-21  Andy Hertzfeld <andy@eazel.com>

	added document icons to eazel icons theme in 4 sizes
	
	* icons/eazel/i-regular.png, i-regular-36.png, i-regular-72.png,
	  i-regular-96.png:
	Added Susan's document icons at 4 zoom levels.
	* icons/eazel/Makefile.am:
	Added to Makefile so they get installed.

2000-02-21  John Sullivan  <sullivan@eazel.com>

	Refined right-click context-menu behavior in file manager.
	Now right-click affects the selection exactly as a left-click
	would, including modifying the selection with modifier keys.
	The first section of the context menu applies to all the
	selected items. Menu items that can only apply to a single
	item are insensitive if there's more than one item selected.

	* libathena/gnome-icon-container.h:
	(context_click_selection): Renamed this signal from context_click_icon
	and removed the file parameter.
	* libathena/gnome-icon-container.c:
	(gnome_icon_container_initialize_class), (handle_icon_button_press): 
	Renamed signal context_click_icon to context_click_selection and
	removed the file parameter.
	(handle_icon_button_press): Reorder so that all selection changes
	happen before the drag/activate/context-menu decision-making.
	
	* libathena/gtkflist.h:
	(context_click_selection): Renamed this signal from context_click_row
	and removed the row parameter.
	* libathena/gtkflist.c:
	(gtk_flist_initialize_class), (gtk_flist_button_press):
	Renamed signal context_click_row to context_click_selection and
	removed the row parameter.
	(gtk_flist_button_press):
	For context clicks, call select_row the normal way to get the
	normal selection modification behavior, instead of forcing only
	the clicked row to be selected.

	* src/file-manager/fm-directory-view.h:
	(append_selection_context_menu_items): Renamed from
	append_item_context_menu_items and changed AthenaFile parameter
	to a AthenaFileList.
	(fm_directory_view_pop_up_selection_context_menu): Renamed from
	fm_directory_view_popup_item_context_menu.
	(fm_directory_view_pop_up_background_context_menu): Renamed from
	fm_directory_view_popup_background_context_menu
	* src/file-manager/fm-directory-view.c:
	Renamed all functions with "item_context_menu" in their names
	to include "selection_context_menu" instead; Changed verb "popup"
	to "pop up" in function names.
	(open_one_in_new_window): New GFunc-type function, calls
	fm_directory_view_activate_entry on a single AthenaFile.
	(open_in_new_window_cb): Now takes a AthenaFileList* instead of
	a AthenaFile* and iterates with open_one_in_new_window.
	(fm_directory_view_real_append_selection_context_menu_items):
	Desensitize "Open" if more than one selected item, since more than
	one can't open into the same window; pass selected file list to
	open_in_new_window_cb
	(create_selection_context_menu): Skip the selection-specific part 
	of the menu if there are no selected items (but still put up the 
	menu with the background items);

	* src/file-manager/fm-directory-view-icons.c:
	Various changes to match renamings and parameter changes listed
	above. Also,
	(fm_directory_view_icons_append_selection_context_menu_items): 
	Only enable "Stretch Icon" if exactly one item is selected, since
	the UI is only designed to work with a single icon.
	* src/file-manager/fm-directory-view-list.c:
	Various changes to match renamings and parameter changes listed
	above.

2000-02-21  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.h: Don't include <gtk/gtkbin.h>; do
	include <gtk/gtkwidget.h>.

2000-02-19  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.c, libathena/ntl-view-frame.h:
	Changed AthenaViewFrame to allow creation of `Athena::View'
	objects that have additional interfaces while sharing the actual
	control. This will allow, for instance, the creation of components
	that are both a `Athena::View' and a `Bonobo::Embeddable'. The
	basic changes are to require a `BonoboObject' with a
	`Bonobo::Control' interface at construction time.
	- Two creation functions are provided: `athena_view_frame_new',
	which takes a GtkWidget, creates a new control that contains that
	widget, and the constructs a AthenaViewFrame with that control,
	and `athena_view_frame_new_from_control', which creates a
	AthenaViewFrame that gets added as an additional interface to an
	existing control. 
	- In the course of doing this it became clear that it would be
	easier if AthenaViewFrame were changed to inherit from
	BonoboObject rather than GtkBin, so this was done; as a result,
	the athena_view_frame_get_bonobo_object call was removed, since
	the view_frame _is_ a bonobo object. However, a
	athena_view_frame_get_bonobo_control call was added as a
	convenience, to allow other code to avoid having to
	query_local_interface for the control object manually.
	* libathena/ntl-meta-view-frame.c,
	libathena/ntl-meta-view-frame.h,
	libathena/ntl-content-view-frame.c,
	libathena/ntl-content-view-frame.h: Analogous changes; mainly,
	added `athena_meta_view_frame_new',
	`athena_meta_view_frame_new_from_control',
	`athena_content_view_frame_new' and
	`athena_content_view_frame_new_from_control'.
	* components/help/hyperbola-nav-index.c,
	components/help/hyperbola-nav-tree.c,
	components/history/ntl-history-view.c,
	components/html/ntl-web-browser.c, components/notes/ntl-notes.c,
	components/websearch/ntl-web-search.c, src/ntl-app.c,
	src/file-manager/fm-directory-view.c: Fixed initialization and
	object creation functions to deal with the above API change.

	* libathena/ntl-view-frame.c, libathena/ntl-view-frame.h:
	Moved fields from object struct to separate private struct.

2000-02-18  Maciej Stachowiak  <mjs@eazel.com>

	* RENAMING: Suggest swapping the names AthenaView and
	AthenaViewFrame to better match the way Bonobo handles naming of
	mutual client-server pairs of this type. I'm not sure I agree, but
	better to be consistent than right.

2000-02-18  Darin Adler  <darin@eazel.com>

	* gnome-icon-container.c: (set_scroll_region):
	Set up the step_increment so the vertical and horizontal scroll
	bars will scroll when you click on the arrows.

2000-02-18  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(use_eazel_theme_icons_cb), (finish_adding_menu_item),
	(add_menu_item), (add_check_menu_item),
	(fm_directory_view_real_append_background_context_menu_items):
	Hooked up the menu item for using the Eazel Theme Icons so people
	can try out the icons that are tuned at different sizes.

	* libathena/athena-icon-factory.h:
	* libathena/athena-icon-factory.c,
	(athena_icon_factory_get), (athena_icon_factory_new),
	(athena_icon_factory_initialize),
	(athena_icon_factory_initialize_class),
	(athena_icon_factory_get_theme),
	(athena_icon_factory_set_theme): Added a signal "theme_changed"
	to the icon factory, and had to add a visible icon factory object
	so clients can connect to the signal.

	* libathena/gnome-icon-container.c,
	(gnome_icon_container_initialize),
	(gnome_icon_container_request_update_all): Update all icons when
	the theme changes.

	* docs/recommended-books.html: Added this since
	style-guide.html refers to it.

2000-02-18  John Sullivan  <sullivan@eazel.com>

	Made bookmarks (including in history list) for file system
	items display just the name of the file or directory instead
	of the entire path. Made history list appear in Go menu.
	Still need to muck with CORBA so that history metaview is
	getting the history list from Athena rather than 
	maintaining its own parallel copy.

	* libathena/athena-bookmark.h:
	(athena_bookmark_new_with_name): Renamed this function, which
	takes both a uri and a display name, from athena_bookmark_new.
	(athena_bookmark_new): New function, takes just a uri.
	
	* libathena/athena-bookmark.c:
	(athena_boookmark_new_with_name): Renamed.
	(athena_bookmark_new): New function, determines what initial
	name to use for a bookmark given its uri. Right now the only rule
	it knows is to use just the leaf file/directory name for file
	system uris. (Someday it should also know to get the page title
	for web uris.)

	* libathena/athena-bookmark.c,
	* components/history/ntl-history-view.c,
	* src/athena-bookmarklist.c,
	* src/athena-bookmarks-menu.c,
	* src/athena-bookmarks-window.c,
	* src/ntl-window-msgs.c:
	Updated callers of old athena_bookmark_new to either use new
	one-parameter version or to use athena_bookmark_new_with_name.
	
	* libathena/athena-directory.c: (athena_self_check_directory):
	Added new test that catches gnome-vfs bug I ran into where the name
	computed for uris with a trailing slash is "". Maciej plans to fix
	this in gnome-vfs; for now, make check catches it.

	* src/athena-signaller.c,
	* src/athena-signaller.h: New files for an object that manages
	athena-wide signals (not associated with a particular window, e.g.).
	The initial athena-wide signal is "history_list_changed".
	* src/Makefile.am: Build these two new files.
	
	* src/ntl-window.h:
	Removed window_signals from AthenaWindowClass struct, made it a static
	variable in the file to better hide it and match existing practice;
	Added go_menu and go_menu_separator_item widgets to the set maintained
	for each window. (This will have to change when I convert the menus
	to using BonoboUIHandler, but that's for another day.)
	* src/ntl-window.c:
	I added then later removed a signal to this class. In the process, I
	cleaned up some of the signal-handling details: Added an enum for
	signal names (currently only LAST_SIGNAL); moved array of signals to
	a static variable instead of field in Class struct; used LAST_SIGNAL
	instead of 0 in (athena_window_class_init).
	Added static history_list variable. Perhaps this and related functions
	belong in their own file.
	(athena_add_to_history_list): New function, updates global history
	list and emits "history_list_changed" signal.
	(clear_go_menu_history): New function, erase all the bookmark menu
	items from the Go menu.
	(activate_bookmark_in_menu_item): New function, go to the uri in the
	bookmark stored as user data in the given menu item.
	(history_list_changed_cb): New function, updates history section of 
	Go menu.
	(athena_window_init): Connect history_list_changed_cb to 
	"history_list_changed" signal of athena_signaller object.
	(athena_window_constructed): Stores away pointers to Go menu and
	separator between static & dynamic parts of this menu.	
	* src/ntl-window-private.h: (athena_add_to_history_list): Prototype
	for new function.
	* src/ntl-window-msgs.c: (athena_window_update_internals): Call
	athena_add_to_history_list with the new uri.

2000-02-17  Andy Hertzfeld <andy@eazel.com>

	Improved index panel command buttons. There's still a problem
	with the button box removal, though.
	
	* libathena/athena-mime-type.c:
	Changed how command strings are structured to a simpler scheme
	with no substitution.
	
	* src/ntl-index-panel.c:
	Improved the way commands are launched and fixed a bug in the
	button removal code, but there's still some problems.
	
2000-02-17  Andy Hertzfeld <andy@eazel.com>

	implemented command buttons for the index panel.
	
	* libathena/athena-mime-type.c, libathena/athena-mime-type.h:
	This is interim code for associating applications with mime-types; we
	will eventually keep this in OAF or GConf or at least in a file
	somewhere, but for now it's just scaffolding so we can work on the UI.
	* libathena/Makefile.am:
	Make athena-mime-type.c,h build.
	* stc/ntl-index-panel.c:
	Added code to call athena-mime-types to get relevant commands based
	on the mime-type, and then generate corresponding buttons in the index
	panel.
	
2000-02-17  Darin Adler  <darin@eazel.com>

	Hand tuned icons for multiple resolutions.
	So for example you can have an icon designed for the 96x96
	size, which is called i-directory-96.png, and it will be
	loaded instead of loading i-directory.png and scaling it.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_icon_name_for_regular_file),
	(add_size_to_icon_name), (athena_icon_factory_load_icon),
	(athena_icon_factory_create_image_for_item),
	(get_larger_icon_size), (get_smaller_icon_size),
	(get_next_icon_size_to_try), (load_specific_image),
	(load_image_for_scaling), (load_image_scale_if_necessary),
	(athena_icon_factory_mark_recently_used), (mark_recently_used),
	(athena_icon_factory_get_pixbuf_for_icon),
	(get_image_from_cache), (athena_icon_factory_scale): Changed the
	icon factory so it will look for icons of multiple resolutions and
	scale the nearest. Also made other improvements including sharing
	a single fallback icon instead of making multiple ones, using the
	"core-dump" icon for files named "core", adding some additional
	g_return_if_fail.

	* libathena/athena-icon-factory.c:
	(self_test_next_icon_size_to_try),
	(athena_self_check_icon_factory):
	* libathena/athena-lib-self-check-functions.h:
	The new code needed a bit of self-check code, so I added it.

	* libathena/athena-directory.c:
	(athena_directory_try_to_read_metafile),
	(athena_directory_construct_alternate_metafile_uri):
	Since "make check" was failing, I checked to see what was wrong.
	The code that was respecting the new "valid_fields" part of
	GnomeVFSFileInfo was looking at the wrong field (flags instead
	of valid_fields), which caused all metafile reading to fail.
	While debugging this, I noticed that the alternate metafiles
	had particularly bad long names, so I fixed that too.

	* libathena/athena-directory.c: (athena_file_ref):
	* libathena/athena-glib-extensions.c:
	(athena_strdup_strftime):
	* libathena/athena-string.c: (athena_string_to_int):
	Switched from using <limits.h> constants to the ones from
	<glib.h>. I have no idea why I made this change. All hail
	glib! C Standard be damned!

	* fm-directory-view.c:
	(use_eazel_theme_icons_cb), (add_menu_item),
	(fm_directory_view_real_append_background_context_menu_items):
	Started on a user interface to switch to the Eazel theme
	icons so you can see the multiple-resolution icons, but
	I wanted to check in, so I stopped before it was done.

	* src/athena-index-title.c:
	Reindented Andy's new code to match the emacs mode header.
	
	* configure.in:
	* icons/Makefile.am:
	* icons/eazel/.cvsignore:
	* icons/eazel/Makefile.am:
	* icons/eazel/i-directory-24.png:
	* icons/eazel/i-directory-36.png:
	* icons/eazel/i-directory-72.png:
	* icons/eazel/i-directory-96.png:
	* icons/eazel/i-directory.png:
	I needed some variable-size icons to demonstrate the multiple
	resolution support in the icon factory, so I added a few
	directory icons from gnomad. Since these don't match the other
	icons, I made them part of an "eazel" icons theme.
	
	* RENAMING: Some new name ideas.

2000-02-17  Jonathan Blandford  <jrb@redhat.com>

	* src/athena-index-title.c (athena_index_title_set_up_label):
	remember strlen (string) + 1 gives you the length necessary to
	copy a string, not strlen.

2000-02-16  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-title.c:
	made the title be above the additional info again; Elliot broke this
	when he added the checks for null file objects.  Fixed by putting
	the checks in the subroutines that do that real work.  Also, made
	the label center justified.
	
2000-02-16  Elliot Lee  <sopwith@redhat.com>

	* components/help/hyperbola-nav-tree.c: Show the stinking view. :)

2000-02-16  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-directory.c:
	Change empty folder string from "empty" to "0 items" at
	Andy's suggestion. It looked too much like part of the
	folder's name.

2000-02-16  Elliot Lee  <sopwith@redhat.com>

	* components/help/hyperbola-main.c: Fix the GOAD ID for help index.
	* components/help/hyperbola.goad: Add help index.
	* libathena/athena-directory.c: To avoid a warning in case
	athena_directory_new fails, and speed things up, remove
	unnecessary cast.
	* libathena/athena-icon-factory.c: Add sanity checks to avoid segfaults.
	* src/athena-index-title.c: Add sanity check, plus try to handle
	case where athena_file_get() returns NULL.
	* src/ntl-window.c, src/ntl-window-msgs.c: Notify the index panel
	of a URI change when we notify everyone else, instead of doing it when
	the user requests a change.

	* components/html/ntl-web-browser.c: Fixups for VFS usage.
	* components/help/converters/gnome-info2html2/main.c: Search info path for files.

	* components/help/hyperbola-nav-index.c: Fix warning.
	* components/history/ntl-history-view.c: Update for Bonobo UIH changes.
	* components/html/main.c: Update repo ID for Bonobo changes.
	* src/ntl-view-bonobo-control.c: Likewise
	* src/ntl-view-bonobo-subdoc.c: Likewise
	* src/ntl-view-athena.c: Likewise
	* src/ntl-view.c: Only check for death every other second.
	* components/html/ntl-web-browser: Debugging printfs for now

2000-02-16  Darin Adler  <darin@eazel.com>

	Added icon stretching and did some cleanups.
	Stretched icons aren't yet persistent (the scale factor is not
	saved in metadata), but that's not much more work.

	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.h:
	* libathena/gnome-icon-container.c: (icon_new), (icon_position),
	(icon_set_position), (icon_get_size), (icon_set_size),
	(icon_toggle_selected), (icon_select), (icon_set_selected),
	(button_press_event), (gnome_icon_container_begin_stretch),
	(start_stretching), (gnome_icon_container_stretch),
	(continue_stretching), (gnome_icon_container_end_stretch),
	(end_stretching), (button_release_event), (motion_notify_event),
	(handle_icon_button_press), (gnome_icon_container_clear),
	(request_update_one), (update_icon), (get_first_selected_icon),
	(gnome_icon_container_show_stretch_handles),
	(gnome_icon_container_has_stretch_handles),
	(gnome_icon_container_is_stretched),
	(gnome_icon_container_unstretch), (compute_stretch),
	(athena_self_check_compute_stretch),
	(athena_self_check_gnome_icon_container):
	* libathena/athena-icons-view-icon-item.h:
	* libathena/athena-icons-view-icon-item.c:
	(athena_icons_view_icon_item_draw),
	(athena_icons_view_icon_item_point),
	(athena_icons_view_icon_item_set_show_stretch_handles),
	(athena_icons_view_icon_item_get_hit_stretch_handle):
	* libathena/athena-lib-self-check-functions.h:
	Added machinery for stretching icons.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	(append_item_context_menu_items),
	(fm_directory_view_real_append_item_context_menu_items),
	(fm_directory_view_initialize_class), (create_item_context_menu):
	Added machinery for views to have view-specific menu items for
	icons as well as for the window as a whole.

	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class),
	(fm_directory_view_icons_append_item_context_menu_items),
	(show_stretch_handles_cb), (unstretch_item_cb):
	Added menu items for stretching icons.

	* libathena/gnome-icon-container.c: (start_rubberbanding):
	Fixed bug that would result in two rubberband timeouts at
	once if you did rubberbanding quickly.

	* components/notes/.cvsignore: Andy's new component needs a
	.cvsignore file for its generated pieces.

	* libathena/athena-directory.c:
	(athena_directory_try_to_read_metafile),
	(athena_directory_read_metafile):
	Simplified logic in metafile-reading functions and fixed a bug
	where the vfs handle would be left open if certain categories
	of errors occurred.

	* libathena/athena-gtk-extensions.h:
	Added a missing gtk_marshal function.

	* libathena/athena-icon-factory.h:
	* libathena/athena-icon-factory.c:
	(athena_icon_size_for_zoom_level),
	(athena_get_icon_size_for_zoom_level),
	(athena_icon_factory_get_pixbuf_for_file),
	(athena_icon_factory_get_pixmap_and_mask_for_file):
	* src/athena-index-title.c: (athena_index_title_set_up_icon):
	* src/athena-zoom-control.c: (set_zoom_level):
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_bump_zoom_level), (install_icon):
	Made some API improvements for the icon factory. Added a missing
	get_ to the name athena_get_icon_size_for_zoom_level and added
	convenience functions for the most common uses of the factory.

	* libathena/ntl-content-view-frame.c:
	* libathena/ntl-meta-view-frame.c:
	* libathena/ntl-view-frame.c:
	Weaned all the files in libathena itself from using the
	libathena.h include file. They instead include the parts that
	they need. Also added some missing <config.h> includes.

2000-02-15  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	Removed test code that created extra tabs on right-click.
	* src/ntl-index-title.c:
	Added logic to break the title into two lines so it can use a larger font,
	if it can find an appropriate breaking point.
	
2000-02-15  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window.c (athena_window_init): gtk_quit_add_destroy
	the AthenaWindow at level 1, so that we can clean up CORBA
	objects and such when we Exit rather than Closing the last window.

	* src/ntl-index-panel.c: sink and ref the notebook and unref in
	the destructor, so it gets destroyed even if it never ends up
	getting added to the index panel.

	* src/ntl-view-athena.c: Don't ref the Control interface we just
	QI'd; query_interface implicitly refs.
	
2000-02-15  Elliot Lee  <sopwith@redhat.com>

	* libathena/athena-directory.c: Pay attention to the
	GnomeVFSFileInfo flags to determine whether to read the metafile.

	* components/html/ntl-web-browser.c: Try to fall back to using
	gnome-vfs if we can't load it via libwww. Sort of bad hack, but it
	just might work.

2000-02-15  John Sullivan <sullivan@eazel.com>

	History metaview now lists all locations visited in this
	session, from most recent (top) to longest ago, with no
	duplicates.

	* components/history/ntl-history-view.c:
	Removed last_row field from HistoryView struct. This was used
	to keep track of previously-visited location, but since the most
	recently-visited location is always first now, this is always 0.
	(get_bookmark_from_row): New helper function to extract the bookmark
	stored in the row data.
	(get_uri_from_row): Use get_bookmark_from_row.
	(hyperbola_navigation_history_notify_location_change):
	Remove existing row for this location, if any, and then prepend
	new row. Replaces back/forward/reload logic that wasn't quite right
	anyway.
	(hyperbola_navigation_history_select_row): Move gtk_clist_freeze
	after early bail-out; change bail-out to just check for row 0;
	remove setting of last_row; add comment about dragging bug.
	(menu_setup): Change menu item from "Do nothing" to 
	"Do nothing (menu merge test)" for clarity.
	(make_obj) Remove initialization for last_row.

2000-02-15  John Sullivan <sullivan@eazel.com>

	Added small icons to history metaview.

	* components/history/ntl-history-view.c:
	Added #defines for columns and column count.
	(get_uri_from_row): New function, abstracts getting the URI from
	a row in the history list.
	(install_icon): New function, handles getting the right icon and
	putting it into the right cell.
	(hyperbola_navigation_history_notify_location_change):
	Deployed column #defines; fixed check-off-end-of-list bug;
	use get_uri_from_row; store AthenaBookmark as row data;
	use install_icon.
	(hyperbola_navigation_history_select_row): use get_uri_from_row.
	(make_obj): Turn off titles for clist, include icon column;
	set row height to account for icons
	(main): add gnome_vfs_init (needed by athena_icon_factory).

2000-02-15  Ramiro Estrugo <ramiro@eazel.com>

	Added styleguide.

	* docs/style-guide.html: New file

2000-02-15  Ramiro Estrugo <ramiro@eazel.com>

	Added displacement offset for popup menus, so that the first
	item doesn't get triggered right away.

	* libathena/athena-gtk-extensions.c:
	* libathena/athena-gtk-extensions.h: Added x,y displacement
	args to athena_pop_up_context_menu.

	* src/ntl-window.c: Updated for new api

	* src/file-manager/fm-directory-view.c: Updated for new api

2000-02-15  Ramiro Estrugo <ramiro@eazel.com>

	Added modules blurb to HACKING file.

	* HACKING: Added modules blurb.

2000-02-15  John Sullivan <sullivan@eazel.com>

	Moved AthenaBookmark to libathena, in preparation for
	using it in the History metaview.

	* src/athena-bookmark.c: Removed file.
	* src/athena-bookmark.h: Removed file.
	* src/Makefile.am: Took out these two files.
	
	* libathena/athena-bookmark.c: Added file.
	* libathena/athena-bookmark.h: Added file.
	* libathena/Makefile.am:  Build the two new files.

	* src/athena-bookmarklist.h: Updated #include

2000-02-15  John Sullivan <sullivan@eazel.com>

	Right-click menus from Back and Forward buttons now include
	small icons. To support this, window back/forward lists now
	store AthenaBookmarks.

	* src/athena-bookmarks-menu.c:
	(bookmark_menu_item_new): Removed (moved to athena-bookmark.c/h,
	and renamed athena_bookmark_menu_item_new).
	(create_pixmap_widget_for_bookmark): Removed (moved to athena-bookmark.c/h)
	(athena_bookmarks_menu_repopulate): updated caller to match name change.

	* src/athena-bookmark.h:
	(athena_bookmark_menu_item_new): New function.
	* src/athena-bookmark.c:
	(athena_bookmark_menu_item_new): New function, moved over from
	athena-bookmarks-menu.c
	(create_pixmap_widget_for_bookmark): New function, moved over from
	athena-bookmarks-menu.c

	* src/ntl-window.h:
	Replaced uris_prev and uris_next with back_list and forward_list.
	Added comment explaining that the data is now AthenaBookmark * and
	not just char *.
	* src/ntl-window-msgs.c:
	(athena_window_update_internals): updated to use back_list and 
	forward_list.
	* src/ntl-window.c:
	(activate_back_or_forward_menu_item), (athena_window_destroy): 
	updated to use back_list and forward_list
	(create_back_or_forward_menu): updated to use back_list and
	forward_list; use athena_bookmark_menu_item_new to get icons.
	(athena_window_back_or_forward): New function, consolidates
	repeated code from athena_window_back and athena_window_forward.
	(athena_window_back), (athena_window_fwd): Now call
	athena_window_back_or_forward.

2000-02-15  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-tabs/c:
	improved tab-resizing code by not the last one if it's invisible,
	also, invoked resize code after a tab is selected
	
2000-02-14  Andy Hertzfeld <andy@eazel.com>

	* components/notes/ntl-notes.c:
	fixed problems with notes component by initializing gnome-vfs, etc.
	changed metadata key to "ANNOTATION" to keep them separate from panel notes
	* libathena/athena-metadata.h:
	defined "ANNOTATION" metadata type

2000-02-14  Andy Hertzfeld <andy@eazel.com>

	first cut at annotation metaview
	
	* components/notes/Makefile.am:
	automake file for notes component
	* components/notes/ntl-notes.c:
	implementation of annotation metaview
	* components/notes/ntl-notes.goad:
	activation file for notes component
	* components/Makefile.am:
	added notes folder
	* configure.in:
	added component/notes/Makefile
	* src/ntl-prefs.c:
	added annotation metaview to prefs
	
2000-02-14  John Sullivan <sullivan@eazel.com>

	Back and Forward buttons now sprout right-click menus.
	Still work to do to put small icons in them, and to 
	make them keep the back/forward chain intact.

	* libathena/athena-gtk-extensions.h:
	* libathena/athena-gtk-extensions.c:
	(athena_pop_up_context_menu): New helper function used
	when displaying right-click context menus.

	* src/file-manager/fm-directory-view.c:
	(popup_context_menu): Removed (moved & renamed to
	athena_pop_up_context_menu).
	(fm_directory_view_popup_item_context_menu),
	(fm_directory_view_popup_background_context_menu): 
	Now use athena_pop_up_context_menu.
	
	* src/ntl-window.c:
	(activate_back_or_forward_menu_item): New function, go to the
	appropriate location.
	(activate_back_menu_item_cb): New function, call
	activate_back_or_forward_menu_item.
	(activate_forward_menu_item_cb): New function, call
	activate_back_or_forward_menu_item.
	(create_back_or_forward_menu): New function, create and populate a
	menu from the back list or the forward list.
	(back_or_forward_button_clicked_cb): New function, pop up the result
	of create_back_or_forward_menu.
	(athena_window_constructed): Wire up context menu code to
	back and forward buttons.

2000-02-14  Darin Adler  <darin@eazel.com>

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_load_icon):
	Just noticed that Elliot checked in a gdk-pixbuf fix, so I can
	roll the cast back out.
	
2000-02-14  Darin Adler  <darin@eazel.com>

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_load_icon):
	Need a cast in here so people can build while I wait for the OK
	from Federico to check in my const change to gdk-pixbuf.
	
2000-02-14  Elliot Lee  <sopwith@redhat.com>
	
	* libathena/athena-icon-factory.c: Use GPOINTER_TO_UINT()
	instead of a manual cast.

2000-02-14  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c: (athena_directory_read_metafile):
	Handle the case where you try to make a AthenaDirectory object for
	something that's a file.

	* libathena/athena-directory.c: (athena_directory_get_metadata):
	Handle NULL directory objects better.

	* src/ntl-index-panel.c:
	Changed handling of NULL directory case so it will display something
	instead of doing early exits that leave the display as-is.

	* src/athena-index-title.h:
	* src/athena-index-title.c:
	Reformatted, some minor cleanups.

2000-02-14  Darin Adler  <darin@eazel.com>

	* libathena/athena-icon-factory.c:
	Redid the icon factory to fix a few things:
	
	- Replaced the existing non-working count-based LRU algorithm with
	  one that works (uses a linked list).
	- Keep resized icons in the cache.
	- Hand out a single AthenaScalableIcon when multiple callers ask
	  for the same icon instead of a new one each time.
	- Fixed one bug where pixbuf's would get an extra ref and never get
	  freed once they are no longer used.

	* libathena/athena-metadata.h:
	* src/athena-index-title.c (athena_index_title_set_up_info):
	* libathena/athena-icon-factory.c
	(athena_icon_factory_get_icon_for_file):
	Added keys for the two pieces of metadata Andy just added.

	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c: (scroll),
	(make_icon_visible), (set_scroll_region): Fixed the code that
	resizes the canvas as items are added and removed to properly
	handle the case where the canvas extends into negative-coordinate
	territory. This included removing the width and height that were
	stored in the private structure.

	* libathena/athena-directory.c: (athena_directory_get): Tiny
	formatting tweak.

2000-02-14  John Sullivan <sullivan@eazel.com>

	Fixed index title bugs that showed up when visiting http:// url.
	It's still the case that the wrong text appears; I just made it
	not drop into the debugger.

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_get_icon_for_file): Made it return NULL
	for a NULL file. Could have made this a return_val_if_fail
	instead, wasn't sure which was better in this case.

	* src/athena-index-title.c:
	(athena_index_title_set_up_icon): Made it bail out early if
	AthenaFile parameter is NULL.
	(athena_index_title_set_up_info): Made it bail out early if
	AthenaFile parameter is NULL.
	(athena_index_title_set_uri): Made it unref file_object only
	if non-NULL.


	Experimental zoom behavior change: Now it resets the default
	zoom level every time the zoom level is set. This means that
	zoom level changes stick across locations, until you revisit
	a location that had its zoom level set explicitly earlier.

	* src/file-manager/fm-directory-view-icons.c:
	Added default_zoom_level to Details struct.
	(fm_directory_view_icons_initialize): Initialize default_zoom_level
	to ATHENA_ZOOM_LEVEL_STANDARD.
	(fm_directory_view_icons_begin_loading),
	(fm_directory_view_icons_get_zoom_level): Pass default_zoom_level
	to metadata calls.
	(fm_directory_view_icons_set_zoom_level): Pass default_zoom_level
	to metadata call, also reset default_zoom_level to new level.
	
	* src/file-manager/fm-directory-view-list.c:
	Added default_zoom_level to Details struct.
	(fm_directory_view_icons_initialize): Initialize default_zoom_level
	to ATHENA_ZOOM_LEVEL_SMALLER.
	(fm_directory_view_list_begin_loading): Pass default_zoom_level
	to metadata call.
	(fm_directory_view_list_set_zoom_level): Pass default_zoom_level
	to metadata call, also reset default_zoom_level to new level.
	
2000-02-14  Elliot Lee  <sopwith@redhat.com>

	* components/html/ntl-web-browser.c: Send status strings for now,
	until athena knows how to generate them from selection info.

2000-02-14  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-tabs.c:
	Fixed warning about measuring NULL string that Elliot pointed out
	
2000-02-14  Elliot Lee  <sopwith@redhat.com>
	
	* src/ntl-window-msgs.c: Revert.
	* components/help/hyperbola-nav-index.c: More work.

2000-02-13  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icon-factory.c:
	Made it use custom image specified in meta-data, if present.
	also, upped the size used for displaying images as themselves
	without thumbnails, from 10K to 16K.
	* src/athena-index-title.c:
	Display "notes" from metadata in index panel if present.
	* src/ntl-index-panel.c:
	Fiddled with drag and drop code trying to get it to accept
	image files, not yet working
	
2000-02-13  Andy Hertzfeld <andy@eazel.com>

	Made athena-index-title widget to hold the title information
	for the index panel.
	
	* src/ntl-index-panel.c:
	allocated index-title to display info, removed old code that did it
	* src/Makefile.am:
	added athena-index-title.c and athena-index-title.h
	* src/athena-index-title.c,h:
	moved code from index-panel here to show icon and title
	used athena_file and icon_factory to get the icon the real way
	added more info besides the name (size, type and date)
	
2000-02-12  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-tabs.c:
	made the tabs layout be more dynamic, laying out as many
	tabs as fit in a row instead of a maximum of two. Tightened
	up the layout and improved the drawing, too.
	* src/ntl-index-panel.c:
	Right clicking on the tabs adds extra ones for testing purposes.
	
2000-02-11  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	made it no longer use a drag shadow rectangle when dragging a single item
	
2000-02-11  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-window.c:
	removed Elliot's weird hack where the index panel size would vary
	according to the first letter of the username; replaced it with code
	that special-cases the size for "sopwith".
	
2000-02-11  Andy Hertzfeld <andy@eazel.com>

	Finally enabled the new metaview UI
	
	* src/athena-index-tabs.c,h:
	made clicking on the title tab deactivate the current metaview
	removed the panel_width field since it didn't work for the
	resizable panel, instead, look at the parents width on the fly
	added code to test lots of tabs and improved the drawing in that case
	before removing the test code.
	* src/ntl-index-panel.c:
	removed the USE_NEW_TABS boolean; we always use them now
	
2000-02-11  John Sullivan <sullivan@eazel.com>

	Made right-clicking on an item select just that one item
	before popping up context menu. This makes it clear what
	the context menu is operating on.

	* libathena/gnome-icon-container.c:
	(handle_icon_button_press): Select just the clicked icon
	before sending CONTEXT_CLICK_ICON signal.
	* libathena/gtkflist.c:
	(gtk_flist_button_press): Select just the clicked row
	before sending CONTEXT_CLICK_ROW signal.

	Fixed bug where "Open" and "Open in New Window" had
	unexpected results in list view.

	* src/file-manager/fm-directory-view-list.c:
	(context_click_row_cb): Fixed bug where this routine was passing
	the wrong item to the context menu.

2000-02-11  Elliot Lee  <sopwith@redhat.com>
	* src/ntl-window.c: If an empty string is passed for a status string, just unset it all.
	* src/ntl-window-msgs.c: If we get a selection of size 1, indicate it on the status bar.
	  (Triggers a athena_window_set_status bug, will fix later.)

2000-02-11  John Sullivan <sullivan@eazel.com>

	* src/ntl-window.h:
	Return of the stored widgets for toolbar buttons that need
	sensitivity changes, only this time do them all and add
	the new menu items too.

	* src/ntl-window.c:
	(athena_window_constructed): Save away pointers to all the
	widgets that need accessing later.
	(athena_window_allow_back), (athena_window_allow_forward),
	(athena_window_allow_up), (athena_window_allow_reload),
	(athena_window_allow_stop): Use stored widget pointers rather
	than GnomeUIInfo arrays to access the buttons and menu items.
	Getting the widget from the array only worked until another
	window was created.

	* libathena/athena-directory.c: (get_directory_item_count_hack):
	Subtract 2 from item count before returning, to account for . and ..

2000-02-11  John Sullivan <sullivan@eazel.com>

	Sensitized "Open" context menu item, and added
	"Open in New Window". Extended the framework as
	required to support opening into a new window.

	* src/ntl-types.h: Added use_new_window gboolean
	to AthenaNavigationInfo struct. (Athena_
	NavigationRequestInfo already had a concept of using
	a new window, but it was never passed on to the
	window-managing code).
	
	* src/ntl-uri-map.c: (athena_navinfo_new): Set the
	use_new_window field of the new object based on the
	new_window_default/suggested/enforced settings from
	the NavigationRequestInfo.
	
	* src/ntl-window-msgs.c: (athena_window_change_location_2):
	Create a new window if passed-in AthenaNavigationInfo says so.
	
	* src/file-manager/fm-directory-view.h:
	(fm_directory_view_activate_entry): Added gboolean 
	request_new_window parameter. 

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_activate_entry): Set new_window_suggested
	of NavigationRequestInfo based on value of new
	request_new_window parameter.
	(open_cb): New function, calls fm_directory_view_activate_entry
	with request_new_window FALSE.
	(open_in_new_window_cb): New function, calls 
	fm_directory_view_activate_entry with request_new_window TRUE.
	(append_item_context_menu_items): Sensitize "Open" item, add
	"Open in New Window" item, wire 'em up.
	
	* src/file-manager/fm-directory-view-icons.c:
	(icon_container_activate_cb): pass FALSE for request_new_window.
	
	* src/file-manager/fm-directory-view-list.c:
	(flist_activate_cb): pass FALSE for request_new_window.


	Added beginnings of Go menu, and cleaned up some
	cruft found in the process. Holler now if you think
	the Go menu is a bad idea.

	* src/ntl-window.h:
	Removed btn_back and btn_fwd fields, as they were being
	initialized and then ignored.

	* src/ntl-window.c:
	Added go_menu_info array and filled it with Back, Forward,
	Up, and Home, all with keyboard equivalents. (Later this menu
	will also contain dynamic history list.)
	Added #defines for toolbar button indices.
	(athena_window_constructed): Removed mentions of btn_back 
	and btn_fwd; moved athena_window_allow_stop to after the
	menus are set up; added athena_window_allow_back and
	athena_window_allow_forward calls.
	(athena_window_allow_back): Use #define for Back button index
	instead of hardcoded magic number; set Back menu item sensitivity.
	(athena_window_allow_forward): Use #define for Forward button index
	instead of hardcoded magic number; set Forward menu item sensitivity.
	(athena_window_allow_up): Use #define for Up button index
	instead of hardcoded magic number; set Up menu item sensitivity.
	(athena_window_allow_reload): Use #define for Reload button index
	instead of hardcoded magic number (which was incorrect).
	(athena_window_allow_stop): Use #define for Stop button index
	instead of hardcoded magic number.

2000-02-10  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	added code to hide metaview when the title tab is clicked upon
	* src/athena-index-tabs.c:
	made hit-testing work for the title tab
	* src/ntl-window.c:
	defaulted hpaned position to proper size

2000-02-10  Andy Hertzfeld <andy@eazel.com>

	* src/athena-index-tabs.c,h:
	added visibility property to tabs, improved drawing and layout,
	added title mode for title tab on top
	* src/ntl-index-panel.c
	made it allocate title tab and use it
	made clicking on tabs activate the proper view
	
2000-02-10  John Sullivan <sullivan@eazel.com>

	* libathena/athena-icons-view-icon-item.c:
	(draw_or_measure_text): Removed : from the set of breakable
	characters, so times won't get broken in two.

2000-02-10  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window.c: Set hpaned position for Darin's sanity.
	* src/ntl-window-state.c: Handle view loading failure properly.

2000-02-10  Darin Adler  <darin@eazel.com>

	* ntl-window-msgs.c: (athena_window_has_really_changed):
	Check GTK_OBJECT_DESTROYED to handle the case of a view
	that self-destructs.

2000-02-10  Darin Adler  <darin@eazel.com>

	* athena-index-tabs.c: (draw_or_hit_test_all_tabs):
	Fix so it doesn't try to create a GC when hit testing
	a tab. This gets rid of critical errors people were
	running into.

2000-02-10  John Sullivan <sullivan@eazel.com>

	* libathena/athena-directory.c:
	(athena_file_get_owner_as_string): New function
	(athena_file_get_group_as_string): New function
	(athena_file_get_permissions_as_string): New function
	(athena_file_get_string_attribute): Now supports
	"owner", "group", and "permissions" string attributes.

	* src/file-manager/fm-icon-text-window.c:
	Now includes "owner", "group", and "permissions" among the
	choices to display under an icon.

2000-02-10  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-main.c: Add "Bonobo" to list of log domains to catch.

	* src/ntl-window.c: Do proper UIH setup for the menubar and
	toolbar. Also switch to using the hpaned temporarily, to be able
	to see/manipulate all the meta views.

	* components/history/ntl-history-view.c: Implement client side of
	menu merging properly.

2000-02-10  John Sullivan <sullivan@eazel.com>

	Used directory item count hack when comparing by size, so
	the item counts are sorted correctly. This is horribly
	inefficient, but isn't actually horribly slow in most cases.
	This will be fixed when we switch the item count calculation
	to use the deferred-result architecture.

	* libathena/athena-directory.c:
	(athena_file_compare_by_size_with_directories): New function,
	uses item count hack, as well as putting directories before 
	non-directories.
	(athena_file_compare_for_sort_internal): Uses
	athena_file_compare_by_size_with_directories to handle
	directories, falls through to GnomeVFS rules for other cases.

2000-02-10  John Sullivan <sullivan@eazel.com>

	Put in quick hack for showing directory item counts under icons
	since "--" looks so awful. It's a hack because it blocks the
	display until all directories inside this one have been
	iterated. We'll change that after we've got a deferred-result
	architecture in AthenaDirectory.

	* libathena/athena-directory.c:
	(get_directory_item_count_hack): New function to count items
	in a directory. Will go away with time.
	(athena_file_get_size_as_string): uses new hack instead of
	returning "--" for directory sizes.

2000-02-09  Andy Hertzfeld <andy@eazel.com>

	Completed hit-testing and activation for the index tabs.  They're
	usable now, but I'm leaving them off until they're more refined.

	* src/athena-index-tabs.c:
	completed hit-testing
	* src/ntl-index-panel.c:
	activate the appropriate metaview when the corresponding tab is clicked

2000-02-09  Andy Hertzfeld <andy@eazel.com>

	More work on the index panel, still conditionally disabled;
	change USE_NEW_TABS to a non-zero value if you want to check it out.
	
	* src/athena-index-tabs.c,h:
	improved positioning and started on hit-testing
	* src/ntl-index-panel.c:
	made the notebook hidden by default and added hit-testing infrastructure
	* src/athena-zoom-control.c:
	fixed incorrect comment
	
2000-02-09  Darin Adler  <darin@eazel.com>

	* fm-directory-view-icons.c:
	(fm_directory_view_icons_get_full_icon_text_attribute_names):
	(fm_directory_view_icons_set_full_icon_text_attribute_names):
	After talking to John, removed the asserts from both of these
	routines. Later, he'll figure out whether this needs refinement,
	but for now we just want to avoid the abort on startup!

2000-02-09  Darin Adler  <darin@eazel.com>

	Reworked the canvas item class used by the icon
	container. Straightened out the use of various coordinate systems
	and bounds calculations and removed much unused code inherited
	from the GdkPixbuf canvas item class that Andy cloned our code
	from. Changed the class so it doesn't scale icons any more -- we
	leave that to the icon factory so the scaled icons can be cached.

	* libathena/gnome-icon-container-dnd.c:
	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c:
	* libathena/athena-icons-view-icon-item.c:
	* libathena/athena-icons-view-icon-item.h:
	Made extensive changes to the icon item class, including getting
	rid of the "x", "y", "width", and "height" attributes, adding a
	new "font" attribute, changing the "label" attribute name to "text"
	to be more consistent with other canvas items, simplifying the
	update logic for now (we can recomplicate it later if need be),
	changing the pixbuf to have a fixed size in pixels instead of being
	scaled with the pixels_per_unit and changing the pixbuf when we change
	zoom levels, and other misc. cleanup.
	(athena_icons_view_icon_item_get_arg):
	Fixed bug for "label" which would return a non-strdup'd	piece of text.
	(draw_or_measure_text_box):
	Fixed bug where width of the selection box would be based on the
	length of the last line of text, not the widest, and extra GCs would
	be created for each line of text.

	* libathena/athena-icons-controller.h:
	* libathena/athena-icons-controller.c:
	(athena_icons_controller_get_icon_image):
	* src/file-manager/fm-icons-controller.c:
	(fm_icons_controller_get_icon_image):
	Changed the interface so that the icons controller specifies the icon
	as a AthenaScalableIcon instead of a GdkPixbuf. This lets the icon
	container get the appropriate icon for size as it zooms.

	* libathena/gdk-extensions.h:
	* libathena/gdk-extensions.c:
	(athena_gdk_font_equal):
	Added a version of gdk_font_equal that works with NULL for the font.
	Maybe we need a naming scheme for these NULL-tolerant variations on
	basic calls.

	* src/ntl-uri-map.c: (athena_navinfo_free):
	* src/ntl-window-msgs.c: (athena_window_change_location_2):
	Fixed a NULL dereference that would happen when @navi was NULL.
	
	* libathena/athena-directory.c:
	(athena_directory_try_to_read_metafile):
	Fixed error handling for case when gnome_vfs_read fails.  Fixed
	error handling for case where metafile_info.size won't fit into a
	size_t.  Switched back to g_malloc instead of g_alloca, since the
	size of a file might be too big for the stack. In the long run, we
	will feed the file data directly to the XML code, so this is a bit
	temporary.  Removed the assert that Elliot added to help track
	down the giant files sizes coming from gnome-vfs; the failure in
	g_malloc will be easy to debug, unlike the failure in
	g_alloca. (The assert was added without a ChangeLog entry.)

2000-02-09  John Sullivan <sullivan@eazel.com>

	Fixed bug Andy found with icon-text window.

	* src/file-manager/fm-icon-text-window.c:
	* src/file-manager/fm-icon-text-window.h:
	Removed icon_view static variable.
	(changed_attributes_option_menu_cb): Removed assert that icon_view
	is valid, since there's only a global setting; pass NULL as parameter
	to fm_directory_view_icons_set_full_icon_text_attribute_names.
	(fm_icon_text_window_set_view): Eliminated, since there's only a
	global setting.

	* src/file-manager/fm-directory-view-icons.c:
	(customize_icon_text_cb): Removed call to fm_icon_text_window_set_view.
	(fm_directory_view_icons_get_full_icon_text_attribute_names),
	(fm_directory_view_icons_set_full_icon_text_attribute_names):
	Clarified comments, and added assertion that no particular
	viewer was specified.

2000-02-09  Elliot Lee  <sopwith@redhat.com>

	* libathena/bonobo-stream-vfs.[ch]: Implement truncate.
	* src/athena-zoom-control.c: Use GINT_TO_POINTER and GPOINTER_TO_INT macros
	for "proper" int <-> pointer conversion.

2000-02-09  John Sullivan <sullivan@eazel.com>

	* src/file-manager/fm-icon-text-window.c:
	(get_attribute_index_from_option_menu): New helper function.
	(ensure_unique_attributes): New function, makes sure that no
	two option menus in this window have same value.
	(is_in_chosen_values): New function, used by ensure_unique_attributes.
	(get_chosen_attribute_name): Use get_attribute_index_from_option_menu.
	(changed_attributes_option_menu_cb): Reworked to use array of
	option menus; also calls ensure_unique_attributes so the user can't
	set more than one of the menus to the same value (new one wins, old
	one gets set to first unused value).
	(create_attributes_option_menu): Now takes menu_number parameter,
	which is passed to item-activation callback.
	(create_icon_text_window): Reworked to use array of option menus;
	renamed all glade-invented variable names to sensible ones.
	
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_append_background_context_menu_items):
	Added a separator before "Customize Icon Text...", since by acting
	globally rather than on the viewed directory it's conceptually in a
	different class than the other menu items. It may move out of this
	menu entirely someday.
	
	* libathena/athena-directory.c:
	(athena_file_get_size_as_string): Back to using "--" for directories,
	so there's no blank line. We want to use item counts here, but I've
	postponed implementing that feature.
	(athena_file_get_type_as_string): Made files with no mime type
	return "unknown type" at Andy's suggestion.
	(athena_file_compare_by_type): New function, needed to compare
	athena-generated type strings (can't use GnomeVFS comparison function).

2000-02-09  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-view-bonobo-control.c: In notify_location_change, send
	progress back (because the Bonobo control, which might be the
	content view, can't do it).

	* src/ntl-view-bonobo-subdoc.c: As above, plus don't use
	PersistFile interface, plus use bonobo-stream-vfs instead of
	bonobo-stream-fs.

	* src/ntl-uri-map.c: If no content type is found, default to text/plain.

	* libathena/bonobo-stream-vfs.[ch], libathena/Makefile.am:
	Initial implementation of bonobo streams in terms of Gnome VFS.

2000-02-09  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-meta-view.c: To avoid a bug which caused parts of the
	destroy function calling chain to be skipped, remove the destroy
	function. In the process, switch over to using the boilerplate
	generation macros from athena-gtk-macros.h

2000-02-08  Andy Hertzfeld <andy@eazel.com>

	More work on the index tabs; they're drawing properly now but they're
	still not ready to be left hooked up.
	
	* src/athena-index-tabs.c:
	made the index tabs draw properly
	* src/athena-index-panel.c:
	install the new index tabs if the USE_NEW_TABS define is set; it's
	not by default
	* icons/tableft.png, icons/tabright.png:
	added alpha channel to edge pixmaps so they can draw non-rectangular
	
2000-02-08  John Sullivan <sullivan@eazel.com>

	Tweaked the appearance of the icon-text choosing window.
	Still not quite laid out right, but it's closer.

	* src/file-manager/fm-icon-text-window.c:
	(create_attributes_option_menu): Center the text in the menu items.
	(create_icon_text_window): Change expand parameter for vertical
	box so option menus are only as wide as they need to be. 

2000-02-08  John Sullivan <sullivan@eazel.com>

	Completed first cut at icon-text-choosing UI.
	Choose "Customize Icon Text..." from context menu in icon view to try.
	Still doesn't save global setting across sessions; awaiting
	more of a Preferences framework for that.

	* src/file-manager/fm-signaller.h: New file.
	* src/file-manager/fm-signaller.c: New file, manages object that acts
	as a central place for file manager objects to register with and
	broadcast signals, without having to wire specific objects together.
	* src/file-manager/Makefile.am: Added these two new files to the build.

	* src/file-manager/fm-directory-view-icons.h:
	(fm_directory_view_icons_set_full_icon_text_attribute_names): Removed the
	set_default parameter; for now at least, the text beneath icons is only
	changeable on a global basis.
	* src/file-manager/fm-directory-view-icons.c:
	(icon_text_changed_cb): New function, tells GnomeIconContainer to
	update all its icons.
	(fm_directory_view_icons_initialize): Connect with FMSignaller's
	"icon_text_changed" signal, so all windows will be updated.
	(fm_directory_view_icons_set_full_icon_text_attribute_names):
	Removed the set_default parameter; also tell FMSignaller to emit
	"icon_text_changed".

	* src/file-manager/fm-icon-text-window.c:
	Completely reworked. Window used to contain three radio buttons for
	pre-defined orderings of size/type/date_modified. Now window contains
	three option menus, each with all available text attributes (except
	name, which is hardwired to always go first). Selecting from any of
	the option menus instantly updates all directory views.
	
	* libathena/athena-directory.c:
	defined private typedef enum AthenaDateType.
	(athena_file_get_date_as_string): Added AthenaDateType parameter,
	which chooses between the three available file dates (modified, changed,
	accessed).
	(athena_file_get_string_attribute): Now handles all three date types.

2000-02-08  John Sullivan <sullivan@eazel.com>

	* configure.in: turned -Werror back on. It had been turned off a
	few days ago, presumably accidentally.
	* src/athena-index-tabs.c: (draw_one_tab): #if-0'ed this
	currently unused function out since -Werror doesn't like unused functions.

2000-02-08  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window-msgs.c: Don't segfault if an error occurs while loading the start page.

2000-02-07  John Sullivan <sullivan@eazel.com>

	Switching which info appears in icon labels is now demoable.
	Choose "Customize Icon Text..." from context menu in icon view to try.
	Next I'll make a decent UI for it.

	* libathena/gnome-icon-container.h:
	(gnome_icon_container_request_update_all): New function.
	* libathena/gnome-icon-container.c:
	(gnome_icon_container_request_update_all): New function, tells
	the container to get fresh text & image for each icon.
	(request_update_one): Renamed, was synch_icon_with_controller
	(gnome_icon_container_set_zoom_level): Extracted code from which
	to form request_update_all, which this now calls.
	
	* src/file-manager/fm-directory-view.h:
	(append_background_context_menu_items): New signal, lets subclasses
	append (or otherwise modify) items to background context menu.
	* src/file-manager/fm-directory-view.c:
	Add enum entry for APPEND_BACKGROUND_CONTEXT_MENU_ITEMS
	(fm_directory_view_initialize_class): Create new signal, and assign
	function pointer.
	(fm_directory_view_real_append_background_context_menu_items): Renamed
	from append_background_items, now that it's a default signal handler.
	(append_item_context_menu_items): New function, broke code out from
	create_item_context_menu. This may have an associated signal also someday,
	but not yet.
	(fm_directory_view_append_background_context_menu_items): New function,
	emits "append_background_context_menu_items" signal.
	(create_item_context_menu): Broke out append_item_context_menu_items, and
	now calls fm_directory_view_append_background_context_menu_items.
	(create_background_context_menu): Now calls
	fm_directory_view_append_background_context_menu_items.
	
	* src/file-manager/fm-directory-view-icons.h:
	(fm_directory_view_icons_set_full_icon_text_attribute_names),
	(fm_directory_view_icons_get_full_icon_text_attrubute_names): New functions.
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class): Replaces function
	pointer for append_background_context_menu_items.
	(customize_icon_text_cb): New function, shows icon-text-customizing window.
	(fm_directory_view_icons_append_background_context_menu_items): New
	function, appends a "Customize Icon Text..." item to context menu, which
	when selected calls customize_icon_text_cb.
	(fm_directory_view_icons_set_full_icon_text_attribute_names): New function,
	sets a new order in which to display icon text, and forces an update.
	(fm_directory_view_icons_get_full_icon_text_attrubute_names): New function,
	returns the order in which to display icon text.
	(fm_directory_view_icons_get_icon_text_attribute_names): Reworked to
	return a substring of the full string, based on zoom level.
	
	* src/file-manager/fm-icon-text-window.h: New file
	* src/file-manager/fm-icon-text-window.c: New file, handles creating
	and maintaining state for window from which user chooses text to 
	display beneath icons.
	* src/file-manager/Makefile.am: Build these two new files.

	* src/athena-bookmarks-window.c:
	(create_bookmarks_window): Capitalized "Athena" in window title.

2000-02-07  Andy Hertzfeld <andy@eazel.com>

	first cut at real tabs for index panel, still incomplete and not
	hooked up yet, but will be soon.
	
	* icons/tableft.png, tabright.png:
	small pixmaps for nice rounded edges for the tabs
	* icons/Makefile.am
	added tableft.png and tabright.png
	
	* src/athena-index-tabs.c,h
	new class for drawing the index tabs
	* src/Makefile.am
	added index-tabs class to build
	
2000-02-07  Elliot Lee  <sopwith@redhat.com>
	* idl/*.idl: Include the .idl files of other modules that we use.
	* libathena/Makefile.am, src/Makefile.am, src/file-manager/Makefile.am:
	Define -D_REENTRANT, just in case.
	* src/file-manager/Makefile.am: Add cflags for .idl compilation.

	* components/help/Makefile.am: Build converters. Stop installing
	the now-unneeded .schemes file.

	* components/websearch/ntl-web-search.c: Get rid of
	gnome_button_can_default()

	* libathena/athena-icons-view-icon-item.c: Get rid of missing
	prototypes and associated warnings by including needed headers.

	* src/ntl-types.h, src/ntl-uri-map.[ch], src/ntl-window.h,
	src/ntl-window-msgs.c: Remove scheme mapping functionality (now
	done in gnome-vfs). Use asynchronous version of get_file_info.

2000-02-04  John Sullivan <sullivan@eazel.com>

	Zooming now shows different information at different
	zoom levels. Currently uses hardwired pattern. Next
	I'll make the pattern configurable.

	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view-icons.h:
	(fm_directory_view_icons_get_icon_text_attribute_names):
	New function, returns set of attribute names representing
	text to appear in icon label. The set varies depending on
	zoom level, but is otherwise currently hardwired.
	
	* src/file-manager/fm-icons-controller.c:
	(fm_icons_controller_get_text): Now gets attribute names
	from icon view, then creates & returns a newline-delimited
	string using athena_file_get_string_attribute.

	* libathena/gnome-icon-container.c:
	(synch_icon_with_controller): New function, reinstalls item's
	label and image.
	(icon_new): Reworked to call synch_icon_with_controller.
	(gnome_icon_container_set_zoom_level): Now iterates through the
	icons, calling synch_icon_with_controller so text (and, later, image)
	is updated when zoom level changes.
	
	* libathena/athena-directory.c:
	(athena_file_get_size_as_string): Changed to return empty
	string instead of "--" for directories, because this looked
	better in icon view. Might change list view back to use "--"
	later.
	
	* libathena/athena-icons-view-icon-item.c:
	(draw_or_measure_text_box): Made it display blank lines
	instead of collapsing them out.
	(athena_icons_view_icon_item_draw): Took out special case
	for not showing text at tiniest zoom level. This is now handled
	the same way as the other levels.
	
2000-02-04  Darin Adler  <darin@eazel.com>

	Make optimized builds succeed.
	
	* configure.in: Turn off uninitialized variable warnings.
	At some point, we should turn these off only for the ORBit-
	generated stub files, since they are meaningful and useful in
	other files. For now, though, since we use -Werror, we need be
	sure these warnings don't cause trouble for people who do
	optimized builds.
	
	* src/ntl-main.c (main): Added GnomeUI to the list of domains
	to "stop on warning/critical".

2000-02-04  John Sullivan <sullivan@eazel.com>

	Some renaming and reorganization heading towards supporting
	icons with more info in label at higher zoom levels.

	* libathena/athena-icons-controller.c:
	* libathena/athena-icons-controller.h:
	(athena_icons_controller_get_icon_name): Renamed to
	athena_icons_controller_get_icon_text since it won't always
	just be the name.
	* src/file-manager/fm-icons-controller.c:
	(fm_icons_controller_get_icon_name): Renamed to
	fm_icons_controller_get_icon_text to match.
	* libathena/gnome-icon-container.c:
	(icon_new): Updated for name change.
	
	* libathena/athena-directory.c:
	* libathena/athena-directory.h:
	(athena_file_get_string_attribute): New function, consolidates
	athena_file_get_date_as_string, athena_file_get_size_as_string,
	and athena_file_get_type_as_string (and more to come). These old
	functions are now private.
	
	* src/file-manager/fm-directory-view-list.c:
	Changed column-identifying strings stored in metadata to be attribute
	names recognized by athena_file_get_string_attribute. Added
	LIST_VIEW_DEFAULT_SORTING_ATTRIBUTE.
	(get_column_from_metadata_value): Renamed to get_column_from_attribute
	(get_metadata_value_from_column): Renamed to get_attribute_from_column
	(get_sort_column_from_attribute): New function, handles unknown attributes
	by using LIST_VIEW_DEFAULT_SORTING_ATTRIBUTE.
	(add_to_flist): Rewrote to use column attributes and athena_file_
	get_string_attribute.
	(fm_directory_view_list_begin_loading): Now calls get_sort_column_
	from_attribute to handle the case where saved sorting attribute is unknown.

2000-02-04  Ettore Perazzoli  <ettore@helixcode.com>

	* components/html/Makefile.am: Use `GTKHTML_LIBS' and
	`GTKHTML_CFLAGS'.

	* configure.in: Added a GtkHTML test.  If GtkHTML is not
	installed, abort.  Otherwise, set `GTKHTML_LIBS' and
	`GTKHTML_CFLAGS' to the appropriate values to compile and link
	with GtkHTML.

2000-02-04  John Sullivan <sullivan@eazel.com>

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_scale): Changed back to ART_FILTER_BILINEAR
	once again after jrb & federico both pointed out that the 
	black-scaled-icons problem should be fixed (and was) in the latest
	gdk-pixbuf.

2000-02-03  Andy Hertzfeld <andy@eazel.com>

	* src/athena-zoom-control.c:
	made clicking in the middle set zoom to 100%;
	made right-clicking on the control bring up a context menu allowing
	you to select any of the available choices

2000-02-03  Jonathan Blandford  <jrb@redhat.com>

	* configure.in: added
	components/help/converters/gnome-db2html2/Makefile to the list.

2000-02-03  John Sullivan <sullivan@eazel.com>

	* libathena/athena-icon-factory.c:
	(athena_icon_factory_scale): Changed back to ART_FILTER_NEAREST
	because ART_FILTER_BILINEAR caused scaled icons in list view &
	bookmarks menu to appear nearly black.

	* libathena/athena-icons-view-icon-item.c:
	(draw_or_measure_text_box): Renamed from athena_icons_view_draw_text_box
	for clarity.
	(athena_icons_view_draw_text_box): New cover for draw_or_measure_text_box,
	with fewer parameters.
	(athena_icons_view_measure_text_box): New cover for 
	draw_or_measure_text_box, with fewer parameters.
	(athena_icons_view_icon_item_update): Now calls 
	athena_icons_view_measure_text_box.
	(athena_icons_view_icon_item_draw): Removed extra parameter from call
	to athena_icons_view_draw_text_box.
	(draw_or_measure_text_box): Took out special case for one-line labels,
	after measuring to determine that it wasn't making a significant speed
	difference. It had bugs with baseline alignment and made updating the
	code tricky. Added support for carriage returns in icon labels, by 
	looping through the measuring code for each carriage-return-delimited
	piece. (I tested this with temporary code, so there are no current
	carriage-return cases, but there will be soon.)

2000-02-02  Andy Hertzfeld <andy@eazel.com>

	* src/athena-zoom-control.c:
	fixed bug where the zoom size wasn't updating properly by overriding
	expose.  Also, disable the appropriate arrow at min and max zoom levels
	
	* icons/athena3.jpg:
	crassly slapped our logo on the athena image
	
2000-02-02  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window-msgs.c: If an error happens, we need to reset the
	location bar to current location, in case the location change
	happened via a drop on the location bar.

	* src/file-manager/fm-directory-view.c: Consensus is to use
	individual headers rather than catch-alls.

	* libathena/gnome-icon-container-dnd.c,
	libathena/athena-icons-view-icon-item.c,
	libathena/athena-icon-factory.c: Use bilinear scaling - almost
	as fast, much nicer looking.

2000-02-02  Darin Adler  <darin@eazel.com>

	(on John Sullivan's machine)
	* libathena/athena-directory.c:
	(athena_directory_get): Changed a ! to a == NULL
	(athena_directory_start_monitoring):  Bail out if directory
	is already loaded; this fixes bug where switching views added
	an item each time.

2000-02-02  Andy Hertzfeld <andy@eazel.com>

	added a zoom control to location bar, not yet wired up to the content view
	
	* icons/Makefile.am:
	* icons/zoom.png:
	added zoom image for use in zoom control
	
	* src/athena-zoom-control.h:
	* src/athena-zoom-control.c:
	* src/Makefile.am
	new zoom control widget
	
	* src/ntl-window.c:
	added zoom control to location bar
	
2000-02-01  Darin Adler  <darin@eazel.com>

	* libathena/athena-icon-factory.h:
	* libathena/athena-icon-factory.c:
	(athena_icon_factory_new):
	(athena_icon_factory_destroy):
	(athena_get_current_icon_factory):
	(athena_icon_factory_get_icon_for_file):
	(athena_icon_factory_set_theme):
	(athena_icon_factory_get_icon_by_name):
	(athena_icon_factory_get_pixbuf_for_icon):
	(athena_scalable_icon_ref):
	(athena_scalable_icon_unref):
	(athena_scalable_icon_get_name):
	(scalable_icon_get):
	(icon_set_possibly_free):
	(scalable_icon_new):
	Changed the icon factory interface in a few ways: 1) There's no
	longer a AthenaIconFactory object. There's just a single global
	icon factory. If we find that we need multiple factories, we can
	implement that later. 2) Instead of going straight from a file to
	a pixbuf, you get a scalable icon, and then get a pixbuf from
	that. This allows you to choose the icon and then get
	different-sized versions of it without going through the icon
	selection process over and over again. There's also a name for
	each icon which can be stored in the metafile so you can get the
	same icon again before you have full information on a file.

	* src/athena-bookmark.c:
	(athena_bookmark_get_pixmap_and_mask):
	* src/file-manager/fm-directory-view-list.c:
	(install_icon):
	* src/file-manager/fm-icons-controller.c:
	(fm_icons_controller_get_icon_image):
	Changed icon factory clients to use the new interface. Maybe
	after a while I'll add a convenience function that's as simple as
	the old interface was for the common case where you want to go
	straight to the pixbuf, but lets try it this way for a while.
	
	* libathena/athena-string.h:
	* libathena/athena-string.c:
	(athena_has_prefix):
	Added athena_has_prefix. This checks to see if a string has a
	particular prefix. It's both clearer to read and more efficient
	than Andy's typical trick of calling strstr.
	
	* libathena/athena-lib-self-check-functions.h:
	* libathena/athena-string.c:
	Added self-checks for athena-string.c. The tests uncovered a
	bug in athena_string_to_int that I fixed.

	* athena-glib-extensions.c:
	Just a stray new-line.

2000-02-01  John Sullivan  <sullivan@eazel.com>

	Fixed bug where selection info didn't appear in the status bar when
	Select All was performed in the list view.

	* libathena/gtkflist.c:
	(select_or_unselect_row_cb): New function, emits SELECTION_CHANGED
	signal.
	(gtk_flist_initialize): Connect parent class's "select_row" and
	"unselect_row" signals to select_or_unselect_row_cb.
	(select_row): Remove emission of SELECTION_CHANGED signal here since
	it's now handled at the correct bottleneck.

2000-02-01  Darin Adler  <darin@eazel.com>

	Started work on icon stretching. In the process, I am doing some
	cleanup on the icon container, and I am checking in some of that
	before the stretching is implemented.

	* libathena/gnome-icon-container-private.h:
	* libathena/gnome-icon-container.c:
	(icon_is_in_region):
	Got rid of width and height stored in each icon.

	* libathena/gnome-icon-container.c:
	A lot of cleanup, including getting rid of the
	icon_get_text_bounding_box function.
	
	* libathena/gnome-icon-container.c:
	(gnome_icon_container_begin_stretch):
	(gnome_icon_container_stretch):
	(gnome_icon_container_end_stretch):
	(button_release_event):
	(motion_notify_event):
	(handle_icon_button_press):
	First cut at adding stretching hooks in button handlers.
	
	* libathena/athena-icons-view-icon-item.c:
	(athena_icons_view_draw_text_box):
	Rewrote to fix bug with position of text when it's too long for
	a single line.
	
	* libathena/athena-glib-extensions.h:
	Added a macro named ATHENA_N_ELEMENTS.
	src/ntl-index-panel.c: 
	src/explorer-location-bar.c: 
	libathena/gtkflist.c: 
	Used the ATHENA_N_ELEMENTS macro.

2000-01-31  Andy Hertzfeld <andy@eazel.com>

	made the keyboard selection rectangle work again.  It's no longer a
	separate canvas object, but rather a state reflected by the icon_item
	like regular selection
	
	* libathena/gnome-icon-container-private.h:
	removed the kdb_navigation_item field
	
	* libathena/gnome-icon-container.c:
	removed code that manipulated the kbd_navigation_item, replaced
	with setting and clearing the "alt_selection" item attribute
	
	* libathena/athena-icons-view-icon-item.c:
	if the alt_selected attribute is set, frame the item's text with
	a gray-stippled rectangle
	
2000-01-31  John Sullivan <sullivan@eazel.com>

	Now saves/restores zoom level in icon & list views, and
	sort column & direction in list view.

	* athena-metadata.h: New #defines for ICON_VIEW_ZOOM_LEVEL_METADATA_KEY,
	LIST_VIEW_ZOOM_LEVEL_METADATA_KEY, LIST_VIEW_SORT_COLUMN_METADATA_KEY,
	LIST_VIEW_SORT_REVERSED_METADATA_KEY.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_load_uri): Now emits the BEGIN_LOADING signal. This
	signal was already defined but its use had been removed.
	
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_set_zoom_level): Stores new zoom level in
	the metadata.
	(fm_directory_view_icons_begin_loading): Sets zoom level to the one
	read from the metadata.

	* src/file-manager/fm-directory-view-list.c:
	Created #defines for column names stored in metadata.
	(get_metadata_value_from_column), (get_column_from_metadata_value):
	Helper functions for converting between column number and string to
	store in metadata.
	(fm_directory_view_list_begin_loading): New function: sets zoom level,
	sort column, and sort direction to the values read from the metadata. 
	(fm_directory_view_initialize_class): Wire up begin_loading function 
	pointer.
	(fm_directory_view_initialize): Change initial value of sort column
	to LIST_VIEW_COLUMN_NONE, so when it changes later the right updating
	will occur.
	(compare_rows): Added another g_return_val_if_fail condition.
	(create_flist): Removed some of the sorting set-up; it is now done
	in begin_loading instead.
	(fm_directory_view_list_set_zoom_level): Stores new zoom level in
	the metadata.
	(fm_directory_view_list_sort_items): Stores new sort column and
	direction in metadata.

2000-01-31  Andy Hertzfeld <andy@eazel.com>

	implemented the "select all" command in the context menus
	
	* src/file-manager/directory_view.c,h:
	added a directory_view_select_all slot for subclasses to override,
	enabled "select all" item and attached a signal to the item, whose
	callback calls fm_directory_view_select_all
	
	* src/file-manager/directory_view_icons.c:
	implemented directory_view_icons_select_all by invoking the "select all"
	operation of GnomeIconContainer.
	
	* src/file-manager/directory_view_list.c:
	implemented directory_view_list_select_all by invoking the "select all"
	operation of the clist widget
	
2000-01-31  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window-msgs.c, src/ntl-window-private.h: Update debugging messages. Allow
	synchronous state changes (needed to avoid race conditions), and
	don't reset the idle handler if the idle handler is already running.

	* src/file-manager/fm-directory-view.c: Include
	<libathena/libathena.h> rather than just
	<libathena/athena-alloc.h> - nitpick in passing.

	* src/ntl-uri-map.c: OK, don't check for NULL here, in an attempt to flush out bugs elsewhere.

2000-01-31  Darin Adler  <darin@eazel.com>

	* athena-icons-view-icon-item.c:
	(athena_icons_view_draw_text_box):
	Changed it to not attempt to create a GC just to measure the text.
	This makes it work when the widget is not realized.

	* athena-icons-view-icon-item.h:
	athena-icons-view-icon-item.c:
	gnome-icon-container-dnd.c:
	(athena_icons_view_icon_item_center_offset):
	Changed the parameter type to AthenaIconsViewIconItem.

	* fm-directory-view.c:
	(stop_load):
	(fm_directory_view_load_uri):
	Fixed code so that if you stop loading more than once, or
	stop before you even start, it won't send extra progress
	requests to the Athena shell or call stop_monitoring
	extra times on the AthenaDirectory object.

	* athena-icons-view-icon-item.h:
	athena-icons-view-icon-item.c:
	gnome-icon-container-dnd.c:
	Quick cleanup of the new AthenaIconsViewIconItem class.

	* libathena/gdk-extensions.c:
	libathena/gnome-icon-container-dnd.c:
	libathena/gnome-icon-container.c:
	libathena/gtkflist.c:
	libathena/athena-background-canvas-group.c:
	libathena/athena-background.c:
	libathena/athena-debug.c:
	libathena/athena-default-file-icon.c:
	libathena/athena-directory.c:
	libathena/athena-icon-factory.c:
	libathena/athena-icons-controller.c:
	libathena/athena-icons-view-icon-item.c:
	libathena/athena-lib-self-check-functions.c:
	libathena/athena-self-checks.c:
	libathena/athena-string.c:
	src/explorer-location-bar.c:
	src/file-manager/dfos-corba.c:
	src/file-manager/dfos-xfer-progress-dialog.c:
	src/file-manager/dfos-xfer.c:
	src/file-manager/dfos.c:
	src/file-manager/fm-directory-view-icons.c:
	src/file-manager/fm-directory-view-list.c:
	src/file-manager/fm-directory-view.c:
	src/file-manager/fm-icons-controller.c:
	src/file-manager/fm-main.c:
	src/athena-self-check-functions.c:
	src/ntl-index-panel.c:
	Got rid of #ifdef HAVE_CONFIG_H. Elliot says that we must always
	include <config.h>, but there's no reason to include that ifdef
	since we don't plan on building without a <config.h> ever.

2000-01-31  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	fixed bug where icons were horizontally mis-positioned after dragging;
	fixed by taking the center offset into account
	
2000-01-31  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-directory.h:
	* libathena/athena-directory.c:
	(athena_directory_get_boolean_metadata), 
	(athena_directory_set_boolean_metadata),
	(athena_directory_get_integer_metadata), 
	(athena_directory_set_integer_metadata): New convenience functions
	for getting/setting metadata that's naturally in boolean or integer form.
	I'll be adding clients for these next.

2000-01-31  Darin Adler  <darin@eazel.com>

	AthenaDirectory is now in charge of loading directories.
	FMDirectoryView has been relieved of that responsibility.

	* athena-directory.h:
	athena-directory.c:
	(athena_directory_start_monitoring):
	(athena_directory_stop_monitoring):
	(athena_directory_is_ready_for_layout):
	(athena_directory_new_file):
	(athena_directory_are_all_files_seen):
	Added monitoring API that's used to read the contents of
	a directory. Made athena_directory_new_file private since
	we now use the monitoring API instead.

	* fm-directory-view.c:
	(fm_directory_view_initialize):
	(stop_load):
	(display_pending_entries):
	(display_pending_files):
	(display_pending_idle_cb):
	(display_timeout_cb):
	(display_pending_timeout_cb):
	(directory_load_cb):
	(schedule_idle_display_of_pending_files):
	(schedule_timeout_display_of_pending_files):
	(unschedule_idle_display_of_pending_files):
	(unschedule_timeout_display_of_pending_files):
	(unschedule_display_of_pending_files):
	(add_files_cb):
	(fm_directory_view_activate_entry):
	(fm_directory_view_load_uri):
	(disconnect_model_handlers):
	(fm_directory_view_stop):
	Changed to use monitoring instead of directly calling
	gnome_vfs_async_load_directory directly.

	* fm-directory-view.c:
	(update_zoom_menu_items):
	(zoom_in_cb):
	(zoom_out_cb):
	(pop_up_context_menu):
	(pop_up_temporary_context_menu):
	(append_background_items):
	(create_background_context_menu):
	(fm_directory_view_popup_item_context_menu):
	(fm_directory_view_popup_background_context_menu):
	Changed to re-created background menu each time instead of
	keeping a single global menu up to date. This is simpler, and
	the imperceptible additional delay from recreating the menu
	each time should not be a problem.
	
	* ntl-window.c:	(athena_window_up):
	ntl-map.c: (athena_navinfo_new):
	Handle the case where the current URI is NULL.

	* fm-directory-view-icons.c: (create_icon_container):
	Removed the leftover puts calls in here.
	This gets rid of "A", "B", "C" on each start of athena.

2000-01-31  John Sullivan <sullivan@eazel.com>

	Put all metadata keys in a central place so we can keep
	track of them.

	* libathena/athena-metadata.h: New file, contains
	#defines for all the metadata keys currently in use.
	* libathena/Makefile.am: add athena-metadata.h to list of headers.
	* src/ntl-index-panel.c:
	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view-list.c:
	Update all non-test callers of athena_directory_get_metadata and
	athena_directory_set_metadata to use new #defines

2000-01-31  John Sullivan <sullivan@eazel.com>

	Improved zooming API and made zoom items on item context
	menu disable properly. (There's still a bug with disabling
	the background menu if an item menu ever appears; Darin will
	fix this in his next checkin.)

	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	(can_zoom_in), (can_zoom_out): New function pointers for subclasses
	to replace.
	(fm_directory_view_can_zoom_in), (fm_directory_view_can_zoom_out):
	New functions that call through to the new function pointers.
	(bump_zoom_level), (fm_directory_view_bump_zoom_level): 
	Removed return value in favor of new functions.
	(update_zoom_menu_items): Helper function to update sensitivity of
	background context menu Zoom In and Zoom Out items. Darin will eliminate
	this with his next checkin.
	(zoom_in_cb), (zoom_out_cb): Now use update_zoom_menu_items to share code.
	(append_background_items): Set sensitivity of Zoom In and Zoom Out items
	at creation time.
	
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_bump_zoom_level): Removed return value.
	(fm_directory_view_list_can_zoom_in), (fm_directory_view_list_can_zoom_out):
	New functions, compare current zoom level against limits.
	(fm_directory_view_list_get_zoom_level), 
	(fm_directory_view_list_set_zoom_level): New convenience functions,
	deployed throughout this file.
	(fm_directory_view_list_initialize_class): Replace can_zoom_in and 
	can_zoom_out function pointers.
	
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_bump_zoom_level): Removed return value.
	(fm_directory_view_icons_can_zoom_in), (fm_directory_view_icons_can_zoom_out):
	New functions, compare current zoom level against limits.
	(fm_directory_view_icons_get_zoom_level): New convenience function,
	deployed throughout this file.
	(fm_directory_view_icons_initialize_class): Replace can_zoom_in and 
	can_zoom_out function pointers.

2000-01-30  Andy Hertzfeld <andy@eazel.com>

	made fonts scale according to the zoom level:
	
	* libathena/gnome-icon-container-private.h:
	replaced label font with array of fonts
	* libathena/gnome-icon-container.c:
	load a font for each zoom level
	* libathena/athena_icons_view_icon_item:c
	use a font selected by the zoom level
	
	enabled/disabled zoom items as necessary in context menu:
	
	* src/file-manager/fm-directory-view-icons.c:
	made bump_zoom_level return a boolean indicating if it can zoom further
	* src/file-manager/fm-directory-view-list.c:
	made bump_zoom_level return a boolean indicating if it can zoom further
	* src/file-manager/fm-directory-view-list.c:
	enable/disable items in zoom level according to the passed-back booleans
	
2000-01-28  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	made shadow rectangles track icons properly by adding in the center offset
	
2000-01-28  John Sullivan  <sullivan@eazel.com>

	A little zoom cleanup:

	* libathena/gnome-icon-container-private.h: #include
	athena-icon-factory.h and remove copy of AthenaZoomLevel enum.
	* libathena/gnome-icon-container.c:
	(gnome_icon_container_set_zoom_level): Now uses ratios of standard
	ATHENA_ICON_SIZEs to compute canvas pixels/unit instead of locally
	storing ratios.
	* libathena/athena-icon-factory.h:
	Changed pixel sizes of some ATHENA_ICON_SIZE #defines to match
	the ratios formerly used in gnome-icon-container.c

	Added icons to bookmarks menu and window:

	* libathena/athena-directory.c: (athena_file_get): Changed
	options passed to gnome_vfs_get_file_info to match those used in
	directory view; this causes the mime type to be read so the custom
	image icon can appear.
	* src/athena-bookmark.c:
	* src/athena-bookmark.h:
	Now uses details structure to hold implementation details.
	(athena_bookmark_get_pixmap_and_mask): New utility function to
	get image suitable for use in a GtkMenuItem or GtkCList
	(athena_bookmark_destroy): Free details structure
	(init): Alloc details structure
	* src/athena-bookmarks-menu.c:
	(create_pixmap_widget_for_bookmark): New utility function to create
	the kind of pixmap widget that a menu item likes.
	(bookmark_menu_item_new): New utility function that returns a menu
	item with bookmark's icon & name installed.
	(athena_bookmarks_menu_repopulate): Uses bookmark_menu_item_new.
	* src/athena-bookmarks-window.c:
	Now uses #defines for the list columns (icon & name)
	(create_bookmarks_window): Create one more column to hold icon;
	set column width & row height taking new icon column into account.
	(install_bookmark_icon): New function, installs pixmap & mask for
	bookmark into GtkCList cell.
	(repopulate): Fill in icon column as well as name column.
	
	Fixed storage leaks:
	
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_destroy): free details structure
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_destroy): free details structure
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_icons_destroy): free details structure; also,
	don't bother setting details->icons_not_positioned to NULL since
	details is about to be freed.


2000-01-28  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena_icons_view_icon_item.c,h:
	made icons be centered in their box by adding a center_offset method
	and using it where appropriate.
	* libathena/gnome-icon-container-dnd.c:
	used center_offset in drag offset calculation
	
2000-01-28  John Sullivan  <sullivan@eazel.com>

	Moved FMIconCache to libathena, renaming it
	AthenaIconFactory at the same time. Renamed all public
	and private functions accordingly.

	* RENAMING: removed this finished item.

	* src/file-manager/fm-default-file-icon.c: Removed file
	* src/file-manager/fm-default-file-icon.h: Removed file
	* src/file-manager/fm-icon-cache.c: Removed file
	* src/file-manager/fm-icon-cache.h: Removed file
	* src/file-manager/Makefile.am: Took out mentions of removed files.

	* libathena/athena-default-file-icon.c: New file
	* libathena/athena-default-file-icon.h: New file
	* libathena/athena-icon-factory.c: New file
	* libathena/athena-icon-factory.h: New file
	* libathena/Makefile.am: Added new files to build.

	* src/file-manager/fm-directory-view-icons.c: Took out
	#include for fm-icon-cache, which was obsolete in this file.
	* src/file-manager/fm-directory-view-list.c: Renamed #include
	and affected function calls. 
	* src/file-manager/fm-icons-controller.c: Renamed #include
	and affected function calls. 

2000-01-28  John Sullivan  <sullivan@eazel.com>

	Made zooming work in directory list view. Also made
	right-click menu on a directory view always include
	the non-icon-specific items.

	* src/file-manager/fm-icon-cache.h:
	* src/file-manager/fm-icon-cache.c:
	(athena_icon_size_for_zoom_level): New function, maps
	between AthenaZoomLevel and nominal icon sizes.
	
	* src/file-manager/fm-directory-view.c:
	(append_background_items): New utility function, adds the
	non-file-specific context menu items to a menu.
	(create_background_context_menu): Moved most of guts to
	new append_background_items, which this now calls.
	(create_item_context_menu): Now adds a separator and then
	calls append_background_items. This means right-clicking on
	an icon will show the icon-specific commands followed by the
	non-icon-specific ones. This makes the non-icon-specific ones
	easier to discover and access, especially in list view where
	anywhere you click in a long list gives the item's context menu.
	
	* src/file-manager/fm-directory-view-list.c:
	Now stores zoom level rather than icon size in details structure.
	(fm_directory_view_list_bump_zoom_level),
	(fm_directory_view_list_set_zoom_level): New functions for setting
	the zoom level.
	(fm_directory_view_list_initialize_class): Wire up bump_zoom_level to
	slot in parent class structure.
	(compare_rows), (add_to_flist): Changed mechanism that temporarily
	stores pending row data to use object data rather than a static variable
	so it will work with multiple list views at the same time.
	(fm_directory_view_list_get_icon_size): New function, gets icon size
	from zoom level stored in details structure.
	(create_flist): Deploy fm_directory_view_list_get_icon_size where
	details structure was examined before.
	(install_icon): Removed AthenaFile and column parameters; made function
	compute these internally.
	
2000-01-28  Elliot Lee  <sopwith@redhat.com>
	* components/html/ntl-web-browser.c: Remove use of gtk_html_parse() - deprecated
	in latest GtkHTML.

2000-01-28  Andy Hertzfeld <andy@eazel.com>

	*libathena/gnome-icon-container-dnd.c:
	fixed dragging when zoomed by scaling the pixbuf and offsets if necessary
	
2000-01-27  Andy Hertzfeld <andy@eazel.com>

	*libathena/athena-icons-view-icon-item.c:
	some fixes to improve positioning when zoomed by multiplying by pixel_per_unit
	when appropriate
	
2000-01-27  John Sullivan  <sullivan@eazel.com>

	Finished this round of sorting architecture improvements.
	
	* libathena/athena-directory.c:
	(athena_file_compare_for_sort_internal): Made sorting AthenaFiles
	by name be case-insensitive.
	
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	Removed enum FMDirectoryViewSortType (replaced by recently-added
	AthenaFileSortType)
	(fm_directory_view_sort): Removed this function; subclasses now
	must handle sorting internally.
	(fm_directory_view_repopulate): Removed this function, formerly
	called only by fm_directory_view_sort.
	
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_initialize): list_view->details->sort_column
	now starts out at LIST_VIEW_COLUMN_NAME.
	(compare_rows): New function to compare rows for sorting GtkCList-style.
	(create_flist): Set up GtkCList sorting mechanism; formerly I had been
	ignoring it (unaware) and handling sorting from scratch.
	(add_to_flist): Don't assume that newly-added item will be at end; also
	add hack to make pending row data accessible to compare function.
	(sort_criterion_from_column): New function, broken out of 
	fm_directory_view_list_sort_items.
	(fm_directory_view_list_sort_items): Broke out sort criterion choosing,
	now uses GtkCList-style sorting instead of asking FMDirectoryView to sort.
	(install_icon): Added a couple more g_return_if_fails.
	
2000-01-27  Darin Adler  <darin@eazel.com>

	* src/ntl-app.c: Added missing includes to get it to compile.
	* components/help/converters/.cvsignore:
	components/help/converters/gnome-info2html2/.cvsignore:
	components/help/converters/gnome-man2html2/.cvsignore:
	Added Makefile.

2000-01-27  Maciej Stachowiak  <mjs@eazel.com>

	* src/Makefile.am, src/athena.goad, src/ntl-app.c,
	src/file-manager/Makefile.am: Made the file manager component
	statically linked in again.  
	* src/file-manager/ntl-file-manager.goad: Removed.

2000-01-27  Elliot Lee  <sopwith@redhat.com>

	* configure.in: Add components/help/converters/* makefiles.
	* libathena/athena-directory.c: Check for NULL directory
	result before doing stuff with it.
	* src/ntl-index-panel.c: Ditto.
	* src/ntl-prefs.c: Add help browser nav tree to list of possibilities.
	* src/ntl-window-msgs.c: Handle non-VFS-handleable URIs correctly WRT 'up' button.

2000-01-27  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icons-view-icon-item.c:
	made the canvas item respect the scale factor by removing code in
	compute_viewport_affine that was defeating it. There's still a
	bunch more to do to make it right for non-unity scale factors, but
	at least we can start that now.
	
2000-01-27  Andy Hertzfeld <andy@eazel.com>

	hooked zooming up to the background context menu; right now the canvas item
	doesn't work at different zoom levels properly, which we'll fix soon.
	
	* libathena/fm-directory-view.c,h:
	enable zoom in and zoom out items and hooked them up to callback
	added a bump_zoom_level slot, to be overriden by subclasses, which the zoom callback use
	
	* libathena/fm-directory-view-icons.c:
	added method for bump_zoom_index that calls the icon container to do the work
	
	* libathena/gnome-icon-container-private.h:
	added a private instance variable for zoom level
	
	* libathena/gnome-icon-container.c,.h:
	added methods for get_zoom_level and set_zoom_level
	
2000-01-27  Darin Adler  <darin@eazel.com>

	* libathena/gnome-icon-container.c:
	(icon_select):
	Fixed a bug that was causing some icons to not get
	selected or unselected properly due to strangeness of
	bit fields.

	* libathena/gnome-progressive-loader.h: 
	libathena/gnome-progressive-loader.c: 
	libathena/Makefile.am:
	Got rid of GnomeProgressiveLoader.
	We're not going to use it.

	* RENAMING: Andy added a new file that matched RENAMING,
	but then I changed my mind about a renaming, spawning yet
	more renaming!

	* src/file-manager/fm-directory-view-icons.c:
	Just tiny reformatting.

2000-01-27  John Sullivan  <sullivan@eazel.com>

	More work towards changing the sorting framework, and
	fixed some bugs in athena_file_get.

	* libathena/athena-directory.h:
	Added AthenaFileSortType enum.
	(athena_file_compare_for_sort): New function
	(athena_file_compare_for_sort_reversed): New function
	
	* libathena/athena-directory.c:
	(athena_file_ref): New function (prototype already existed).
	(athena_file_get): file_info had been stack variable,
	but that didn't work right, so now it's xxx_new()ed.
	Also ref'ed file before returning.
	(athena_file_compare_for_sort), 
	(athena_file_compare_for_sort_reversed),
	(athena_file_compare_for_sort_internal): New functions.
	(athena_self_check_directory): Added some simple tests for
	athena_file_get and athena_file_compare_xxx.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_load_uri): Removed sort_rules that were
	passed in to gnome_vfs_asynch_load_directory_uri, since they
	had no effect and we're changing the sorting framework.

2000-01-27  Elliot Lee  <sopwith@redhat.com>
	* libathena/Makefile.am: Link to $(BONOBO_LIBS)
	* libathena/gnome-icon-container.c: Include <string.h> to get 
	prototype for memset.

2000-01-26  Maciej Stachowiak  <mjs@eazel.com>

	* components/help/hyperbola-main.c,
	components/help/hyperbola-nav-tree.c,
	components/history/ntl-history-view.c, components/html/main.c,
	components/html/ntl-web-browser.c,
	components/websearch/ntl-web-search.c, idl/athena.idl,
	libathena/gnome-icon-container.c,
	libathena/gnome-progressive-loader.c,
	libathena/gnome-progressive-loader.h, libathena/libathena.h,
	libathena/ntl-content-view-frame.c,
	libathena/ntl-meta-view-frame.c, libathena/ntl-view-frame.c,
	libathena/ntl-view-frame.h, src/athena.h,
	src/ntl-index-panel.c, src/ntl-view-bonobo-control.c,
	src/ntl-view-bonobo-subdoc.c, src/ntl-view-frame-svr.c,
	src/ntl-view-athena.c, src/ntl-view-private.h, src/ntl-view.c,
	src/ntl-view.h, src/ntl-window.c, src/ntl-window.h,
	src/file-manager/dfos-corba.h, src/file-manager/dfos-xfer.c,
	src/file-manager/dfos-xfer.h, src/file-manager/fm-main.c: Build
	with the recent Bonobo global renaming, and Havoc's changes. A
	patch from Kjartan Maraas <kmaraas@online.no> and scripts from Nat
	Friedman <nat@helixcode.com> were a very helpful starting point.

2000-01-26  Havoc Pennington  <hp@pobox.com>

	* src/athena-gconf.h, src/athena-gconf.c: Trivial files I'd
	written before getting stuck on the OAF thing, that might be of
	interest. I have some other bits I did that aren't worth checking
	in, Ramiro said he's doing the prefs dialog.

2000-01-26  John Sullivan  <sullivan@eazel.com>

	Moved list view sort indicator to left of right-justified 
	columns.

	* src/file-manager/fm-directory-view-list.c:
	(create_flist): Marked the sort indicators with special
	data/value pairs so they can be located later regardless
	of view order. Made right-justified ones use pack_start
	instead of pack_end.
	(get_sort_indicator): Find sort indicators from special
	data/value pairs rather than relying on view order.

2000-01-26  John Sullivan  <sullivan@eazel.com>

	A few changes in the direction of improving the directory
	view sorting architecture. No visible effects yet.

	* src/file-manager/fm-directory-view-icons.c:
	(create_icon_container): Took out useless call to
	fm_directory_view_populate().

	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_sort_items): New function, extracted
	from column_clicked_cb, that does the actual sorting.
	(column_clicked_cb): Replaced actual sorting code with
	call to new fm_directory_view_list_sort_items; retained
	setup code.
	(create_flist): Took out useless call to
	fm_directory_view_populate().

	* src/file-manager/fm-directory-view.h:
	(fm_directory_view_populate): Removed this call from public API.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_populate): Made static and renamed to 
	..._repopulate now that I better understand its use. Soon it will
	go away entirely.

2000-01-26  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	made the drag shadow have the same dimensions as the icon being dragged;
	fixed bug where it was confusing the width and height order in the
	custom uri it built for dragging within Athena
	
2000-01-26  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c:
	(athena_file_get_name):
	Fixed an assert I missed.
	
2000-01-26  Darin Adler  <darin@eazel.com>
	
	* libathena/athena-directory.h:
	libathena/athena-directory.c:
	(athena_file_get):
	(athena_file_detach):
	(athena_directory_finalize):
	(athena_file_unref):
	Added interface to get a AthenaFile for a specific file rather than
	a file from a directory that we are scanning.

	* libathena/athena-glib-extensions.c:
	(check_tm_to_g_date):
	A little cleanup of the self-check code.

	* libathena/Makefile.am:
	libathena/libathena.h:
	libathena/athena-alloc.h: 
	libathena/athena-directory.h:
	Moved g_alloca into its own header file so you don't have to include
	all the Bonobo stuff just to use g_alloca.

2000-01-26  Andy Hertzfeld <andy@eazel.com>

	* src/file-manager/fm-icon-cache.c:
	first cut at making images with small file sizes display as themselves
	* libathena/athena-icons-view-icon-item.c:
	clean-ups, plus added alternate selection boolean for keyboard selection

2000-01-25  John Sullivan <sullivan@eazel.com>

	* libathena/athena-directory.c:
	(athena_file_get_date_as_string): A few cleanups
	based on feedback from Darin and Havoc.

2000-01-25  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icons-view-icon-item.c
	disabled icon centering code that was causing glitchey updates
	
2000-01-25  Darin Adler  <darin@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	(create_selection_shadow):
	(set_gnome_icon_list_selection):
	(get_gnome_icon_list_selection):
	(gnome_icon_container_receive_dropped_icons):
	Redid drag code so that it will work if there are multiple
	windows involved, although we still don't handle copies.
	Changed selection to include the width and height of the icon,
	and to hold the top left of the icon.

	* libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container.c:
	(move_icon):
	(gnome_icon_container_move_icon):
	Made move_icon visible to the DnD code, and added a raise boolean
	so it could move and icon and bring it to the front.
	(gnome_icon_container_get_icon_by_uri):
	(gnome_icon_container_select_list_unselect_others):
	Added new functions for use by DnD code.

	* libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container.c:
	(handle_icon_button_press):
	Got rid of unused drag_x_offset and drag_y_offset.

	* libathena/gnome-icon-container.c:
	(icon_select):
	(icon_toggle_selected):
	(select_icon):
	(select_one_unselect_others):
	(toggle_icon):
	(unselect_all_but_one):
	(unselect_all):
	(rubberband_select_in_cell):
	(kbd_move_to):
	(kbd_space):
	(linger_select_timeout_cb):
	(handle_icon_button_press):
	(gnome_icon_container_select_all):
	(gnome_icon_container_unselect_all):
	Cleaned up selection logic and made it simpler.

	* libathena/gnome-icon-container.h:
	libathena/gnome-icon-container.c:
	(gnome_icon_container_xlate_selected):
	Got rid of unused function.

	* libathena/athena-self-checks.h:
	libathena/athena-self-checks.c:
	(athena_self_checks_failed):
	(athena_exit_if_self_checks_failed):
	src/ntl-main.c:
	(main):
	Added blank lines before and after the first and last failed
	checks when at least one check fails.

	* src/ntl-view.c:
	(athena_view_destroy):
	Removed a straggler message. (I hope Elliot's not still using it.)

	* RENAMING: Some new name ideas.
	
2000-01-25  John Sullivan <sullivan@eazel.com>

	Better text for displayed file dates. This is currently used only
	in the list view date column, but will be used later in icon view
	when we get multiple lines of text per icon working.

	* libathena/athena-glib-extensions.c:
	* libathena/athena-glib-extensions.h:
	New files, intended to hold athena code that logically belongs
	in glib. Now contains a g_date constructor that takes a struct tm,
	and a strdup_strftime function that returns a new string of exactly
	the right size.
	* libathena/Makefile.am: Build and install these two new files.
	* libathena/athena-lib-self-check-functions.h: include the
	new self-check function for athena-glib-extensions.

	* libathena/athena-directory.c:
	#include athena-glib-extensions.h
	(athena_file_get_date_as_string): Replaced simple ctime version
	with fancy version that uses shorter date format, the words
	"today" and "yesterday" when appropriate, and the weekday name if
	the date is in the last week (other than today or yesterday).

2000-01-25  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-icons-view-icon-item.c,h:
	new canvas item class for icon items.  Now we use a single
	canvas item to draw the icons instead of a group with two subitems.
	This will pay-off when we implement the emblems, zooming and
	special icons for text, etc.  This is the first cut, I'm pretty
	sure it doesn't work when pixels_per_item isn't 1.0 and there
	are other small problems.
	  
	* libathena/gnome-icon-container-private.h:
	removed old fields for sub-items
	
	* libathena/Makefile.am:
	added new item class to makefile
	  
	* libathena/gnome-icon-container-dnd.c:
	drag asks main item for pixbuf instead of image item
	  
	* libathena/gnome-icon-container.c:
	use new icon item instead of making group with two sub-items
	
2000-01-24  Maciej Stachowiak  <mjs@eazel.com>

	* src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view.h
	(fm_directory_view_popup_item_context_menu,
	fm_directory_view_popup_background_context_menu): New functions
	for subclasses to call, to implement right-click menus. Most of
	the guts are here now. Machinery to merge view-specific items with
	generic ones will be added here.
	* src/file-manager/fm-directory-view-icons.c,
	src/file-manager/fm-directory-view-list.c: Use the new interface
	for right-click stuff.

	* src/file-manager/fm-directory-view-icons.c: Corrected memory
	management for background and item popup menus.

2000-01-24  Darin Adler  <darin@eazel.com>

	* gnome-icon-container-dnd.c:
	(gnome_icon_container_receive_dropped_icons):
	Removed bogus warning. Need to do some more work to get
	dragging working with multiple windows, but there's no
	easy way to detect that case, so just let it go.

	* fm-directory-view-icons.c:
	(icon_container_context_click_icon_cb):
	(icon_container_context_click_background_cb):
	Fixed the callbacks to match the new interface without the
	icon name. I missed this in my check-in earlier today.

2000-01-24  John Sullivan <sullivan@eazel.com>

	Added sort indicators to list view column titles

	* src/file-manager/fm-directory-view-list.c: 
	Added #define LIST_VIEW_COLUMN_NONE
	Added tiny in-line XPMs for up & down sort indicators.
	(struct _FMDirectoryViewListDetails): Replaced
	sort_type field with sort_column field.
	(fm_directory_view_initalize): initialize details->sort_column
	to LIST_VIEW_COLUMN_NONE
	(get_sort_indicator), (hide_sort_indicator), (show_sort_indicator):
	New functions for setting the sort indicators' states.
	(column_clicked_cb): update details->sort_column and call
	hide_sort_indicator and show_sort_indicator
	(create_flist): Add sort indicator widgets to column titles,
	initially hidden
	(flist_activate_cb): Renamed "ignored" parameter and tested its
	value, to make mjs happy.

2000-01-24  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/gtkflist.c, libathena/gtkflist.h: Rename
	"row_popup_menu" and "empty_popup_menu" signals to
	"context_click_row" and "context_click_background" for more
	consistency with the way the icon container does it. Removed
	GdkEvent parameters from these signals. Added an int indicating
	the row right-clicked.
	(gtk_flist_button_press): Do not change the selection to the row
	that gets right-clicked. It was inconsistent with the icon view
	and most of the known universe.

2000-01-24  Darin Adler  <darin@eazel.com>

	Added a controller object that lets GnomeIconContainer
	ask questions and perform actions, even though only the
	FMDirectoryViewIcons knows how to answer the questions
	and perform the actions.

	Replaced use of athena_file_get_info with specific
	accessors for various file info.

	* libathena/Makefile.am:
	libathena/athena-icons-controller.h:
	libathena/athena-icons-controller.c:
	libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container.h:
	libathena/gnome-icon-container.c:
	(icon_new_pixbuf):
	(gnome_icon_container_new):
	(gnome_icon_container_add):
	(gnome_icon_container_add_auto):
	Added AthenaIconsController, an interface provided so that the
	file manager can connect the icons up with the file code. This is
	all so we can keep the view/controller separation. This eliminates
	the need to pass around the icon name all the time, so the signals
	have changed to not take the icon name as a parameter.

	* src/file-manager/Makefile.am:
	src/file-manager/fm-icons-controller.c:
	src/file-manager/fm-icons-controller.h:
	Added FMIconsController, the actual controller used by the file
	manager instance of GnomeIconContainer.
	src/file-manager/fm-directory-view-icons.c:
	(create_icon_container):
	(add_icon_if_already_positioned):
	(add_icon_at_free_position):
	(icon_container_activate_cb):
	(fm_directory_view_icons_icon_moved_cb):
	Create and use the FMIconController.

	* libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container-dnd.c:
	(set_gnome_icon_list_selection):
	(set_uri_list_selection):
	libathena/gnome-icon-container.c:
	(gnome_icon_container_set_base_uri):
	src/file-manager/fm-directory-view-icons.c:
	(set_up_base_uri):
	(fm_directory_view_icons_begin_loading):
	Get rid of the old base_uri technique for handling drags. Instead
	the icon controller supplies URIs for icons when requested.

	* RENAMING: Proposed that we use AthenaIconsView as the new name
	for GnomeIconContainer instead of AthenaIconContainer.

	* libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container.h:
	libathena/gnome-icon-container.c:
	(gnome_icon_container_initialize):
	(handle_icon_enter_notify):
	(handle_icon_leave_notify):
	Renamed browser mode to linger selection mode.

	* libathena/gnome-icon-container-private.h:
	libathena/gnome-icon-container.h:
	libathena/gnome-icon-container.c:
	(icon_configure):
	(icon_position):
	(change_icon_mode):
	(gnome_icon_container_initialize):
	(gnome_icon_container_set_icon_mode):
	(gnome_icon_container_get_icon_mode):
	src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize):
	Got rid of icon mode, since we won't be using it.

	* libathena/gnome-icon-container-dnd.c:
	(get_gnome_icon_list_selection):
	Changed geometry parsing so it will not ignore extra characters
	after the numeric geometry.
	(gnome_icon_container_receive_dropped_icons):
	The code here tried to work when dragging icons between windows,
	but the implementation was actually only good within the same
	window, so I modified it to check for that case.

	* libathena/gnome-icon-container-dnd.c:
	(create_selection_shadow):
	(set_gnome_icon_list_selection):
	libathena/gnome-icon-container.c:
	(icon_position):
	Renamed GNOME_ICON_CONTAINER_ICON_XOFFSET to
	GNOME_ICON_CONTAINER_ICON_X_OFFSET and
	GNOME_ICON_CONTAINER_ICON_YOFFSET to
	GNOME_ICON_CONTAINER_ICON_Y_OFFSET. We use an underscore between
	words in identifiers.

	* libathena/gnome-icon-container.c:
	(destroy):
	Added code to remove timeouts and idles when the container is
	destroyed.

	* libathena/athena-directory.h:
	libathena/athena-directory.c:
	(athena_file_get_info):
	Get rid of the direct call to get GnomeVFSFileInfo. All info is
	accessed through individual functions.
	(athena_file_get_size):
	(athena_file_get_type):
	(athena_file_get_mime_type):
	(athena_file_is_executable):
	(athena_file_is_symbolic_link):
	Added new accessor functions as needed.
	src/file-manager/fm-directory-view.c:
	(display_selection_info):
	src/file-manager/fm-icon-cache.c:
	(fm_icon_cache_get_icon_set_for_file):
	(fm_icon_cache_get_icon_for_file):
	Change code to use the accessors instead of get_info.
	
	* libathena/athena-gtk-macros.h:
	(ATHENA_ASSIGN_MUST_OVERRIDE_SIGNAL):
	Changed macro to take a class pointer of the right type instead
	of taking both a casting macro name and a class pointer.
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class):
	Changed existing uses of macro to match.

	* src/file-manager/Makefile.am:
	src/file-manager/fm-icon-cache.c:
	src/file-manager/fm-default-file-icon.h:
	src/file-manager/fm-default-file-icon.c:
	Moved the default icon into its own file.

2000-01-24  John Sullivan <sullivan@eazel.com>

	* libathena/gnome-icon-container.c:
	(button_event_modifies_selection): New function, encapsulates idea
	of which button events modify the selection. Formerly this was
	done in several places and the answer was "those with the Control
	key down". Now the answer is "those with the Control or Shift key
	down" to match list view (and traditional, i.e. Mac) behavior more
	closely.
	(button_press_event), (button_release_event),
	(handle_icon_button_press): Deployed
	button_event_modifies_selection.
	(button_release_event): Check whether modifying selection and
	don't activate on single-click if so.
	(kbd_move_to): Just added comment.
	
2000-01-22  Havoc Pennington  <hp@pobox.com>

	* configure.in: check for libwww

	* components/html/Makefile.am: add libwww flags

2000-01-21  Maciej Stachowiak  <mjs@eazel.com>

	* src/file-manager/fm-directory-view-icons.c: Added background and
	item context click menus. Right now they only work for the
	directory view, and contain only insensitive items. This needs
	more work but I wanted to check in something basic.	

2000-01-21  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/Makefile.am (INCLUDES): fix to gnomecanvaspixbuf

	* src/Makefile.am (INCLUDES): fix to gnomecanvaspixbuf

	* libathena/Makefile.am (INCLUDES): fix to use gnomecanvaspixbuf
	flags

	* configure.in: Look for gnomecanvaspixbuf properly (via
	gnome-config)
	
2000-01-21  John Sullivan <sullivan@eazel.com>

	* src/ntl-window.c: Move Preferences item to Edit menu, its
	traditional home.

2000-01-21  John Sullivan <sullivan@eazel.com>

	Make icons appear in list view, and do some of the restructuring
	necessary for supporting multiple icon sizes.

	* src/file-manager/fm-icon-cache.h:
	Added enum for Athena's 7 levels of zooming.
	Added #defines for nominal icon sizes matching these 7 levels.
	(fm_icon_cache_get_icon): Renamed to fm_icon_cache_get_icon_for_file,
	and changed parameters to take a AthenaFile and a size (in pixels)
	instead of a GnomeVFSFileInfo.
	
	* src/file-manager/fm-icon-cache.c
	Changed static vars fm_default_file_icon_width & height to use new
	ATHENA_ICON_SIZE_STANDARD #define
	(fm_icon_cache_get_icon_for_file): Renamed to 
	fm_icon_cache_get_icon_set_for_file to avoid collision with changed
	public API call. Also changed parameters to take a AthenaFile instead
	of a GnomeVFSFileInfo.
	(fm_icon_cache_get_icon): Renamed to fm_icon_cache_get_icon_for_file,
	and changed parameters to take a AthenaFile and a size (in pixels)
	instead of a GnomeVFSFileInfo. If the size parameter is not the
	standard size, calls fm_icon_cache_scale to get a scaled icon.
	Eventually icons will be stored at various sizes, but for now we
	always scale.
	(fm_icon_cache_scale): New function, scales standard-sized GdkPixbuf
	to given size.

	* src/file-manager/fm-directory-view-icons.c:
	(add_icon_if_already_positioned), (add_icon_at_free_position):
	Updated callers of fm_icon_cache_get_icon, passing in
	ATHENA_ICON_SIZE_STANDARD.

	* src/file-manager/fm-directory-view-list.c:
	(struct _FMDirectoryViewListDetails): Add icon_size field.
	(fm_directory_view_list_initialize): Initialize icon_size field.
	(create_flist): Determine icon column width and row height from icon size.
	(add_to_flist): Change parameters to take FMDirectoryViewList
	instead of GtkFList, and remove FMIconCache parameter. Now calls
	install_icon.
	(fm_directory_view_list_add_entry): Update add_to_flist parameters.
	(install_icon): New function, gets an appropriately-sized icon for
	a AthenaFile and puts it into icon column in list.

2000-01-21  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window.[ch], src/ntl-window-msgs.c,
	  src/ntl-window-private.h: Add a specific flag to indicate reload,
	  and make use of it.

	* libathena/athena-directory.c: Allocate an extra byte in the
	  buffer, for safety's sake.
	* src/ntl-window-msgs.c: Fix back/fwd buttons.
	* src/ntl-window-msgs.c: Remove debugging printouts, and display
	  error dialogs.
	* src/ntl-window-msgs.c, src/ntl-window.h: Fix the bug that was
	  causing list view to be blank.

2000-01-21  Darin Adler  <darin@eazel.com>

	Started some cleanup of the icon view.

	* libathena/Makefile.am:
	libathena/gnome-icon-container-layout.c:
	libathena/gnome-icon-container-layout.h:
	libathena/gnome-icon-container.c:
	libathena/gnome-icon-container.h:
	src/file-manager/fm-directory-view-icons.c:
	src/file-manager/fm-directory-view-icons.h:
	Got rid of the GnomeIconContainerLayout.
	This was the old mechanism for saving and loading
	icon positions and we have a better signal-based one.
	Also made the new mechanism work more the way that
	Ettore had intended to make the layout work, where
	all the icons that have preassigned positions get
	positioned first, then the ones that are auto positioned.
	In the long run, we'll need something a bit fancier.

	* libathena/gnome-icon-container-dnd.c:
	libathena/gnome-icon-container.c:
	libathena/gnome-icon-container.h:
	libathena/gnome-icon-container-private.h:
	Change the priv pointer to be named details to match
	what we use in other places in Athena.

2000-01-21  John Sullivan <sullivan@eazel.com>

	Made list view activation work on single click, like icon view.

	* libathena/gtkflist.c
	(struct _GtkFListDetails): Added single_click_mode
	and button_down_time, renamed dnd_select_pending_row to
	button_down_row.
	Added #define MAX_CLICK_TIME, copied from gnome_icon_container.
	(gtk_flist_initialize): Initialize single_click_mode to TRUE
	(activate_row): New function, extracts code needed to activate
	an item from its row number.
	(gtk_flist_button_press): Save button_down_time, save
	button_down_row more often, use activate_row () for double-click.
	(gtk_flist_button_release): Activate on single click if single_click_mode
	is true, selection isn't being extended, mouse hasn't moved to a different 
	row, and not too much time has passed.
	(gtk_flist_motion): Deploy button_down_row name change.

2000-01-20  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container.c:
	Disabled the pernicious call to relayout in size_allocate.  We
	will want to do automatic layout when the window size changes, but
	this is the wrong level for it, it happens too frequently
	
2000-01-20  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window-msgs.c:
	Missed piece in last commit.

	John added this entry for Elliot, who made this change three
	hours later than his last checkin. The comment is from the
	cvs commit.

2000-01-20  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_activate_entry):
	Fixed double free that was causing lots of nasty errors in
	the file manager.
	(fm_directory_view_load_uri):
	Made the old directory hang around a bit longer when loading
	a new uri.
	(display_selection_info):
	(fm_directory_view_send_selection_change):
	(display_selection_info_idle_cb):
	Fixed a storage leak and broke out the selection change into
	its own function instead of mixing it with the status line.
	Also made the selection actually use URIs instead of just
	names for the selected items.

	* libathena/athena-directory.h:
	libathena/athena-directory.c:
	(athena_file_get_uri):
	Added this function that gets a URI (rather than just a
	leaf name).

	* libathena/athena-directory.c:
	(athena_directory_finalize):
	(athena_self_check_directory):
	Added more self checks and fixed a bug where a metadata
	change would get lost if you delete the directory too soon
	after making the change.

2000-01-20  John Sullivan  <sullivan@eazel.com>

	* libathena/gtkflist.c:
	* libathena/gtkflist.h:
	Move fields into details structure inside .c file.

2000-01-20  Jonathan Blandford  <jrb@redhat.com>

	* src/file-manager/fm-directory-view-list.c (column_clicked_cb):
	more initialization to clean up an warning.

2000-01-20  Darin Adler  <darin@eazel.com>

	* src/gnome-icon-container.c:
	(gnome_icon_container_xlate_selected):
	Fixed a bug where dragging an icon would cause the "kbd_selected"
	icon to scroll into view. Just passed FALSE instead of TRUE for
	"schedule_visibility".

	* libathena/athena-background.c:
	(athena_background_draw_flat_box):
	Tiny change, to fit our style rule against initializing.

2000-01-20  Jonathan Blandford  <jrb@redhat.com>

	* libathena/athena-background.c
	(athena_background_draw_flat_box): fix warning.

2000-01-20  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-uri-map.c: Async notification of navinfo - now we just need an async get_file_info call.
	* src/ntl-view.[ch]: Better error handling.
	* src/file-manager/fm-directory-view.c (display_selection_info): Send a 'selection change' request.

2000-01-19  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window-msgs.c: Totally rewrite the state changing machine. Now handles things slightly better.
	* src/ntl-types.h: Remove requesting_view from the navigation info.
	* src/ntl-window.h: Move all the state machine stuff into AthenaWindow itself.
	* src/ntl-window.c: Update for new 'stop doing stuff' API.

2000-01-20  Darin Adler  <darin@eazel.com>

	Store icon positions as "x,y" in ICON_POSITION instead of
	storing ICON_X and ICON_Y.

	Take first step in moving the directory view to use the opaque
	AthenaDirectory and AthenaFile instead of using gnome-vfs
	directly. This will separate the controller from the model:
	FMDirectoryView is a controller and AthenaDirectory a model.

	* src/file-manager/fm-directory-view-icons.c:
	(add_to_icon_container):
	(fm_directory_view_icons_icon_moved_cb):
	Store icons positions as "x,y" in ICON_POSITION instead of storing
	separate numbers in ICON_X and ICON_Y.

	* libathena/athena-directory.h:
	libathena/athena-directory.c:
	(athena_directory_get_uri):
	Added a new call needed to replace fm_directory_view_get_uri.
	(athena_directory_get_file_metadata):
	(athena_directory_set_file_metadata):
	(athena_file_get_metadata):
	(athena_file_set_metadata):
	Moved the calls for getting and setting file metadata into the
	file objects.
	(athena_directory_new_file):
	(athena_file_get_info):
	Added temporary interfaces for the current situation where we're
	dealing with both AthenaFile and GnomeVFSFileInfo objects at
	once.
	(athena_directory_finalize):
	Detach and unref all the files when the directory is destroyed.
	(athena_file_unref):
	(athena_file_get_name):
	Implemented these functions now that we are using them.

	* src/file-manager/fm-directory-view.h:
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_add_entry):
	(fm_directory_view_activate_entry):
	(display_selection_info):
	(fm_directory_view_get_selection):
	src/file-manager/fm-directory-view-icons.c:
	(add_to_icon_container):
	(fm_directory_view_icons_icon_moved_cb):
	(dm_directory_view_icons_add_entry):
	(fm_directory_view_icons_get_selection):
	(icon_container_activate_cb):
	src/file-manager/fm-directory-view-list.c:
	(add_to_flist):
	(fm_directory_view_list_add_entry):
	Change all the code to work with AthenaFile instead of
	GnomeVFSFileInfo, except for the parts of FMDirectoryView dealing
	with the directory_list.

	* src/file-manager/fm-directory-view.h:
	src/file-manager/fm-directory-view.c:
	(athena_file_date_as_string):
	(athena_file_size_as_string):
	(athena_file_type_as_string):
	libathena/athena-directory.h:
	libathena/athena-directory.c:
	(athena_file_get_date_as_string):
	(athena_file_get_size_as_string):
	(athena_file_get_type_as_string):
	Moved and renamed these functions and made them work on
	AthenaFile objects.
	
2000-01-20  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c: (display_selection_info):
	Made selection info in status bar use name of item when only one
	item. Also reorganized copy/pasted code in this function.

2000-01-20  Darin Adler  <darin@eazel.com>

	Made backgrounds work better in the list view. Gradients still
	won't work because the list view draws its background with calls
	to gdk_draw_rectangle explicitly, and doesn't call the functions
	in the style, so it can't be overridden.

	* libathena/athena-background.c:
	(athena_background_set_widget_style): Fix bug where the list
	items were not highlighting properly. Set only the NORMAL and
	ACTIVE background color. That way we don't screw up the SELECTED
	and other background colors.

2000-01-20  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c:
	(athena_directory_get_file_metadata): Fix segfault that was
	happening when viewing a folder without a metafile.

2000-01-19  Darin Adler  <darin@eazel.com>

	The list view now has a background color just like the
	icon view does. Some more code could be saved, but that's
	a refactoring for another time.

	* libathena/gtkflist.c: Added support for receiving dragged
	colors to set the background of the list.

	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_initialize_class):
	(fm_directory_view_list_clear):
	(fm_directory_view_list_background_changed_cb): Added code to load
	and save the background color from metadata.

	* libathena/athena-background.c: Put the background color in
	all the bg and base colors in the style instead of putting it only
	in bg[GTK_STATE_NORMAL].

	* libathena/athena-gtk-macros.h:
	(ATHENA_DEFINE_CLASS_BOILERPLATE): Make sure that the macro only
	evaluates the parent_class_type argument once, like it says in the
	comment. (ATHENA_CALL_PARENT_CLASS): Fix this macro so it can
	be used in places where an expression is expected.

	* RENAMING: Added this file to list name changes we are
	planning for the future.

	* libathena/gtkflist.h: libathena/gtkflist.c:
	src/explorer-location-bar.h: src/explorer-location-bar.c:
	Minimized includes.

	* src/ntl-index-panel.c:
	src/file-manager/fm-directory-view-icons.c: Fixed some comments
	and formatting.

2000-01-19  Darin Adler  <darin@eazel.com>

	Icon positions are now written out when you drag an icon,
	and read in when you visit a directory. But the code then
	immediately re-lays out the icons, so the position is lost!

	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_icon_moved_cb):
	(fm_directory_view_icons_initialize): (add_container_icon): Save
	icon position when an icon is moved. Get icon position when an
	icon is first created.

	* libathena/athena-directory.c:
	(athena_directory_get_metadata_from_node):
	(athena_directory_get_metadata):
	(athena_directory_create_metafile_tree_root):
	(athena_directory_get_metadata):
	(athena_directory_set_metadata):
	(athena_directory_get_file_metadata):
	(athena_directory_set_file_metadata): Added the routines to get
	and set metadata for individual files.

	* libathena/athena-string.h: libathena/athena-string.c:
	(athena_eat_strcmp): (athena_string_to_int):
	(athena_eat_string_to_int): Made new string functions that free
	the existing strings, and a function to convert an int to a
	string.

	* libathena/gnome-icon-container.h:
	libathena/gnome-icon-container.c: (move_icon): (class_init):
	(handle_icon_button_press): Added context_click_background and
	icon_moved signals, and renamed context_click to
	context_click_icon.

	* configure.in: Turned -Wunused back on. I had to turn -W off,
	but I think it's worth it.

2000-01-19  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	Added #include <libgnomevfs/gnome-vfs-file-info.h>
	(fm_directory_view_populate), (display_pending_entries):
	Bump refcount on file info before adding it to directory.
	(fm_directory_view_load_uri): Destroy directory list
	before setting it to NULL. With previous change, this
	should prevent leaking GnomeVFSFileInfos and their
	lists.

2000-01-19  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c: (athena_directory_finalize):
	(athena_directory_try_to_read_metafile):
	(athena_directory_read_metafile):
	(athena_directory_try_to_write_metafile):
	(athena_directory_write_metafile):
	(athena_directory_construct_alternate_metafile_uri):
	(athena_directory_new): After Andy explained his change to me, I
	realized that it would always write the metafile in the alternate
	place if there was no pre-existing metafile. So I changed the
	logic. The new rule is: read the metafile from the alternate
	location first. If we find it there, write it back
	there. Otherwise, try to write in the directory itself. If that
	fails, write it in the alternate location instead.

	* libathena/athena-directory.c:
	(athena_directory_get_metadata): Allow get_metadata on a NULL
	AthenaDirectory and return NULL for data.

2000-01-19  Darin Adler  <darin@eazel.com>

	Allow changing the background of the icon view by dropping colors
	on the icon view.

	* libathena/gnome-icon-container-dnd.h:
	libathena/gnome-icon-container-dnd.c:
	(gnome_icon_container_position_shadow): (drag_data_received_cb):
	(gnome_icon_container_ensure_drag_data): (drag_motion_cb):
	(drag_drop_cb): (gnome_icon_container_receive_dropped_icons):
	(gnome_icon_container_free_drag_data): (drag_leave_cb): Added
	support for receiving dropped colors to change the background of a
	GnomeIconContainer.

	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class):
	(fm_directory_view_icons_clear):
	(fm_directory_view_icons_background_changed_cb): Added code to
	load and save the background color from metadata.

	* libathena/gdk-extensions.c: (athena_gradient_new): Changed
	athena_gradient_new to handle NULLs in the same way that the
	rest of the gradient functions do instead of NULL being an illegal
	input value.

	* src/file-manager/fm-directory-view.h:
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): (fm_directory_view_destroy):
	(fm_directory_view_get_model): (fm_directory_view_load_uri): Added
	a AthenaDirectory object to each directory view, accessed by
	subclasses with a call to fm_directory_view_get_model.

	* libathena/athena-gtk-extensions.h:
	libathena/athena-gtk-extensions.c:
	(gnome_icon_container_dropped_icon_feedback):
	(athena_gdk_selection_data_copy_deep): Added deep versions of
	these GtkSelectionData functions.

	* libathena/athena-gtk-macros.h:
	(ATHENA_DEFINE_GET_TYPE_FUNCTION):
	(ATHENA_DEFINE_CLASS_BOILERPLATE): Added definition and
	initialization of the parent_class global to
	ATHENA_DEFINE_GET_TYPE_FUNCTION and renamed it to
	ATHENA_DEFINE_CLASS_BOILERPLATE.

	* libathena/athena-background-canvas-group:
	(athena_background_canvas_group_initialize_class):
	libathena/athena-background.c:
	(athena_background_initialize_class):
	libathena/athena-directory.c:
	(athena_directory_initialize_class): src/ntl-index-panel.c:
	(athena_index_panel_initialize_class):
	src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class):
	src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_initialize_class):
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class): Take advantage of the new
	ATHENA_DEFINE_CLASS_BOILERPLATE and get rid of existing code to
	set up parent_class.

	* libathena/gnome-icon-container-dnd.h:
	libathena/gnome-icon-container-dnd.c:
	libathena/gnome-icon-container-layout.h:
	libathena/gnome-icon-container-layout.c:
	libathena/gnome-icon-container.c: Minimized includes.

2000-01-18  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container.c
	made icon centered in cell by setting "x_set" pixbuf property so
	it listens to our offset also, adjusted x_offset constant
	* libathena/gnome-icon-container-dnd.c
	made shadow be centered properly by taking difference between
	cellwidth and iconwidth into account
	
2000-01-18  Ettore Perazzoli  <ettore@helixcode.com>

	* src/file-manager/dfos-xfer.c (xfer_info_destroy): Removed `#if
	0'ed out function.

	* src/ntl-uri-map.c (athena_navinfo_new): Use
	`gnome_vfs_file_info_unref()' instead of
	`gnome_vfs_file_info_destroy()'.

2000-01-18  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-private.h:
	added "button_down_time" field to private data structure
	* libathena/gnome-icon-container.c
	made it not activate objects if the button was held down too long
	by remember the mouse down time and comparing it with the up time

2000-01-18  John Sullivan <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_load_uri): Set directory list to NULL
	but don't destroy it; this fixes crash entering a directory
	and then going up. Will ask Ettore about real fix.

2000-01-18  John Sullivan <sullivan@eazel.com>

	* src/ntl-window-msgs.c:
	(athena_window_refresh_title): Sets the window title to
	Athena: x, where x is short name of current location.
	(athena_window_change_location_internal): Call
	athena_window_refresh_title.

2000-01-18  John Sullivan <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(display_selection_info): Call selection "items" rather than
	"files" because users distinguish directories from files.

2000-01-18  John Sullivan <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.h:
	(enum _FMDirectoryViewSortType): added FM_DIRECTORY_VIEW_SORT_NONE
	and FM_DIRECTORY_VIEW_SORT_BYMTIME
	(fm_directory_view_sort): added reverse_sort parameter.
	(athena_file_date_as_string):
	(athena_file_size_as_string): Changed parameter for these two
	functions to be GnomeVFSFileInfo so they can handle special cases better.
	(athena_file_type_as_string): New function
	
	* src/file-manager/fm-directory-view.c
	(stop_load): Removed code resetting directory_list and current_position.
	This was the wrong place for it, and resetting directory_list was leaking.
	(directory_load_cb): Changed commented assignment to assert.
	(fm_directory_view_load_uri): Reset directory_list (without leaking old
	value) and current_position here.
	(fm_directory_view_sort): Pass through new reverse_sort parameter to
	gnome_vfs_directory_view_sort; add new case for 
	FM_DIRECTORY_VIEW_SORT_BYMTIME; don't put directories first when sorting
	by name.
	(athena_file_date_as_string): Now takes a GnomeVFSFileInfo pointer
	instead of a time_t (assumes mtime, with comment explaining why).
	(athena_file_size_as_string): Now takes a GnomeVFSFileInfo pointer
	instead of a size; uses this to special-case "--" for directory size.
	(athena_file_type_as_string): New function, special-cases directories
	to return "directory", otherwise returns mime_type.
	
	* src/file-manager/fm-directory-view-list.h
	Added private details structure to FMDirectoryViewList.

	* src/file-manager/fm-directory-view-list.c
	Added _FMDirectoryViewListDetails struct, containing sort_type and
	sort_reversed.
	(fm_directory_view_initialize): initialize details struct.
	(column_clicked_cb): New function, sorts list by clicked column.
	If list already sorted by that column, reverses sort. Still need
	visual indicator of sort direction.
	(create_flist): Added Type column, tweaked column widths, added
	signal connection for "click_column"
	(add_to_flist): now passes GnomeVFSFileInfo to 
	athena_file_size_as_string and athena_file_date_as_string;
	uses new athena_file_type_as_string for type column.

2000-01-18  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-directory:
	* made reading metafile from directory where we don't have write
	permissions work by changing error-check to look in common place on
	any error instead of just access_denied.
	
2000-01-18  Andy Hertzfeld <andy@eazel.com>

	* libathena/athena-directory.c:
	fixed bug caused by Elliot where he used alloca but forgot to remove g_free
	
2000-01-18  Elliot Lee  <sopwith@redhat.com>

	* libathena/athena-gtk-macros.h: Since the prototypes for
	GtkObjectInitFunc and GtkClassInitFunc just have a 'gpointer' for the args,
	cast the given values to these function types, so that people can use the actual
	pointer types as arguments without receiving a warning.

	* src/ntl-index-panel.c: Change to match. Also set
	object_klass->destroy & object_klass->finalize to point to our
	implementation. Also remove unused variables
	(athena_index_panel_initialize,
	athena_index_panel_set_up_label).

	* libathena/athena-background.c, src/ntl-window-msgs.c,
	src/ntl-window.c, src/file-manager/fm-directory-icons.c: Remove
	unused variables.

	* src/ntl-window.h: Add a variable (unused) for future handling of content view loading.

	* libathena/libathena.h: Add an interim g_alloca.

	* libathena/athena-directory.c: Clean up a bit further, by
	removing the need for another if(), and using g_alloca instead of
	g_malloc.

2000-01-18  Darin Adler  <darin@eazel.com>

	* libathena/athena-directory.c:
	(athena_directory_read_metafile):
	(athena_directory_try_to_read_metafile):
	(athena_directory_write_metafile):
	(athena_directory_try_to_write_metafile):
	(athena_directory_switch_to_alternate_metafile_uri):
	(athena_directory_escape_slashes):
	(athena_make_directory_and_parents): Added first cut at code to
	put metafiles in the user's home directory if the directory is not
	accessible and you can't read and write a metafile in the
	directory itself. We'll have to refine this later to handle cases
	where you end up with two metafiles.

	* libathena/Makefile.am: libathena/athena-debug.h:
	libathena/athena-debug.c: Took trick for getting into the
	debugger and put it into a public header file so it can be used
	outside of the athena executable.

	* src/ntl-main.c: (stop_in_debugger):
	(athena_stop_after_default_log_handler): (main): Use the new
	calls from libathena to set up the drop into debugger for
	criticals and warnings.

	* src/file-manager/fm-main.c: (main): Minimized includes and used
	the new calls from libathena to set up the drop into debugger
	for criticals and warnings.

	* src/ntl-uri-map.c: (athena_navinfo_add_mapping):
	src/ntl-window.c: (athena_window_constructed):
	src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): (fm_directory_view_destroy):
	(notify_location_change_cb): (stop_location_change_cb):
	(fm_directory_view_sort): Removed some messages that aren't so
	useful.

	* libathena/ntl-view-frame.h: Minimized includes.
	* libathena/ntl-view-frame.c: Include "ntl-view-frame.h" first
	so it tests to see that it has sufficient includes in it.

	* src/ntl-view.c: (athena_view_load_client): Changed function so
	that NULL for an iid is allowed and simply results in a failed
	load instead of being illegal.

	* src/ntl-window-msgs.c:
	(athena_window_change_location_internal): src/ntl-window.c:
	(athena_window_up): Got rid of calls to gnome_vfs_uri_destroy;
	use gnome_vfs_uri_unref instead since it's safer and Federico is
	getting rid of gnome_vfs_uri_destroy.

	* src/file-manager/fm-directory-view-icons.h:
	src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_new):
	src/file-manager/fm-directory-view-list.h:
	src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_new):
	src/file-manager/fm-directory-view.h:
	src/file-manager/fm-directory-view.c: (fm_directory_view_new):
	Minimized includes and got rid of the unused _new functions.

	* libathena/athena-directory.h: Added a missing 2000 copyright
	date.

2000-01-17  John Sullivan  <sullivan@eazel.com>
	First steps towards making the list view non-degenerate.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	(athena_file_date_as_string): New function, returns string suitable
	for displaying in a list view column.
	(athena_file_size_as_string): New function, calls newly-publicized
	gnome_vfs_file_size_to_string.
	(display_selection_info): Now calls gnome_vfs_file_size_to_string
	instead of redoing the string-creation code here.

	* src/file-manager/fm-directory-view-list.c
	(create_flist): Creates new columns for icon, size, and mod date.
	(add_to_flist): Fills columns for size & mod date. Icon column
	is empty for the moment. Columns do not yet sort.

2000-01-17  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	made dragging work right by using gdk_pixbuf_render_pixmap_and_mask
	to make a pixmap and mask to pass to the gtk dragging machinery
	* libathena/gnome-icon-container.c:
	changed xoffset constant for the icon mode positioning to make the
	feedback box line up with the icon.
	
2000-01-16  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-dnd.c:
	made dragging use an image of the canvas item dragged
	still disabled, though, because it's not handling the mask yet
	
2000-01-16  Andy Hertzfeld <andy@eazel.com>

	* libathena/gnome-icon-container-private.h:
	added "single_click_mode" boolean
	
	* libathena/gnome-icon-container.h
	made single-click open optionally work by adding code in
	button_release_event to activate the icon if appropriate
	enabled single-click mode by default
	
	* libathena/gnome-icon-container-dnd.c
	made dragging to desktop and else work by cleaning up code in set_uri_list_selection
	did work toward better dragging feedback using an image but didn't finish that yet
	
2000-01-15	Andy Hertzfeld <andy@eazel.com>

	*libathena/gnome-icon-container-dnd.c:
	made dragging files within a window actually work graphically, and set the stage for dragging between windows
	made drag_leave_cb no longer delete the selection_list
	made drag_data_received_cb delete selection if present instead of asserting it's gone
	made drag_drop_cb use the selection_list to determine the directory we're dragging from,
	if it's the same, move within the window, otherwise copy between (coming soon)
	didn't update positions in the metafile yet
	
2000-01-14  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(display_selection_info):
	Fixed a killer typo that caused selection to crash.

2000-01-14  John Sullivan  <sullivan@eazel.com>

	Finished refactoring FMDirectoryView and subclasses. I
	don't plan any more major reworking on these files, so
	feel free to change things without fear of stomping on
	me.

	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view-icons.h:
	* src/file-manager/fm-directory-view-list.c:
	* src/file-manager/fm-directory-view-list.h:
	Moved icon_layout and icons_not_in_layout fields from
	FMDirectoryView to FMDirectoryViewIcons (where they hide
	inside a details structure in fm-directory-view-icons.c)
	Commented .h files and all public functions in .c files.
	Removed unnecessary #includes.
	Changed signatures on many static functions in subclasses
	to take subclass type instead of superclass type.
	(display_selection_info_idle_cb):
	(fm_directory_view_get_selection): 
	(fm_directory_view_icons_get_selection):
	(fm_directory_view_list_get_selection):
	(fm_directory_view_notify_selection_changed):
	New functions used to handle subclasses telling
	superclass about the selection, so superclass can
	display info about it.
	(display_icon_container_selection_info_idle_cb):
	(display_flist_selection_info_idle_cb): Removed these
	old functions in favor of new cleaner mechanism.
	(flist_activate_cb), (icon_container_activate_cb): Moved
	common code into new superclass function...
	(fm_directory_view_activate_entry): New home of that common
	code.

	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	Moved remaining fields of FMDirectoryView inside a private 
	details structure so they can change without affecting clients.
	(fm_directory_view_get_uri): (fm_directory_view_get_view_frame): 
	New functions to use instead of peeking at structure directly.
	(init): (class_init): (fm_directory_view_get_type): Renamed
	the former two functions and removed the latter while
	deploying ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
		
	* src/file-manager/fm-main.c:
	(make_obj): Use fm_directory_view_get_view_frame() where it
	had been peeking at structure directly.

2000-01-14  Darin Adler  <darin@eazel.com>

	Fixed our handling of warnings and criticals.

	* src/ntl-main.c: Added new functions that stop in the debugger
	when you hit a g_warning or a critical error, only if the
	environment variable ATHENA_DEBUG is set. This is better than
	the way the old code made everything fatal, since it doesn't do
	anything if the debugger isn't running.

2000-01-14  Darin Adler  <darin@eazel.com>

	Turned on gradients for backgrounds.
	
	* src/ntl-index-panel.c:
	(athena_index_panel_drag_data_received): Use the new
	accept_dropped_color function in AthenaBackground instead of
	code in here. (athena_index_panel_background_changed):
	(athena_index_panel_set_up_info): Save background to metadata
	when the AthenaBackground object emits the changed signal.

	* libathena/athena-background.h:
	libathena/athena-background.c:
	(athena_background_accept_dropped_color): Moved logic about
	dropping a color coupon to change the background into the
	AthenaBackground class. This includes a first cut at the rules
	about gradients.

	* libathena/athena-background.c:
	(athena_background_get_color): Implemented this missing
	function. It's used by the code in index panel now to save the
	current background.

	* libathena/athena-background.c:
	(athena_background_draw_flat_box): Implemented gradient fills
	through the GtkStyle subclass.

	* src/ntl-main.c: (main): Made criticals and warnings be always
	fatal. Next step is to make them drop into the debugger, but not
	result in a core dump if the debugger is not running.
	
2000-01-14  Darin Adler  <darin@eazel.com>

	* src/ntl-index-panel.c: (athena_index_panel_set_up_label):
	Changed code to use the new gnome_vfs_uri_extract_short_name
	instead of its own private function.

2000-01-14  Darin Adler  <darin@eazel.com>

	First cut at some actual saving of metadata.
	Neither the interface nor the implementation is great yet.
	But it's a start.

	* libathena/Makefile.am:
	libathena/athena-directory.h:
	libathena/athena-directory.c:
	libathena/athena-lib-self-check-functions.h:
	libathena/athena-lib-self-check-functions.c:
	src/file-manager/Makefile.am:
	src/file-manager/fm-directory-protected.h:
	src/file-manager/fm-directory.h:
	src/file-manager/fm-directory.c:
	src/file-manager/fm-vfs-directory.h:
	src/file-manager/fm-vfs-directory.c:
	Moved the old FMDirectory class into the library and named it
	AthenaDirectory. Added functions for reading and writing
	metadata.

	* src/ntl-index-panel.c: Added the code to save the index panel's
	background color in metadata.
	
	* libathena/Makefile.am: Added gnome-vfs and gnome-xml,
	since the new code uses them.

	* libathena/athena-self-checks.h:
	libathena/athena-lib-self-check-functions.h:
	libathena/athena-lib-self-check-functions.c:
	src/athena-self-check-functions.h:
	src/athena-self-check-functions.c:
	Added macros to the self-check framework so the list of self check
	functions appears in exactly one place for each directory/module.

	* src/ntl-index-panel.h: src/ntl-index-panel.c: Moved the fields
	of the index panel inside a private details structure so they can
	change without affecting clients.

	* libathena/athena-background.c: Just some reformatting.

2000-01-13  John Sullivan  <sullivan@eazel.com>

	More work pushing code from FMDirectoryView into subclasses.
	Almost done now.

	* src/file-manager/fm-directory-view.h:
	Removed enum _FMDirectoryViewMode and its typedef.
	Removed field entries_to_display.
	Removed transition section holding function prototypes that
	were on their way into subclasses.
	(fm_directory_view_is_valid_mode): Removed.
	(fm_directory_view_get_mode): Removed.
	(fm_directory_view_set_mode): Removed.

	(fm_directory_view_begin_adding_entries):  New function & signal.
	(fm_directory_view_add_entry):  New function & signal.
	(fm_directory_view_done_adding_entries):  New function & signal.
	(fm_directory_view_done_sorting_entries):  New function & signal.
	(fm_directory_view_begin_loading): New function & signal.

	(fm_directory_view_display_selection_info): Newly exposed function.

	* src/file-manager/fm-directory-view.c:
	Removed some now-unnecessary #includes.
	Added constants for new signals to enum.
	Removed global variable for icon cache in favor of already-extant
	fm_get_current_icon_cache().
	Removed all references to entries_to_display.
	(display_selection_info): Renamed to 
	fm_directory_view_display_selection_info now that it's public.
	(view_has_icon_container): Removed.
	(get_icon_container): Moved into subclass FMDirectoryViewIcons.
	(add_to_icon_container): Moved into subclass FMDirectoryViewIcons.
	(load_icon_container): Moved into subclass FMDirectoryViewIcons.
	(display_icons_not_in_layout): Moved into subclass FMDirectoryViewIcons.
	(setup_base_uri): Moved into subclass FMDirectoryViewIcons (and renamed
	to set_up_base_uri).
	(view_has_flist): Removed.
	(get_flist): Moved into subclass FMDirectoryViewList.
	(add_to_flist): Moved into subclass FMDirectoryViewList.
	(class_init): Signal initialization code for begin_adding_entries,
	add_entry, done_adding_entries, done_sorting_entries, and begin_loading.
	(init): Removed mode-setting line.
	(display_pending_entries): Replaced the bulk of this function with three
	new signals: begin_adding_entries, add_entry, done_adding_entries. The
	loop structure and GnomeVFSFileInfo retrieving part remains.
	(directory_load_cb): Deployed new signal begin_loading where setup_base_uri
	used to be.
	(fm_directory_view_is_valid_mode): Removed.
	(fm_directory_view_get_mode): Removed.
	(fm_directory_view_set_mode): Removed.
	(fm_directory_view_begin_adding_entries): New function, emits signal.
	(fm_directory_view_add_entry): New function, emits signal.
	(fm_directory_view_done_adding_entries): New function, emits signal.
	(fm_directory_view_done_sorting_entries): New function, emits signal.
	(fm_directory_view_begin_loading): New function, emits signal.
	(fm_directory_view_sort): Replaced some icon-container-specific
	code with fm_directory_view_done_sorting_entries().

	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_initialize_class): Wired up signal handlers
	for add_entry, done_adding_entries, done_sorting_entries, and begin_loading.
	(fm_directory_view_icons_initialize): Removed set_mode call.
	(display_icons_not_in_layout): Moved here from superclass FMDirectoryView.
	(get_icon_container): Moved here from superclass FMDirectoryView.
	(add_to_icon_container): Moved here from superclass FMDirectoryView.
	(load_icon_container): Moved here from superclass FMDirectoryView.
	(set_up_base_uri): Moved here from superclass FMDirectoryView.
	(fm_directory_view_icons_add_entry): New signal handler function, code 
	taken and simplified from superclass FMDirectoryView.
	(fm_directory_view_icons_done_adding_entries): New signal handler 
	function, code taken and simplified from superclass FMDirectoryView.
	(fm_directory_view_icons_done_sorting_entries): New signal handler 
	function, code taken and simplified from superclass FMDirectoryView.
	(fm_directory_view_icons_begin_loading): New signal handler function, 
	code taken and simplified from superclass FMDirectoryView.
	
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_initialize_class): Wired up signal handlers
	for begin_adding_entries, add_entry, and done_adding_entries
	(fm_directory_view_list_initialize): Removed set_mode call.
	(get_flist): Moved here from superclass FMDirectoryView.
	(add_to_flist): Moved here from superclass FMDirectoryView.
	(fm_directory_view_list_begin_adding_entries): New signal handler 
	function, code taken and simplified from superclass FMDirectoryView.
	(fm_directory_view_list_add_entry): New signal handler function, code 
	taken and simplified from superclass FMDirectoryView.
	(fm_directory_view_list_done_adding_entries): New signal handler 
	function, code taken and simplified from superclass FMDirectoryView.	

2000-01-13  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-gtk-macros.h: Defined macros
	for use when a signal must be overridden by subclasses.
	* src/file-manager/fm-directory-view.c: Deployed these
	new macros for the "clear" signal. 
	ATHENA_IMPLEMENT_MUST_OVERRIDE_SIGNAL is outside any 
	function, and
	(class_init): ATHENA_MUST_OVERRIDE_SIGNAL is in here.
	(fm_directory_view_real_clear): Eliminated this in favor
	of the above macros.
	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_get_type): Replaced function with
	ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_icons_init): Renamed to 
	fm_directory_view_icons_initialize and standardized parameters 
	to work with ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_icons_class_init): Renamed to 
	fm_directory_view_icons_initialize_class and standardized 
	parameters to work with ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_icons_destroy): Deployed
	ATHENA_CALL_PARENT_CLASS macro.
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_get_type): Replaced function with
	ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_list_init): Renamed to 
	fm_directory_view_list_initialize and standardized parameters 
	to work with ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_list_class_init): Renamed to 
	fm_directory_view_list_initialize_class and standardized 
	parameters to work with ATHENA_DEFINE_GET_TYPE_FUNCTION macro.
	(fm_directory_view_list_destroy): Deployed
	ATHENA_CALL_PARENT_CLASS macro.
	
2000-01-12  John Sullivan  <sullivan@eazel.com>

	More work at pushing appropriate fm_directory_view code
	into subclasses.

	* src/file-manager/fm-directory-view.c:
	(class_init): Register "clear" signal, make 
	fm_directory_view_real_clear be default handler.
	(fm_directory_view_real_clear): New function, does
	nothing but complain when it's called. (I'm going to
	replace this with a debug-only mechanism soon.)
	(fm_directory_view_clear): New function, emits "clear" signal.
	(fm_directory_view_load_uri): Replaced "if icons clear this way,
	if list clear that way" code with call to fm_directory_view_clear.
	(mode_uses_flist): Eliminated, wrapped into only remaining caller
	view_has_flist (which will itself go away soon).
	(mode_uses_icon_container): Eliminated, wrapped into only remaining caller
	view_has_icon_container (which will itself go away soon).

	* src/file-manager/fm-directory-view-icons.c:
	(fm_directory_view_icons_clear): New function, erases icon container.
	(fm_directory_view_icons_init): Replace fm_directory_view's
	"clear" signal handler with fm_directory_view_icons_clear
	(fm_directory_view_icons_get_icon_layout): Moved to here.
	(fm_directory_view_icons_set_icon_layout): Moved to here.
	(fm_directory_view_icons_line_up_icons): Moved to here.
	
	* src/file-manager/fm-directory-view-list.c:
	(fm_directory_view_list_clear): New function, erases list contents.
	(fm_directory_view_list_init): Replace fm_directory_view's
	"clear" signal handler with fm_directory_view_list_clear
	
	* src/file-manager/fm-directory-view.h:
	(fm_directory_view_clear): Added "clear" signal, and
	fm_directory_view_clear prototype.
	(fm_directory_view_icons_get_icon_layout): Moved out of here.
	(fm_directory_view_icons_set_icon_layout): Moved out of here.
	(fm_directory_view_icons_line_up_icons): Moved out of here.
	
	* src/file-manager/fm-directory-view-icons.h:
	(fm_directory_view_icons_get_icon_layout): Moved to here.
	(fm_directory_view_icons_set_icon_layout): Moved to here.
	(fm_directory_view_icons_line_up_icons): Moved to here.

2000-01-12  John Sullivan  <sullivan@eazel.com>

	* src/ntl-window-msgs.c (athena_window_load_content_view_menu):
	Made option menu say "View as Icons" (e.g.) instead of just "Icons"

2000-01-11  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-window:
	added a debug menu, and it's first item to show a color picker to test dropping colors
	
2000-01-11  John Sullivan  <sullivan@eazel.com>

	Started moving icon-specific and list-specific code
	into the subclasses. As a transition step, added some
	private prototypes to the .h file (clearly marked).	
	
	* src/file-manager/fm-directory-view.c:
	(setup_flist), (setup_icon_container): eliminated completely.
	(display_icon_container_selection_info_idle_cb), 
	(icon_container_selection_changed_cb), (icon_container_activate_cb),
	(create_icon_container), (display_flist_selection_info_idle_cb),
	(flist_activate_cb), (flist_selection_changed_cb), 
	(create_flist): moved out.
	(fm_directory_view_set_mode): removed the guts, which are now
	in the init functions for the subclasses; now just sets the
	field (which will go away eventually).
	* src/file-manager/fm-directory-view.h:
	(add_to_flist), (display_selection_info), (get_flist),
	(get_icon_container), (load_icon_container): temporarily
	added to .h file.
	* src/file-manager/fm-directory-view-icons.c:
	(display_icon_container_selection_info_idle_cb), 
	(icon_container_selection_changed_cb), (icon_container_activate_cb),
	(create_icon_container): moved in.
	(fm_directory_view_icons_init): Now creates icon_container here instead of
	in fm_directory_view_set_mode (which will eventually go away).
	* src/file-manager/fm-directory-view-list.c:
	(display_flist_selection_info_idle_cb),	(flist_activate_cb), 
	(flist_selection_changed_cb), (create_flist): moved in.
	(fm_directory_view_list_init): Now creates flist here instead of
	in fm_directory_view_set_mode (which will eventually go away).

	* src/ntl-window.c:
	(real_athena_window_set_content_view): Renamed to
	athena_window_real_set_content_view. Also added
	self as an author.

2000-01-11  Darin Adler  <darin@eazel.com>

	AthenaBackground is now used for the index panel background.

	* libathena/athena-background.c:
	(athena_background_attach_to_canvas):
	(athena_get_widget_background):
	(athena_gtk_style_get_default_class):
	(athena_gdk_window_update_sizes):
	(athena_background_draw_flat_box):
	(athena_background_get_gtk_style_class):
	(athena_background_set_widget_style):
	(athena_background_set_up_canvas):
	(athena_widget_background_changed):
	(athena_get_widget_background):
	Added new code that changes the background of a widget by
	modifying the GtkStyle. For solid colors and tiled images we
	can just modify the GtkStyle. For gradients we need to make
	a GtkStyle subclass.
	
	* libathena/athena-background.h:
	(athena_background_attach_to_canvas):
	(athena_get_widget_background):
	Changed the old interface that was canvas-specific, to a new one
	that allows attacking a background to any widget.

	* src/ntl-index-panel.h:
	Now that the background is attached to the widget, we don't need
	a background field in AthenaIndexPanel.

	* src/ntl-index-panel.c:
	(athena_index_panel_set_up_background)
	(athena_index_panel_finalize):
	(athena_index_panel_drag_data_received):
	(athena_index_panel_set_up_info):
	Changed the index panel to use AthenaBackground.

	* libathena/athena-background-canvas-group.h:
	libathena/athena-background-canvas-group.c:
	(athena_background_canvas_group_get_background):
	(athena_background_canvas_group_set_background):
	Moved the code that manages the background object out of the
	canvas group code, since we can now attach a background to
	any widget.

	* libathena/gdk-extensions.c:
	(athena_gdk_color_parse_with_white_default): Changed this helper
	to accept NULLs and return the default instead of prohibiting
	NULL. This is consistent with the gradient's use of NULL to
	represent the default color.

2000-01-11  John Sullivan  <sullivan@eazel.com>

	* libathena/athena-gtk-extensions.h:
	* libathena/athena-gtk-extensions.c:
	(athena_gtk_signal_connect_free_data): New function,
	convenience wrapper for gtk_signal_connect_full where
	the destroy-function is g_free() and the other extra
	values are the defaults.
	* src/ntl-window-msgs.c: (athena_window_load_content_view_menu):
	Use athena_gtk_signal_connect_free_data to avoid leaking the menu item's
	signal's copy of the iid string. 

2000-01-11  John Sullivan  <sullivan@eazel.com>

	Content view menu now works (can switch between List and Icon views).

	* src/ntl-window-msgs.c:
	(athena_window_load_content_view): Made it return the new
	content view, so callers don't need a load_info structure to
	determine the new view. Also made it accept NULL for
	requesting_view.
	(view_menu_switch_views_cb): New function, callback for when
	a view is chosen from the list of available content views.
	Elliot told me that this requires further work, so I checked
	it in with comments for later fixing by Elliot or someone
	else who understands the loading process better.
	(athena_view_load_content_view_menu): Added explicit
	parameter for AthenaNavigationInfo for clarity (had been
	getting this from deep in window temporary state guts).
	Connected view_menu_switch_views_cb to menu items.
	* src/ntl-window.c: 
	(athena_window_set_arg): Fixed bug in ARG_CONTENT_VIEW case where
	new view was sometimes being added to view hierarchy twice. Then
	moved this code into...
	(real_athena_window_set_content_view): New function, implements
	guts of content-view changing so set_arg doesn't have a big block
	of code in a switch statement.
	(athena_window_set_content_view): Moved the gtk_widget_show call
	from here to real_athena_window_set_content_view so it happens
	even if set_arg is called from elsewhere.
	(gtk_option_menu_do_resize): Removed this
	obsolete function (I removed the callers yesterday but forgot this).

2000-01-11  Darin Adler  <darin@eazel.com>

	* libathena/ntl-view-frame.c:	Fixed typos and oversights in
	Maciej's check-in. He didn't compile his changes :-(

2000-01-11  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.c, libathena/ntl-view-frame.h: Redo
	signals the conventional way, to avoid array size mismatches in
	the future.

2000-01-10  Maciej Stachowiak  <mjs@eazel.com>

	* docs/architecture.txt: Some documentation on the athena
	architecture including a block diagram and some conrol flow
	explanations. Needs editing for both style and technical
	completeness/accuracy, but it's a start.

	* libathena/gnome-icon-container.c (handle_icon_button_press):
	Reorder code so "context_click" is actually emitted on a button 3
	press.

	* src/file-manager/fm-main.c,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view.h: Changed FMDirectoryView to
	use a AthenaViewFrame rather than inheriting from one.

	* libathena/ntl-view-frame.c (athena_view_frame_class_init):
	Fixed marshall type for "stop_location_change" signal. How could
	this ever have worked?

	* src/ntl-view.c (athena_view_load_client): Once an appropriate
	component type is found, do not keep looping.

2000-01-10  John Sullivan  <sullivan@eazel.com>

	First step at splitting the directory view into separate
	icon and list views. List view compiles and runs now,
	but is still inaccessible from the UI.

	* src/file-manager/fm-directory-view-icons.h:
	* src/file-manager/fm-directory-view-icons.c:
	* src/file-manager/fm-directory-view-list.h:
	* src/file-manager/fm-directory-view-list.c:
	New files. These implement two subclasses of FMDirectoryView.
	Currently the subclasses are trivial; the only code in the 
	subclasses other than boilerplate is the one line that sets 
	the view mode. Later I'll push the rest of the relevant code
	down into the subclasses.
	* src/file-manager/Makefile.am
	Added the four new files to the build.
	* src/file-manager/fm-directory-view.c: (init): Removed the
	call to fm_directory_view_set_mode since the subclasses are
	responsible for this now.
	(setup_base_uri): Don't call get_icon_container for non-icon
	views, as it asserts if you do; this was broken but since
	you couldn't switch to a non-icon view we didn't realize it.
	* src/file-manager/fm-main.c: (make_obj): Now calls either
	fm_directory_view_icons_get_type() or fm_directory_view_list_get_type()
	depending on the goad_id.
	* src/file-manager/ntl-file-manager.goad: Replaced entry for
	ntl_file_manager with two, one for ntl_file_manager_icon_view
	and one for ntl_file_manager_list_view
	* src/ntl-uri-map.c: (athena_navinfo_new): Now it sets up
	the two content views for directories with their new goad ids.

2000-01-10  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.c, libathena/ntl-view-frame.c:
	Fixed mismatch between declared signal array size and actual
	number of signals (this should still be rewritten to follow proper
	style).

	* libathena/ntl-content-view-frame.c,
	libathena/ntl-content-view-frame.h,
	libathena/ntl-meta-view-frame.c,
	libathena/ntl-meta-view-frame.h, libathena/ntl-view-frame.c,
	libathena/ntl-view-frame.h, src/ntl-app.c,
	src/ntl-view-bonobo-control.c, src/ntl-view-bonobo-subdoc.c,
	src/ntl-view-frame-svr.c, src/ntl-view-athena.c,
	src/ntl-view-private.h, src/ntl-view.c, src/ntl-view.h,
	src/ntl-window-msgs.c, src/ntl-window-msgs.h,
	src/ntl-window-state.c, src/ntl-window.c, src/ntl-window.h,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view.h, src/file-manager/fm-main.c:
	Added Eazel copyright to files I've changed non-trivially.

2000-01-10  Darin Adler  <darin@eazel.com>

	* src/ntl-index-panel.c: (athena_index_panel_set_up_label):
	Added workaround to problem with basename and gnome-vfs.

2000-01-10  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-frame.c, libathena/ntl-view-frame.h,
	libathena/ntl-content-view-frame.c,
	libathena/ntl-content-view-frame.h,
	libathena/ntl-meta-view-frame.c,
	libathena/ntl-meta-view-frame.h: Renamed from
	libathena/ntl-view-client.c, libathena/ntl-view-client.h,
	libathena/ntl-content-view-client.c,
	libathena/ntl-content-view-client.h,
	libathena/ntl-meta-view-client.c,
	libathena/ntl-meta-view-client.h.
	* libathena/Makefile.am, libathena/libathena.h: reflect this
	renaming.
	
2000-01-10  Darin Adler  <darin@eazel.com>

	* ntl-window-msgs.c: (athena_window_request_progress_change):
	(athena_window_advance_state):
	(athena_window_switch_to_new_views):
	(athena_window_revert_to_old_views):
	(athena_window_free_load_info):
	(athena_window_end_location_change):
	(athena_window_change_location_2):
	(athena_window_change_location): Got rid of the race condition
	in the existing code and cleaned up the state machine a bit. The
	new code separates the state of the athena window from the state
	of the content view, which makes things a bit simpler.

2000-01-10  John Sullivan  <sullivan@eazel.com>

	Added some of the framework for supporting multiple
	content views for the same uri. More to come later.

	* src/ntl-types.h: added AthenaViewIdentifier struct
	to keep track of iid and human-readable name. Renamed
	AthenaNavigationInfo.content_iid to default_content_iid,
	and added content_identifiers GSList.
	* src/ntl-uri-map.c: 
	(athena_view_identifier_new): New function.
	(athena_view_identifier_free): New function.
	(athena_navinfo_new): Create a human-readable-name
	for each content iid, and store them together in
	content_identifiers list. I included a currently
	unworking "List" choice for the directory case, to
	test the framework.
	(athena_navinfo_free): Free the content_identifiers list.
	* src/ntl-window-msgs.c:
	(athena_window_load_content_view_menu): New function,
	iterates through the content_identifiers list to fill in
	the menu of content view choices. The menu items don't do
	anything yet.
	(athena_window_change_location_internal): Added call to
	athena_window_load_content_view_menu.
	(athena_window_change_location_2): Fixed spelling and
	grammar in a couple of error messages.
	* src/ntl-window.c: (athena_window_constructed): Removed
	"View as (placeholder)" text in menu; now it has no text
	until the actual choices appear. Removed some option-menu-sizing
	trickery that didn't work correctly when items were added later.
	Now the entire menu is replaced when its contents change.
	* src/ntl-window.h: Removed menu_cvtype field; code all uses
	just option_cvtype now.

2000-01-10  Darin Adler  <darin@eazel.com>

	* libathena/Makefile.am, libathena/athena-background.h,
	libathena/athena-background.c,
	libathena/athena-background-canvas-group.h,
	libathena/athena-background-canvas-group.c,
	libathena/athena-lib-self-check-functions.h,
	libathena/athena-lib-self-check-functions.c: Added first cut
	at a new class to manage backgrounds that can be colors, color
	gradients, or tiled images.

	* libathena/Makefile.am, libathena/athena-string.h,
	libathena/athena-string.c: Added functions that manipulate
	strings that allow NULLs to reduce NULL checks in code that
	treats NULL the same as an empty string.

	* libathena/gdk_extensions.c: (athena_gradient_new):
	(athena_gradient_is_gradient):
	(athena_gradient_is_horizontal):
	(athena_gradient_strip_trailing_direction_if_any):
	(athena_gradient_get_start_color_spec):
	(athena_gradient_get_end_color_spec):
	(athena_gradient_set_edge_color): Changed gradient functions to
	allow NULL and treat it the same as an empty string.

	* libathena/gdk_extensions.h: libathena/gdk_extensions.c:
	(athena_gdk_color_parse_with_default):
	(athena_gdk_color_parse_with_white_default): Added alternate
	version of gdk_color_parse that uses a default color instead of
	just returning false. Added self-checks and updated some existing
	self checks at the same time.

	* src/ntl-index-panel.h, src/ntl-index-panel.c: Wholesale
	cleanup and reformatting of AthenaIndexPanel. Fixed a number of
	bugs, including storage leaks, and took first step toward using
	AthenaBackground class.

	* src/ntl-window.c: (athena_window_get_requested_uri):
	Changed this so it works when window->ni is NULL.

	* src/ntl-window.h: Changed index_panel to be a AthenaIndexPanel
	now that the index panel interface uses the class instead of using
	GtkWidget everywhere.

	* src/file-manager/.cvsignore: Added *.la.

	* src/file-manager/fm-directory.c: Minor reformatting to match
	GNOME code style better.

2000-01-10  John Sullivan  <sullivan@eazel.com>

	* src/ntl-index-panel.c: (athena_index_panel_set_up_label):
	Check for NULL filename

2000-01-10  Maciej Stachowiak  <mjs@eazel.com>

	* src/file-manager/.cvsignore: ignore ntl-file-manager rather than
	libntl-file-manager.la

	Made file manager view a CORBA server that lives in a separate
	executable:
	
	* src/file-manager/fm-main.c: New file which includes main()
	function and basic framework to make the file manager an
	executable CORBA server.
	* src/file-manager/ntl-file-manager.goad: gnorba activation file
	for the file manager.
	* src/file-manager/Makefile.am: Build ntl-file-manager as an
	executable rather than a library. Add fm-main.c to build. Install
	ntl-file-manager.goad. Link in appropriate libraries.
	* src/ntl-app.c: Remove athena_make_object() and other vestiges
	of the attempt to be a CORBA server for file manager view objects.
	* src/athena.gnorba: Removed.
	* athena-self-check-functions.c: Remove call to test of
	functions now in the separate ntl-file-manager executable.
	* src/Makefile.am: Don't try to link in file manager. Don't try to
	install athena.goad.

2000-01-10  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-main.c (main): Added missing CORBA_exception_init() call.

2000-01-09  Maciej Stachowiak  <mjs@eazel.com>

	* libathena/ntl-view-client.c, libathena/ntl-view-client.h,
	libathena/ntl-content-view-client.c,
	libathena/ntl-content-view-client.h,
	libathena/ntl-meta-view-client.c,
	libathena/ntl-meta-view-client.h,: Rename AthenaViewClient to
	AthenaViewFrame, AthenaContentViewClient to
	AthenaContentViewFrame, and AthenaMetaViewClient to
	AthenaMetaViewFrame.
	* components/help/hyperbola-nav-tree.c,
	components/history/ntl-history-view.c,
	components/html/ntl-web-browser.c,
	components/websearch/ntl-web-search.c, src/ntl-app.c,
	src/file-manager/fm-directory-view.c,
	src/file-manager/fm-directory-view.h: Reflect the above renaming.

2000-01-09  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c: made dropping a color from the color
	picker set the background accordingly.  It doesn't save the
	meta-data yet, thought
	
2000-01-09  Maciej Stachowiak  <mjs@eazel.com>

	* components/websearch/.cvsignore: Added .deps, .libs,
	ntl-web-search

2000-01-07  Andy Hertzfeld <andy@eazel.com>

	changed the way the index panel gets notified of location changes
	removed the index_panel_connect stuff
	instead, calls index_panel_set_uri directly from athena_window_change_location
	
	* src/ntl-index-panel.c, src/ntl-index-panel.h:
	restructured the code that populates the view with the info,
	added logic to use as large a font as possible for the title
	fixed bug involving the path ending with a slash.
	* src/ntl-window-msgs.c:
	  added explicit call to index_panel_set_uri as mentioned above 
	* src/ntl-window.c
	  removed call to index_panel_connect as mentioned above
	
2000-01-07  John Sullivan  <sullivan@eazel.com>

	Added and deployed utility routine for presenting a
	window (in any current state) to user.

	* libathena/athena-gtk-extensions.h:
	* libathena/athena-gtk-extensions.c: New files
	(athena_gtk_window_present): New function, presents
	a window to user (opens it, brings it to front w/focus)
	regardless of whether it was showing, buried, hidden, or
	minimized.
	* libathena/Makefile.am: added these two new files. Also
	changed ".c" to ".h" for two self-check files in the HEADERS
	list (apparent typo).
	* src/athena-bookmarks-menu.c: (edit_bookmarks_cb):
	Replaced call to athena_bookmarks_window_present with
	call to athena_gtk_window_present.
	* src/athena-bookmarks-window.c:
	* src/athena-bookmarks-window.h:
	(athena_bookmarks_window_present): Deleted this function.
	* src/athena-bookmarks-window.c:
	(create-bookmarks-window): Now calls athena_bookmarks_
	window_restore_geometry just once here, instead of every
	time window was shown.
	* src/ntl-window.c: (athena_about_window_cb):
	Now it keeps around a single About window, instead of
	creating a new one each time (you could litter the screen
	with About windows before). Also removed some obsolete
	gtk_widget_set_sensitive calls.

2000-01-07  John Sullivan  <sullivan@eazel.com>

	Bookmarks window position is now saved & restored within
	a session and across sessions. Some of this work can be
	turned into general-purpose utilities but I didn't do
	that yet (I will when we have a second need for it)

	* src/athena-bookmarklist.c:
	* src/athena-bookmarklist.h:
	(athena_bookmarklist_set_window_geometry):
	(athena_bookmarklist_get_window_geometry): New functions,
	take/return a string representing the window position.
	* src/athena-bookmarklist.c:
	(athena_bookmarklist_load_file):
	(athena_bookmarklist_save_file): read/write xml node for
	window geometry in addition to bookmarks. Also cleaned up
	a couple of leaked results from xmlGetProp and reformatted.
	(set_window_geometry_internal): New utility function.
	* src/athena-bookmarks-menu.c: (edit_bookmarks_cb): Moved
	window-displaying logic out of this routine and into new
	routine athena_bookmarks_window_present(), which is now
	called here.
	* src/athena-boomarks-menu.c:
	* src/athena-boomarks-menu.h:
	(athena_bookmarks_menu_exiting): New function, handles telling
	bookmarks window to save itself when application exits.
	* src/ntl-app.c: (athena_app_exiting): Now calls
	athena_bookmarks_menu_exiting.
	* src/athena.h: Now #includes "athena-bookmarks-menu.h"
	* src/athena-bookmarks-window.h:
	* src/athena-bookmarks-window.c:
	(athena_bookmarks_window_present): New function, handles
	presenting the bookmarks window on screen regardless of current state.
	(athena_bookmarks_window_save_geometry): New function, reads window
	position & size and passes them along to 
	athena_bookmarklist_set_window_geometry for safe-keeping.
	* src/athena-bookmarks-window.c:
	(athena_bookmarks_window_restore_geometry): New function, gets
	window geometry from bookmarklist and sets window size & position
	from it (after adjusting with some sanity checks)
	(create_bookmarks_window): Replaced set_default_size call with
	athena_bookmarks_window_restore_geometry call.
	
	

2000-01-07  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-window.c, src/ntl-index-panel.c: Fix warnings.

2000-01-07  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.h, src/ntl-index-panel.c: new files for index panel class
	Initial bare-bones implementation of index panel still using notebook object instead of custom tabs

	* src/ntl-window.h, src/ntl-window.c:
	just use box instead of pane for athena window content,
	index_panel now responsible for the meta-views allocate and
	install index_panel instead of meta_notebook connect_signals calls
	index_panel so it can connect, too added myself as an author
	
	* src/Makefile.am:
	added index_panel class
	
2000-01-06  Darin Adler  <darin@eazel.com>

	* libathena/Makefile.am,
	libathena/athena-lib-self-check-functions.c,
	libathena/athena-lib-self-check-functions.h,
	libathena/athena-self-checks.c,
	libathena/athena-self-checks.h, src/Makefile.am,
	src/athena-self-check-functions.c,
	src/athena-self-check-functions.h, src/athena-self-checks.c,
	src/athena-self-checks.h, src/ntl-main.c (main),
	src/file-manager/fm-directory.c,
	src/file-manager/fm-vfs-directory.c: Moved self-check framework
	into libathena. Added functions so each check will report if it
	fails instead of just aborting.

	* src/gdk-extensions.c, src/gdk-extensions.h
	(athena_gradient_new, athena_gradient_is_gradient,
	athena_gradient_get_start_color_spec,
	athena_gradient_get_end_color_spec,
	athena_gradient_is_horizontal,
	athena_gradient_set_left_color_spec,
	athena_gradient_set_top_color_spec,
	athena_gradient_set_right_color_spec,
	athena_gradient_set_bottom_color_spec): Added new functions to
	manage a string that specifies a color or gradient, and added
	tests for the new functions.

2000-01-06  John Sullivan  <sullivan@eazel.com>

	* src/ntl-app.h: src/ntl-app.c: (athena_app_exiting):
	New function for doing app-wide cleanup. Moved call to
	athena_prefs_save in here.
	* src/ntl-app.c: (athena_app_destroy_window): Former
	home of call to athena_prefs_save.
	* src/ntl-main.c: (main): After event loop concludes,
	call athena_app_exiting.

2000-01-06  Elliot Lee  <sopwith@redhat.com>

	* libathena/gnome-icon-container.c: Relayout when size changes.

2000-01-06  Andy Hertzfeld  <andy@eazel.com>

	* ntl-window.c: made location bar draggable to be consistent with the others by removing DOCK_LOCKED
	flag
	
2000-01-06  Elliot Lee  <sopwith@redhat.com>

	* libathena/gnome-icon-container.c: Eliminate gratuitous scroll bars.

	* src/ntl-window-msgs.c, components/help/hyperbola-filefmt.c, components/html/gnome-dialogs.c: Bug fixes.

2000-01-06  John Sullivan  <sullivan@eazel.com>

	* src/ntl-prefs.c: added NULLs to array initializers to
	eliminate compiler warnings.

2000-01-06  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-prefs.c, src/ntl-uri-map.c: Implement preferences for
	which meta-views to always load with a page. Loading doesn't seem to quite work.

	* src/ntl-window.c, src/ntl-view.c: Try to fix a crash that
	happens when going to a new page, and a meta view is being
	destroyed in the process. Still crashes.

2000-01-05  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (athena_navinfo_free): Fix warning.

2000-01-05  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-types.h, src/ntl-uri-map.[ch], src/ntl-window-msgs.c, src/ntl-window.[ch]:
	  Add support for the location change state machine and related notifications,
	  to allow much better error handling.
	* src/ntl-view.[ch]: Catch client failures, also allow for active sensing of client death.
	* src/file-manager/fm-directory-view.c: Send progress notifications.
	* components/html/ntl-web-browser.c: Send progress
	notifications. Try to fix crashes caused by ending an error stream
	twice.

	* src/file-manager/fm-icon-cache.c: Update for gdk-pixbuf changes.

2000-01-05  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmarks-window.c: (create_bookmarks_window):
	Remove horizontal scroll bar from list via set_policy.

2000-01-05  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmarks-menu.c: (athena_bookmarks_menu_fill):
	Stopped using GNOMEUIINFO_ITEM_DATA macro, because it doesn't work
	right (on some machines) when there's no pixmap for the item.

2000-01-04  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmarks-menu.c: comment changes only

	* src/athena-bookmarks-window.c:
	(create_bookmarks_window): added padding to "Remove" button
	so it isn't so scrawny.
	(on_remove_button_clicked): Removed item from clist explicitly
	instead of relying on notification that bookmark list changed;
	this correctly moves the selection to the next item instead of
	jumping it back to the top of the list.

2000-01-04  Darin Adler  <darin@eazel.com>

	A couple of quick fixes to make "make check" work again.
	
	* src/file-manager/fm-directory.c (fm_directory_initialize):
	src/file-manager/fm-vfs-directory.c (fm_vfs_directory_initialize):
	Use g_new0 instead of g_new for details structure to better
	mimic what gtk_object_new does.

	* src/file-manager/fm-directory.c (fm_directory_get):
	Added an assert to check that the hash table key is set up
	correctly. This was failing when John did a "make check".

	* src/file-manager/fm-vfs-directory.c (fm_vfs_directory_new):
	Set up the hash table key when creating the object. This
	was causing a failure in "make check".

2000-01-04  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmarks-window.c (create_bookmarks_window):
	Replaced hardwired numbers with constants; specified a minimum
	size separate from default size and changed parameter to
	gtk_window_set_policy to prevent shrinking below minimum size.

2000-01-04  John Sullivan  <sullivan@eazel.com>

	After talking with Sopwith and Darin, removed
	my changes from earlier today. The current framework
	handles bogus URIs better than I thought, though still
	with some known problems. I can't implement the bookmarks
	part until the problems are fixed. And the new functions
	don't seem to be required in any case.
	* libathena/athena-uri-utilities.c: removed file
	* libathena/athena-uri-utilities.h: removed file
	* libathena/Makefile.am: removed these two files
	from the build, and removed GnomeVFS
	* src/ntl-window.c: removed #include for athena-uri-utilitie.h.
	Sopwith had removed the call from (athena_window_goto_uri_cb)
	earlier (without a ChangeLog entry).

2000-01-04  Darin Adler  <darin@eazel.com>

	* src/Makefile.am, src/check-athena,
	src/athena-self-check-functions.h, src/athena-self-checks.c,
	src/athena-self-checks.h, src/ntl-main.c (main): Added self
	checks to athena. The checks are invoked by "make check"
	(actually need to do "make install check" if you changed
	libathena) or by invoking the athena executable with "--check".
	Later, athena-self-checks.h may include various helpful
	functions for use by the self-checking code.

	* src/file-manager/Makefile.am, src/file-manager/fm-directory.c,
	src/file-manager/fm-directory.h,
	src/file-manager/fm-directory-protected.h,
	src/file-manager/fm-vfs-directory.c,
	src/file-manager/fm-vfs-directory.h: Started work on an abstract
	FMDirectory class that provides a model for what's viewed by the
	file manager. Also began work on the FMVFSDirectory concrete child
	class that implements this on top of VFS. It's not hooked up yet,
	and there's a lot that needs to be done before it's ready to use.

	* libathena/gdk-extensions.c, libathena/gdk-extensions.h:
	Renamed functions to use athena_ prefix instead of gdk_
	prefix. Added a tiny bit of self-check code.

	* libathena/athena-gtk-macros.h: Added some macros (that will
	no doubt be controversial) to do some basic GTK object
	boilerplate.

2000-01-04  John Sullivan  <sullivan@eazel.com>

	Made location-entering field handle bogus URIs better
	(next: bookmarks)

	* libathena/athena-uri-utilities.c: new file
	* libathena/athena-uri-utilities.h: new file
	At this point there's just one uri utility function,
	athena_path_known_not_to_exist(), which is a quick
	check for a bogus URI. (It's not guaranteed to return
	TRUE for all bad URIs, just the ones it can tell quickly
	are bogus).
	* libathena/Makefile.am: added these two new files
	to the build, and linked with GnomeVFS (needed for new
	function)
	* src/ntl-window.c: (athena_window_goto_uri_cb):
	If typed path can quickly be rejected, puts an error
	message in the status bar and doesn't try to go there.

	* components/websearch/.cvsignore: added Makefile

2000-01-03  Maciej Stachowiak  <mjs@eazel.com>

	* idl/athena.idl: Added stop_location_change method to AthenaView interface.
	* ntl-view-client.c, ntl-view-client.h (stop_location_change): New
	signal, triggered on receipt of stop_location_change request via
	CORBA.

	* ntl-view.c, ntl-view.h, ntl-view-private.h, ntl-view-athena.c,
	ntl-view-bonobo-control.c, ntl-view-bonobo-subdoc.c
	(athena_view_stop_location_change): Added this function; also
	added implementation to athena view type function table and
	NULL'd out for now for Bonobo control and subdoc view types (need
	to find out if loading is synchronous or asynchronous for those,
	and if there is a way to abort).

	* ntl-window.c: Stop loading for all views when Stop button is
	pressed.
	
	* ntl-window-msgs.c: Enable stop button when we start loading;
	enable Stop button when

	* src/file-manager/fm-directory-view.c: Call
	request_progress_change() when loading is done or an error is
	reached; implement handler for stop_location_change signal.
	
2000-01-03  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-prefs.c: Fix warnings.

	* src/ntl-view.c, src/ntl-view.h, src/ntl-view-frame-svr.c
	(athena_view_notify_location_change,
	athena_view_notify_selection_change, athena_view_load_state,
	athena_view_save_state, athena_view_show_properties): Made
	these functions public and removed the corresponding signals;
	these are operations you do to the AthenaView, not something it
	informs other parts of the program of.
	(request_location_change, request_selection_change,
	request_status_change, request_progress_change): New
	signals. These allow AthenaView to have less dependence on
	AthenaWindow.
	(athena_view_signals): Moved signal number table from view to
	this static variable.
	(athena_view_request_location_change,
	athena_view_request_selection_change,
	athena_view_request_status_change,
	athena_view_request_progress_change): Move to ntl-view.c and
	make them emit the proper signals in lieu of hardcoded handling.
	* src/ntl-window.c, src/ntl-window.h src/ntl-window-msgs.c,
	src/ntl-window-msgs.h, src/ntl-window-state.c
	(request_location_change, request_selection_change,
	request_status_change, request_progress_change): Removed these
	signals; they are operations you do on a AthenaWindow, not
	something it notifies you of, and any usefulness for inheritance
	purposes is purely speculative right now.
	(athena_window_connect_view, athena_window_disconnect_view):
	Use these new helper functions to connect callbacks to
	AthenaView's signals instead of expecting them to just get
	called.
	(athena_view_request_location_change,
	athena_view_request_selection_change,
	athena_view_request_status_change,
	athena_view_request_progress_change): Execute bodies of real_
	versions instead of emitting singals.
	(athena_view_real_request_location_change,
	athena_view_real_request_selection_change,
	athena_view_real_request_status_change,
	athena_view_real_request_progress_change): Removed these.
	Finally, always call athena_winodow_set_content_view or
	athena_window_add_meta_view before calling
	athena_view_load_client to make sure no signals are lost.
	
2000-01-03  Elliot Lee  <sopwith@redhat.com>

	* components/websearch, configure.in: The ten minute version of kwebsearch.
	* components/html/ntl-web-browser.c: Handle forms (POST is untested and probably buggy).
	* src/ntl-uri-map.c: Check result of file_info retrieval. Load web search by default.
	* src/ntl-prefs.[ch]: First (lame) attempt at implementing application preferences.
	* src/ntl-app.c: Load prefs at startup

2000-01-03  John Sullivan  <sullivan@eazel.com>

	Added underline-accelerators to Add Bookmark and
	Edit Bookmarks in Bookmarks menu. This was much
	more difficult than I expected.

	* src/athena-bookmarks-menu.c:
	  (init): Removed all the guts of this function.
	  (athena_bookmarks_menu_new): Now calls
	  athena_bookmarks_menu_fill() on freshly-created menu.
	  (athena_bookmarks_menu_fill): New function, takes over
	  the chore of initially populating the Bookmarks menu.
	  Uses GnomeUIInfo structs to set up Add Bookmarks and
	  Edit Bookmarks so they'll have underline-accelerators.
	  Also they now have tooltip strings (and I added a call
	  to gnome_app_install_menu_hints() to make the tooltips work).

2000-01-03  John Sullivan  <sullivan@eazel.com>

	Fixed memory leaks in bookmarks stuff

	* src/athena-bookmarklist.c: (athena_bookmarklist_delete_item_at):
	  Destroy the bookmark when removing it from list.
	* src/athena-bookmarks-menu.c: 
	  (athena_bookmarks_menu_repopulate):
	  Store an index rather than a bookmark in the menu item, since the
	  item will be destroyed if the menu is reordered.
	  (bookmark_activated_cb): Find bookmark from the index stored in item.

2000-01-03  John Sullivan  <sullivan@eazel.com>

	Started new file for file-related utilities in Athena.

	* libathena/athena-file-utilities.h : new file
	* libathena/athena-file-utilities.c : new file
	* libathena/Makefile.am : added these two new files to the build.

	* src/athena_bookmarklist.c:
	  (athena_bookmarklist_get_file_path): Deployed
	  athena_make_path() and athena_user_directory()

2000-01-03  Darin Adler  <darin@eazel.com>

	* configure.in: Added "-Wall -Wno-unused" to list of warnings.
	It seems to me that at one point we got these from the gnome
	default warnings, but this seems to have stopped. There's no
	harm in repeating them in here and it fixes the problem for
	now, but I'd like to know what happened.
	* components/html/.cvsignore: Added some generated files.
	* components/html/gnome-dialogs.c: (glibwww_progress):
	Replaced an incorrect "%l" in a printf format string with
	the correct "%ld".
	* libathena/.cvsignore: Added some generated files.

2000-01-03  John Sullivan  <sullivan@eazel.com>

	* src/athena_bookmarklist.c:
	  (athena_bookmarklist_save_file): Took out unused local 
	  variables. My compiler didn't notice these because -Wall
	  isn't in our compile flags. Darin is fixing the compile flags.

2000-01-03  Elliot Lee  <sopwith@redhat.com>

	* All files: Update copyright notices.

1999-12-30  John Sullivan  <sullivan@eazel.com>

	* src/athena_bookmarklist.c: (athena_bookmarklist_get_file_path):
	  Create directory that contains bookmarks file if it's not already
	  there. Saving bookmarks would have failed (silently) for anyone
	  who didn't already have a ~/.gnomad directory without this change.

1999-12-30  John Sullivan  <sullivan@eazel.com>

	Made AthenaBookmark use gchar * instead of GString
	since it wasn't using any special GString features.

	* src/athena-bookmark.h: changed definition in struct
	* str/athena-bookmark.c:
	  (athena_bookmark_destroy): changed g_string_free to g_free
	  (init): eliminated g_string_new
	  (athena_bookmark_get_name): replaced bookmark->uri->name
	  with bookmark->name
	  (athena_bookmark_get-uri): replaced bookmark->uri->str
	  with bookmark->uri
	  (athena_bookmark_new): changed initializers from
	  GString style to gchar * style

	Save/restore bookmarks across sessions with XML file.

	* src/athena_bookmarklist.c:
	  (append_bookmark_node): new foreach static function
	  (destroy_bookmark): new foreach static function
	  (athena_bookmarklist_get_file_path): new static function
	  (athena_bookmarklist_load_file): new static function
	  (athena_bookmarklist_save_file): new static function
	  (init): renamed to athena_bookmark_init
	  (class_init): renamed to athena_bookmark_class_init
	  (athena_bookmarklist_contents_changed): now calls
	  athena_bookmarklist_save_file
	  (athena_bookmarklist_init): now calls
	  athena_bookmarklist_load_file

1999-12-30  John Sullivan  <sullivan@eazel.com>

	Linked in GNOME-XML library, since I'll need it for bookmarks.

	* configure.in: defined XML-related macros (copied from gconf)
	* src/Makefile.am: included $(XML_CFLAGS) and $(XML_LIBS)

1999-12-30  John Sullivan  <sullivan@eazel.com>

	The bookmark-editing window is now functional, though simple.
	It allows editing names & uris, reordering bookmarks via
	dragging in the list, and removing bookmarks. Coming next:
	bookmarks persisting across sessions.

	* src/athena-bookmarks-window.h: New file.
	* src/athena-bookmarks-window.c: New file.
	* src/Makefile.am: added athena-bookmarks-window.[ch]
	* src/athena-bookmarklist.h, athena-bookmarklist.c:
	  (athena_bookmarklist_delete_item_at): New function
	  (athena_bookmarklist_insert_item): New function
	* src/athena-bookmarks-menu.c: (init): Removed
	  insensitization of Edit Bookmarks item.

	Added parameter names to prototypes where they were missing

	* src/athena-bookmark.h
	* src/athena-bookmarklist.h
	* src/athena-bookmarks-menu.h

	Fixed bug where activating bookmarks failed in any but the
	first window

	* src/athena-bookmarks-menu.c 
	  (bookmark_activated_cb):
	  (athena_bookmarks_menu_repopulate):
	  Changed bookmark menu items to keep a pointer to their
	  menu, rather than the menu's window, because sometimes
	  the menu's window isn't set when the menu item is created.

1999-12-29  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmarklist.c: 
	  (athena_bookmarklist_contains):
	  changed two g_return_if_fail to g_return_val_if_fail. Eek! I
	  accidentally checked this in yesterday without compiling. I
	  should be tarred and feathered.
	  (athena_bookmarklist_append): Now calls new athena_bookmark_copy
	* src/athena-bookmark.c:
	  (athena_bookmark_copy): New method
	* src/athena-bookmark.h:
	  (athena_bookmark_copy): New method

1999-12-28  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmark.c: 
	* src/athena-bookmarklist.c:
	* src/athena-bookmarks-menu.c:

	  Removed unnecessary g_return_if_fail (obj != NULL) calls
	  since the g_return_if_fail (ATHENA_IS_WHATEVER (obj)) call
	  also handles the NULL case. Also added some more calls of
	  the latter type.

1999-12-28  John Sullivan  <sullivan@eazel.com>

	* src/athena-bookmark.c, src/athena-bookmark.h:			
	  (athena_bookmark_compare_with): 
	  new function, compares two bookmarks for equivalence, used by:
	* src/athena-bookmarklist.c, src/athena-bookmarklist.h: 
	  (athena_bookmarklist_contains): 
	  new function, checks whether a given bookmark is already in the 
	  list, used by:
	* src/athena-bookmarks-menu.c, src/athena-bookmarks-menu.h:
	  (add_bookmark_cb): now silently refuses to add another bookmark
	  for the current location if there's one already in the list.
	  (init): now uses connect_signal_while_alive to avoid nastiness
	  when trying to add a bookmark after one or more windows were closed.
	* src/ntl-window.c: (file_menu_new_window_cb): Now calls
	  athena_app_create_window() instead of creating the new window
	  in line, so that the window count gets properly updated and closing
	  windows works correctly.
	  
1999-12-28  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view.c: (athena_view_load_client):
	  Undid the previous change. It turned out I
	  needed to rebuild the latest ORBit and then
	  the latest gnome-libs. I had built them in
	  the wrong order before.
	  
1999-12-28  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view.c: (athena_view_load_client): cast
	  a const CORBA_char * to a CORBA_char * in call to
	  GNOME_Unknown_query_interface to fix the build.
	  Darin thinks this is a mistake in the API and is
	  investigating fixing the API.

1999-12-22  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-uri-map.[ch]: Add initialization function. Implement scheme mapping.

	* components/history/ntl-history-view.c: Testbed for UIHandler usage.
	* src/ntl-*view*.c: Better error checking, support UIHandler usage.
	* src/ntl-window-msgs.c: Better error checking.
	* src/ntl-window.c: Better error checking, plus move menu creation so that UIHandler usage is easier.

1999-12-21  Elliot Lee  <sopwith@redhat.com>

	* idl/athena.idl, libathena/ntl-view-client.[ch], src/ntl-window*.[ch], src/ntl-view-frame-svr.c:
	  Add request_progress_change notification

	* src/ntl-view-*: Fix/finish various mjs changes: Do the component type abstraction properly,
	lose ntl-view-frame-svr.h, add ntl-view-private.h, add various component type implementations.

	* src/ntl-view-frame-svr.h: Add 'extern' so everyone doesn't get their
	  own vepv variable.

1999-12-20  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-view.h: Remove request_* calls from public API (they are
	just an implementation detail of the fact that AthenaView
	implements a Athena:ViewFrame CORBA server - the athena app
	should not need to call these).

	* src/ntl-view.c: Split all the three way conditional stuff out so
	there is a separate function for each branch of the condition. Not
	a big win yet, but will provide opportunities for more
	refactoring.

	* src/ntl-view-frame-svr.c, ntl-view-frame-svr.h: Move
	implementation of Athena:ViewFrame CORBA server here as much as
	possible.
	* src/ntl-view.c: Remove it from here.
	* src/athena.h: #include ntl-view-frame-svr.h
	* src/Makefile.am: add ntl-view-frame-svr.[ch] to build.
		
	* src/ntl-window.c: Add myself to About box (pout).

	* components/html/ntl-web-browser.c: Fix warnings.	

1999-12-20  Elliot Lee  <sopwith@redhat.com>

	* configure.in, components/Makefile.am: Add HTML component to build.
	* components/help/hyperbola-main.c, components/history/ntl-history-view.c: Make process die when
	  all objects have been destroyed.
	* components/history/ntl-history-view.c: Bug fixes.
	* components/html/*.[ch]: Copy glibwww over, write new AthenaViewClient for HTML browsing.
	* src/ntl-uri-map.c: Cleanup, and use ntl_web_browser as default HTML display engine.
	* src/ntl-view.c: Try to handle Bonobo views for data display.

1999-12-20  John Sullivan  <sullivan@eazel.com>
	* src/athena-bookmark.h,c: new files
	* src/athena-bookmarklist.h,c: new files
	* src/athena-bookmarks-menu.h,c: new files
	* src/Makefile.am: added these six new files to athena_SOURCES
	* src/ntl-window.c: now #includes athena-bookmarks-menu.h
	  (bookmarks_menu_info[]): removed all items except GNOMEUIINFO_END;
	  subtree is added dynamically later.
	  (athena-window-constructed): insert bookmarks menu
	  (athena-window-constructed): add padding to status bar so text
	  isn't jammed against frame.

	The bookmark menu is now limping along. The Add Bookmark item works,
	and the items that get added do the right thing. Edit Bookmarks is
	still insensitive, so there's no way to remove items. Except by
	quitting, because they aren't yet being saved/restored across sessions.
	
1999-12-20  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/fm-icon-cache.c: Add inline RGB data for
	default icon. 
	(fm_icon_cache_load_icon): only
	ref the pixbuf if it exists
	(fm_icon_cache_new): add a new fallback special icon set
	(fm_icon_cache_load_icon): load fallback if the icon name is ""

1999-12-20  Havoc Pennington  <hp@redhat.com>

	* libathena/gnome-icon-container.c (set_kbd_current): return if 
	the icon being set is NULL. This may be fixing a symptom rather
	than a problem.

1999-12-20  Elliot Lee  <sopwith@redhat.com>

	* src/ntl-*.[ch]: Support multiple view types (Athena/View, GNOME/Control, GNOME/Embeddable)
	* src/ntl-window.[ch]: Add athena_window_get_uih()
	* idl/*.idl: Reindent.

1999-12-19  Havoc Pennington  <hp@pobox.com>

	* src/file-manager/desktop-window.c (desktop_window_realize): turn
	on window decorations for debugging
	(desktop_window_init): debug comment-out the no-resize policy

	* src/file-manager/desktop-layout.c (desktop_layout_arrange):
	fool with layout routines
	
	* src/file-manager/desktop-canvas.c
	(desktop_canvas_size_allocate): debugging border to detect layout screwups

	* src/file-manager/desktop-item.c (icon_realize): set the canvas
	item, oops.

1999-12-19  Havoc Pennington  <hp@pobox.com>

	* src/file-manager/desktop-layout.c: don't do an arrangement
	on every change

	* src/file-manager/desktop-canvas.c
	(desktop_canvas_load_desktop_icons): connect to finished_load and
	arrange the icons when we get it. This is a temporary hack,
	because the DesktopLayout engine isn't progressive yet.

	* src/file-manager/fm-directory-list.c
	(fm_directory_list_class_init): add a finished_load signal

	* src/file-manager/desktop-window.c (desktop_window_init): for
	now, don't fill the whole screen so we can see gdb.

	* src/file-manager/desktop-item.c: Move user data accessors into
	the .c file, these are private.	

1999-12-17  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/desktop-item.h: New module, for items 
	on the desktop
	
	* src/file-manager/fm-directory-view.c: Change to use
	get_current_icon_cache() (it wasn't ever freeing the icon cache anyway)

	* src/file-manager/fm-icon-cache.c (fm_get_current_icon_cache):
	function to get a global icon cache, we will share this throughout 
	the program.

1999-12-19  Havoc Pennington  <hp@pobox.com>

	* src/file-manager/desktop-canvas.c
	(desktop_canvas_load_desktop_icons): new function, loads icons 
	from a given directory - don't get too excited, it doesn't yet
	_display_ any icons!

	* src/file-manager/desktop-canvas.h: Add directory list field.

	* src/file-manager/Makefile.am (gnome_desktop_SOURCES): Add
	fm-directory-list.[hc]
	(libntl_file_manager_la_SOURCES): add fm_directory_list.[hc]

	* src/file-manager/fm-directory-list.h, fm-directory-list.c:
	New files, the non-GUI portion of a directory listing. Handles
	loading the dir listing and the icons.

1999-12-17  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window.c, src/ntl-window-msgs.c: Added up, reload, home,
	stop toolbar buttons. Stop is not implemented yet. Up needs more
	thought with respect to various protocols.
	
	* src/ntl-window.c, src/ntl-window.h: Added calls to
	allow/disallow some of the toolbar operations.

1999-12-17  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/fm-directory-view.c: Change to use
	get_current_icon_cache() (it wasn't ever freeing the icon cache anyway)

	* src/file-manager/fm-icon-cache.c (fm_get_current_icon_cache):
	function to get a global icon cache, we will share this throughout 
	the program.

1999-12-17  Havoc Pennington  <hp@redhat.com>

	* src/ntl-window.c (athena_window_realize): set the mini icon.
	(athena_window_class_init): init parent_class and install
	realize method

	* src/ntl-miniicon.c: new files, to set mini icon

1999-12-16  Elliot Lee  <sopwith@redhat.com>
	* libathena/{gdk-extensions.c,gnome-icon-container.c}: Fix warnings
	* libathena/gnome-icon-container.c: Try (unsuccessfully) to get
	  proper icon reflow by calling icon_grid_resize() instead of
	  icon_grid_set_visible_width(), in size_allocate().
	* src/*.*: Add ntl-app.[ch].
	* src/file-manager/desktop-*.c: Fix warnings.
	* src/file-manager/fm-directory-view.c: Remove incorrect warning,
	  allow turning off use of icon_layout altogether.
	
1999-12-16  John Sullivan  <sullivan@eazel.com>

	* src/ntl-window.c:
	* src/ntl-main.c:
	* src/file-manager/fm-directory-view.c:
	Changed evil // comments to /* */. Sorry about that!

	* src/ntl-window.c: added insensitive rudimentary Bookmark menu

1999-12-16  Havoc Pennington  <hp@redhat.com>

	* src/ntl-window-state.c (athena_window_save_state): lookup
	signum before it's first used.
	
	* src/file-manager/desktop-layout.c: new layout module, not yet
	done

	* src/file-manager/desktop-canvas.c (desktop_canvas_init): Create
	the right-click menu.

	* src/file-manager/desktop-menu.c (desktop_menu_new): New module
	to stick the right-click menu code in

1999-12-16  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-window.c: Put meta-views on the right.

	* src/ntl-window.c, src/ntl-main.c, src/ntl-window.h,
	src/ntl-window-msgs.c, src/ntl-window-state.c: Enabled multiple
	main windows and new window menu entry. In the process replaced
	url with uri where appropriate and added
	athena_window_get_requested_uri accessor.

1999-12-16  Darin Adler  <darin@eazel.com>

	* libathena/.cvsignore: Ignore all *.lo instead of listing each.
	* libathena/Makefile.am: Added gdk-extensions.c and $(WERROR).
	* libathena/gdk-extensions.[ch]: Added functions for filling with a
	gradient. Currently they are named gdk_fill_rectangle_with_gradient
	and gdk_interpolate_color, but perhaps the gdk_ prefix should be
	replaced with another one. These functions are not yet tested, but they
	compile and I want to get them in here before I leave for vacation.

	* src/ntl-uri-map.c: (athena_navinfo_new): Some null checks in
	the "click on an item" hack. This was a halfhearted attempt to get
	the program to not segfault when you open icons.
	* src/ntl-window-msgs.c: (athena_window_load_content_view):
	Some g_return_if_fail in here. I'll add a ton more at some point.
	These were part of the halfhearted attempt to get the program to
	not segfault when you open icons.

	* src/file-manager/.cvsignore: Igore all *.lo instead of listing each.

1999-12-16  Elliot Lee  <sopwith@redhat.com>

	* components/history/ntl-history-view.c: Now works.
	* src/ntl-uri-map.c: Duplicate the URI being requested, since we
	don't know what the lifetime of the original value will be.
	* src/ntl-window.c: Use the paned instead of hbox, use create_menus_with_data instead.
	* src/file-manager: Misc warning fixes.
	* src/gtkscrollframe.c: Try to get rid of scrollbar chopping.

1999-12-16  John Sullivan  <sullivan@eazel.com>

	* src/ntl-window.c (file_menu_new_window_cb):
	New, currently empty callback.

	* src/ntl-window.c (file_menu_info[]):
	Added New Window item.
	
	* src/ntl-window.c (edit_menu_info[]):
	Added standard menu items, all unimplemented as of now.
	
	* src/ntl-window.c (help_menu_info[]):
	Added About item, unimplemented as of now.

	* src/ntl-window.c (main_menu[]):
	Now includes edit and help menus.
	
	* src/ntl-window.c (athena_window_constructed):
	Changed the way the toolbar is created, to fix bug
	where Back failed because data parameter was NULL.
	Also desensitized all the new unimplemented menu items.

1999-12-16  Maciej Stachowiak  <mjs@eazel.com>

	* src/file-manager/gnome-desktop.c (main): Quiet some warnings.

1999-12-16  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/gnome-desktop.c (main): warning fixes

	* src/file-manager/desktop-canvas.c
	(desktop_canvas_update_background): start actually honoring
	background settings.

	* src/file-manager/fm-icon-cache.c: add copyright and Emacs magic.

	* src/file-manager/fm-icon-cache.h (fm_icon_cache_get_icon): Run
	egtk-format-protos on these prototypes, add copyright and Emacs magic

1999-12-16  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/desktop-canvas.h: Added API for controlling the 
	background, so we can connect that to the IDL interface.

	* src/file-manager/desktop-canvas.h: New file
	
	* src/file-manager/desktop-window.h: tweaks
	
	* idl/gnome-desktop.idl: Change BackgroundInfo to not be a union.

1999-12-16  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c (directory_load_cb): 
	changed assert to warning

1999-12-16  Elliot Lee  <sopwith@redhat.com>

	* components/help/hyperbola-nav-tree.c: Translate strings.

	* components/history/ntl-history-view.c: Bug fixes, use API
	function for setting meta-view label.

	* libathena/ntl-meta-view-client.[ch]:
	s/meta_view_set_label/meta_view_client_set_label/

	* src/ntl-uri-map.c: Use history view instead of help view as the
	default meta view for now.

	* src/ntl-window.c: As per the comment that was removed from
	ntl-window.c, gnome_app_install_menu_hints() needs to be called
	after_ statusbar creation

	* src/file-manager/fm-directory-view.c: Add more debugging assertions
	and messages.

1999-12-15  John Sullivan  <sullivan@eazel.com>

	* src/ntl-window.c: (athena_window_constructed): Added beginnings
	of a menu bar, and reorganized toolbar a little. There's a rudimentary
	File menu now. The View As option menu moved down to the location bar
	line. This is by no means a complete or final organization, but it's
	a start.
	* (file_menu_close_cb): new callback for File/Close menu item
	* (file_menu_exit_cb): new callback for File/Quit menu item
	* file_menu_info[]: new GNOMEUIINFO struct for File menu
	* toolbar_info[]: new GNOMEUIINFO struct for toolbar

1999-12-15  Elliot Lee  <sopwith@redhat.com>

	* Warning fixes throughout.
	* Use $(WERROR) in Makefiles to get -Werror.

1999-12-15  Darin Adler  <darin@eazel.com>

	* components/help/.cvsignore: Ignore more generated files.
	* components/help/hyperbols-filefmt.c: Fix warnings.
	* components/help/hyperbols-main.c: Fix warnings.
	* components/help/hyperbols-nav-tree.c: Fix warnings.

1999-12-15  Elliot Lee  <sopwith@redhat.com>

	* components/Makefile.am: Turn on compilation of hyperbola component.
	* components/help/*: Compile and run.
	* libathena/ntl-meta-view-client.c: Create & set the property bag if it doesn't exist.
	* src/ntl-uri-map.c: Load the hyperbola nav tree component as a test meta view.
	* src/ntl-view.c: Fill in NULL fields with empty strings, so that ORBit doesn't segfault.
	* src/ntl-window-msgs.c: When creating new meta views, they should
	be meta views and not content views (cut & paste error).
	* src/file-manager/fm-directory-view.c: Don't redisplay every time a new entry comes in.

1999-12-15  Darin Adler  <darin@eazel.com>

	* configure.in: Turned "-Wshadow" and "-Wundef" off for now, since they
	fire in some existing code.
	* gnome-icon-container.c: (handle_icon_button_press): Null out the drag
	variables before sending the activate signal. This makes activating an
	icon with a double-click work without crashing.
	* ntl-main.c: (main): Make critical and warning messages fatal if
	ATHENA_DEBUG is set in the environment. Make sure you have a new
	gnome-vfs that doesn't use g_warning for status messages.
	* ntl-window-msgs.c: (athena_window_change_location_internal):
	Made the history store away the current position as the new "previous"
	instead of storing away the new position. This makes the forward and
	back buttons work better.
	* ntl-window.c: (athena_window_back, athena_window_fwd):
	Had to make a corresponding change here after the change to the
	history mechanism.
	* fm-directory-view.c: (display_selection_info): Some fixes to the
	selection info display: "file"/"files" was backwards, text said "in"
	before the file size, and the display was not cleared when the
	selection was made empty. I still see problems where the selection
	info gets cleared when the window is lowered and then raised.
	 
1999-12-15  Andy Hertzfeld <andy@eazel.com>

	* my first change: changed ntl-window-state.c
	(athena_window_set_initial_state): changed initial path
	to be the user's home directory, getting rid of confusing "localhost"
	 
1999-12-15  Elliot Lee  <sopwith@redhat.com>

	* configure.in: Add --enable-more-warnings and --enable-fatal-warnings switches.
	* src/ntl-uri-map.c: Add comment about functionality-in-waiting. 

1999-12-15  Darin Adler  <darin@eazel.com>

	* libathena/gtkscrollframe.c (gtk_scroll_frame_size_allocate):
	Rolled out my change. I was confused. Elliot had this fixed
	already but I forgot to "make install".

1999-12-15  Darin Adler  <darin@eazel.com>

	* libathena/gtkscrollframe.c (gtk_scroll_frame_size_allocate):
	Fixed overflow problem caused by gint16 local variable.

1999-12-15  Darin Adler  <darin@eazel.com>

	* src/ntl-window.c (athena_window_constructed):
	Fixed signal handler to point to athena_window_goto_url_cb
	instead of athena_window_goto_url. This was causing a bad
	cast when a new URL was typed.

1999-12-15  Darin Adler  <darin@eazel.com>

	* src/ntl-uri-map.c (athena_navinfo_new): Changed back to
	const gchar*. To compile, you need to install the latest
	gnome-vfs.

1999-12-15  Elliot Lee  <sopwith@redhat.com>

	* libathena/gtkscrollframe.c: Fix size_allocate.

1999-12-14  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (athena_navinfo_new): a const char* can't be
	passed where a gchar* is expected.

1999-12-14  Darin Adler  <darin@eazel.com>

	* configure.in: Turned on more warnings, including -Werror.
	  I found one or two real bugs, and made some minor changes
	  to quiet the compiler so I could turn on some useful warnings
	  that triggered on the existing code.
	
	* src/file-manager/dfos-xfer.c: (handle_xfer_vfs_error):
	  Fixed a place where it was calling the gnome error(), but using
	  the parameters from the old gnome-fm error() function.

	* libathena/ntl-meta-view-client.c:
	  (athena_meta_view_set_label): Fixed a place where we
	  were passing in string literals to code that will free them.
	  We need to call g_strdup before passing them to gnome_property_bag_add.

	* libathena/gnome-icon-container.c: Fixed a warning.
	* libathena/gtkscrollframe.c: Fixed a warning.
	* libathena/ntl-content-view-client.c: Fixed a warning.
	* libathena/ntl-view-client.c: Fixed a warning.
	* libathena/ntl-content-view.c: Fixed a warning.
	* src/ntl-main.c: Fixed a warning.
	* src/ntl-meta-view.c: Fixed a warning.
	* src/ntl-types.h: Fixed a warning.
	* src/ntl-view.c: Fixed a warning.
	* src/ntl-window.c: Fixed a warning.
	* src/file-manager/dfos-xfer-progress-dialog.c: Fixed a warning.
	* src/file-manager/fm-icon-cache.c: Fixed a warning.

1999-12-14  Elliot Lee  <sopwith@redhat.com>

	* src/*.c: Restructure the whole AthenaWindow code for sanity's sake.
	* src/ntl-uri-map.[ch]: Instead of just passing in various pieces of information about the old URL,
	  pass in the Athena_NavigationInfo that has to be kept around anyways.
	* idl/athena.idl: Allow a selection to be multiple URI's.

1999-12-14  Darin Adler  <darin@eazel.com>

	* src/ntl-window.c: (athena-window-constructed): Forward-button signal
	was connected with NULL parameter instead of window. Fixed that so it
	has a chance of working.

	* .cvsignore: Ignore more generated files.
	* components/.cvsignore: Ignore more generated files.
	* help/.cvsignore: Ignore more generated files.
	* history/.cvsignore: Ignore more generated files.
	* icons/.cvsignore: Ignore more generated files.
	* idl/.cvsignore: Ignore more generated files.
	* libathena/.cvsignore: Ignore more generated files.
	* src/.cvsignore: Ignore more generated files.
	* src/file-manager/.cvsignore: Ignore more generated files.

1999-12-14  John Sullivan  <sullivan@eazel.com>

	* src/ntl-window.c: (athena-window-constructed): Reordered option menu
	creation code to fix bug where it wasn't sizing itself properly. Changed
	label of placeholder item and desensitized it to make it more obvious that
	it's a non-working placeholder.

1999-12-14  Elliot Lee  <sopwith@redhat.com>

	* configure.in, Makefile.am, icons/: Add icons

	* src/file-manager/fm-directory-view.c: Everything goes inside the scroll-frame, not the view itself.

1999-12-13  Elliot Lee  <sopwith@redhat.com>

	* libnautils/g*.[ch]: Switch from imlib to pixbuf.
	* src/file-manager: Import from gnome-fm.

	* idl/athena.idl: Add a 'main_window' attribute on a ViewFrame, so that views can talk to the main window.

1999-12-10  Elliot Lee  <sopwith@redhat.com>

	* libathena/ntl-meta-view.[ch]: Add a convenience function for
	setting the label.

	* Throughout: Rename the meta view "description" property to "label",
	which more accurately describes its use.

	* components/help: Start turning hyperbola into component.

1999-12-09  Elliot Lee  <sopwith@redhat.com>

	* Start migration from gnome-fm.

src/explorer-location-bar.[ch]:
	Copy over from gnome-fm, change signal to include new URI.
src/ntl-window.c:
	Make AthenaWindow use it.
